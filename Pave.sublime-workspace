{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"fave",
				"faveCircles"
			],
			[
				"pointer",
				"pointer-events"
			],
			[
				"labelLine",
				"labelLineSalaryYears"
			],
			[
				"labelLin",
				"labelLineSalaryYears"
			],
			[
				"feed",
				"feedbackBbox〔variable〕"
			],
			[
				"fee",
				"feedbackBbox"
			],
			[
				"padding",
				"padding-bottom\tproperty"
			],
			[
				"equa",
				"equaLink"
			],
			[
				"btnSizes",
				"btnSizesOption"
			],
			[
				"btnSize",
				"btnSizesDims〔variable〕"
			],
			[
				"forcec",
				"forceCollide〔variable〕"
			],
			[
				"forceGrav",
				"forceGravityMultiplier〔variable〕"
			],
			[
				"forcegr",
				"forceGravityMultiplier〔variable〕"
			],
			[
				"forcegra",
				"forceGravityMultiplier"
			],
			[
				"forceGr",
				"forceGravityMultiplier"
			],
			[
				"forceGra",
				"forceGravityMultiplier〔variable〕"
			],
			[
				"inne",
				"innerWidth"
			],
			[
				"restart",
				"restartSimulation"
			],
			[
				"La",
				"Lawyers"
			],
			[
				"current",
				"currentMode"
			],
			[
				"industries",
				"industriesArray"
			],
			[
				"industrie",
				"industriesArray〔variable〕"
			],
			[
				"industri",
				"industriesArray〔variable〕"
			],
			[
				"indus",
				"industry"
			],
			[
				"legendDiv",
				"legendDiv1"
			],
			[
				"legendButt",
				"legendButtonWidth"
			],
			[
				"aut",
				"auto"
			],
			[
				"point",
				"pointer-events"
			],
			[
				"circl",
				"circleHeight"
			],
			[
				"targ",
				"target='_blank"
			],
			[
				"filter",
				"filteredNodes"
			],
			[
				"rese",
				"resetSimulation"
			],
			[
				"thisSli",
				"thisSliderID"
			],
			[
				"axisY",
				"axisYtranslate"
			],
			[
				"inner",
				"innerWidth〔variable〕"
			],
			[
				"fon",
				"font-size"
			],
			[
				"axisDe",
				"axisDecorationY"
			],
			[
				"align",
				"align-self"
			],
			[
				"get",
				"getElementById〔function〕"
			],
			[
				"paren",
				"parentNode"
			],
			[
				"sliderDiv_",
				"sliderDiv_skillsLang"
			],
			[
				"minitoo",
				"miniTooltipDiv"
			],
			[
				"size",
				"sizeDropdownSpan"
			],
			[
				"siz",
				"sizesDropdown"
			],
			[
				"td",
				"td\tsnippetTransition"
			],
			[
				"sizeDrop",
				"sizeDropdownButton"
			],
			[
				"for",
				"for\tfor (…) {…}"
			],
			[
				"indust",
				"industriesArray〔variable〕"
			],
			[
				"t",
				"timeout\tsetTimeout function"
			],
			[
				"tdec",
				"text-decoration"
			],
			[
				"text-decoration",
				"text-decoration-style"
			],
			[
				"nav",
				"navbar"
			],
			[
				"padd",
				"padding-bottom"
			],
			[
				"colortoo",
				"colorTooltip2"
			],
			[
				"4",
				"49AC52"
			],
			[
				"jobEx",
				"jobExampleCircle"
			],
			[
				"z",
				"z-index"
			],
			[
				"left",
				"leftOrRight"
			],
			[
				"lef",
				"leftOrRight"
			],
			[
				"consol",
				"console.log('favourited"
			],
			[
				"createFutue",
				"createFutureLegend"
			],
			[
				"creat",
				"createFutureLegend"
			],
			[
				"graph",
				"graphModesDiv"
			],
			[
				"moveBottom",
				"moveBottomUp"
			],
			[
				"view",
				"viewBox"
			],
			[
				"subslide",
				"subSliderTitlesArray〔argument〕"
			],
			[
				"slidertitles",
				"sliderTitlesArray〔argument〕"
			],
			[
				"sliderTitles",
				"sliderTitlesArray"
			],
			[
				"create",
				"createLegend"
			],
			[
				"vis",
				"visible"
			],
			[
				"subsli",
				"subSliderArray〔argument〕"
			],
			[
				"data",
				"data-options=〔attribute〕"
			],
			[
				"auto",
				"automationRadiusScale"
			],
			[
				"autom",
				"automationRisk"
			],
			[
				"index",
				"indexIn_sliderArray"
			],
			[
				"subslider",
				"subSliderDivLang〔variable〕"
			],
			[
				"sliderTitl",
				"sliderTitlesArray〔argument〕"
			],
			[
				"sliderTitle",
				"sliderTitlesArrayLang〔variable〕"
			],
			[
				"expand",
				"expandButtons"
			],
			[
				"back",
				"background"
			],
			[
				"slidertitl",
				"sliderTitlesArrayMain〔variable〕"
			],
			[
				"inn",
				"innerWidth〔variable〕"
			],
			[
				"reset",
				"resetFilters"
			],
			[
				"joy",
				"joyrideTour"
			],
			[
				"butt",
				"buttons"
			],
			[
				"slider",
				"sliderArray1"
			],
			[
				"search",
				"searchbutton_PC"
			],
			[
				"futureLeg",
				"futureLegendTitle"
			],
			[
				"skills",
				"skillsLogi"
			],
			[
				"skil",
				"skillsLang"
			],
			[
				"skill",
				"skillsComp"
			],
			[
				"max",
				"maxWage"
			],
			[
				"res",
				"restart"
			],
			[
				"alpha",
				"alphaTarget"
			],
			[
				"slidertitle",
				"sliderTitlesArray〔variable〕"
			],
			[
				"axisL",
				"axisLabelY〔variable〕"
			],
			[
				"legend",
				"legend.transition().duration(500).style(\"opacity"
			],
			[
				"year",
				"yearsStudy"
			],
			[
				"crea",
				"createLegend"
			],
			[
				"colorT",
				"colorTooltipObject"
			],
			[
				"futur",
				"futurePositions"
			],
			[
				"future",
				"futurePositions"
			],
			[
				"enter",
				"enterUpdateCircles"
			],
			[
				"futu",
				"futureMode"
			],
			[
				"gr",
				"graphMode"
			],
			[
				"futureMo",
				"futureModeOff"
			],
			[
				"a",
				"automationRisk"
			],
			[
				"stroke",
				"stroke-width"
			],
			[
				"past",
				"pastPosY"
			],
			[
				"pas",
				"pastPosX"
			],
			[
				"force",
				"forceCollide"
			],
			[
				"origin",
				"originalRadius"
			],
			[
				"dragg",
				"draggedSliderID"
			],
			[
				"temp",
				"tempScale"
			],
			[
				"sli",
				"sliderScaleArray"
			],
			[
				"list",
				"listToDeleteMulti"
			],
			[
				"slidersArr",
				"sliderSVGArray"
			],
			[
				"sliderSc",
				"sliderScaleArray"
			],
			[
				"slid",
				"sliderSVG"
			],
			[
				"sk",
				"skillsMath"
			],
			[
				"drop",
				"dropdown1Title"
			],
			[
				"text",
				"text-align"
			],
			[
				"worker",
				"workersMax"
			],
			[
				"workers",
				"workersMax"
			],
			[
				"indu",
				"industries"
			],
			[
				"head",
				"headersSplit"
			],
			[
				"header",
				"headersSplit"
			],
			[
				"headers",
				"headersString"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "var circles, faveCircles, faveNodes, drag_handler, enterUpdateCircles, graphMode, futureMode, simulation, listToDeleteMulti,\nforceCollide, forceXCombine, forceYCombine, forceGravity, forceXSeparate, forceYSeparate, \nforceXSeparateRandom, forceYSeparateRandom, forceCluster, tick, legend, graphYtranslate, graphXtranslate, currentMode, resetFilters, compressY, width, height, maxWorkers, maxSalary,\nhoverTimeout, currentMode, graphExplain, axisXtranslate, axisYtranslate;\n\nmaxSalary = 132.922; //busted\ngraphXtranslate = 0;\ncurrentMode = 0;\n\nexpandedRadius = $(window).height()*0.045;\ncollapsedRadius = $(window).height()*0.007;\n\nfunction resetFilters(){} // global function holder to resolve scope issue\n// function resetSimulation(){} // global function holder to resolve scope issue\n// function restartSimulation(){} // global function holder to resolve scope issue\n\nfunction getBbox(element) {\n  return document.getElementById(element).getBoundingClientRect()\n}\n\nfunction fillArray(value, len) {\n  if (len == 0) return [];\n  var a = [value];\n  while (a.length * 2 <= len) a = a.concat(a);\n  if (a.length < len) a = a.concat(a.slice(0, len - a.length));\n  return a;\n}\n\nvar favourites = fillArray(0,494); // list of favourited circles, 494 * 0 to start\n\n\nvar circleExpanded = []; // whether or not the current circle is expanded\nvar circlesExpanded = 0;\nvar legendCreated = 0;\nvar graphFirstTime = true;\nvar favesMode = 0;\nvar legendMode = 0;\nvar equalRadius = 9;\nvar nodePadding = 1;\nvar imgRadius = 125;\n\nfunction getSum(total, num) {\n  return total + num;\n}\n\n// sliders to create\n// var sliderArray = [\n// // \"skillsLang\", \"skillsLogi\", \"skillsMath\", \"skillsComp\",\n//     // subskills\n//     \"s1DataAnalysis\",\"s2DecisionMaking\",\"s3FindingInformation\",\"s4JobTaskPlanningandOrganizing\", // reorganize to match lang-log-mat-com\n//     \"s5MeasurementandCalculation\",\"s6MoneyMath\",\"s7NumericalEstimation\",\"s8OralCommunication\",\n//     \"s9ProblemSolving\",\"s10Reading\",\"s11SchedulingorBudgetingandAccounting\",\"s12DigitalTechnology\",\n//     \"s13DocumentUse\",\"s14Writing\",\"s15CriticalThinking\"\n// ];\n\n////////////////////// Hover divs for question marks //////////////////////////////\n\nvar sliderArray = [\n\"skillsLang\", \"skillsLogi\", \"skillsMath\", \"skillsComp\",\n    // subskills\n    \"s8OralCommunication\",\"s10Reading\",\"s14Writing\",\n    \n    \"s4JobTaskPlanningandOrganizing\",\"s9ProblemSolving\",\"s15CriticalThinking\",\"s2DecisionMaking\",\n    \n    \"s5MeasurementandCalculation\",\"s6MoneyMath\",\"s7NumericalEstimation\",\"s11SchedulingorBudgetingandAccounting\",\n      \n    \"s1DataAnalysis\",\"s3FindingInformation\",\"s12DigitalTechnology\",\"s13DocumentUse\"\n];\n\n// var sliderTitlesArray = [\"Communication <p class='sliderText'>and Verbal skills</p>\", \"Logic and <p class='sliderText'>Reasoning skills</p>\", \"Math and <p class='sliderText'>Spatial skills</p>\", \"Computer and <p class='sliderText'>Information skills</p>\",\n//   // subskills\n//     \"Data Analysis\",\"Decision-Making\",\"Finding Information\",\"Job Task Planning and Organizing\",\n//     \"Measurement and Calculation\",\"Money Math\",\"Numerical Estimation\",\"Oral Communication\",\n//     \"Problem Solving\",\"Reading\",\"Scheduling or Budgeting and Accounting\",\"Digital Technology\",\n//     \"Document Use\",\"Writing\",\"Critical Thinking\"\n//     ];\n\nvar sliderTitlesArray = [\n// \"Communication <p class='sliderText'>and Verbal skills</p>\", \"Logic and <p class='sliderText'>Reasoning skills</p>\", \"Math and <p class='sliderText'>Spatial skills</p>\", \"Computer and <p class='sliderText'>Information skills</p>\",\n  // subskills\n    \"Oral Communication\",\"Reading\",\"Writing\",\n    \"Job Task Planning and Organizing\",\"Problem Solving\",\"Critical Thinking\",\"Decision-Making\",\n    \"Measurement and Calculation\",\"Money Math\",\"Numerical Estimation\",\"Scheduling or Budgeting and Accounting\",\n    \"Data Analysis\",\"Finding Information\",\"Digital Technology\",\"Document Use\"\n    ];\n\nvar sliderArrayMain = [\"skillsLang\", \"skillsLogi\", \"skillsMath\", \"skillsComp\"];\n\nvar sliderTitlesArrayMain = [\n\"Communication <p class='sliderText'>and Verbal skills</p>\", \"Logic and <p class='sliderText'>Reasoning skills</p>\", \"Math and <p class='sliderText'>Spatial skills</p>\", \"Computer and <p class='sliderText'>Information skills</p>\",\n];\nvar sliderTitlesArrayMainCompact = [\n\"Communication skills\", \"Logic skills\", \"Math skills\", \"Computer skills\",\n];\n\n// var sliderArrayStats = [\"wage\", \"workers\"];\n\nvar sliderArrayLang = [\"s8OralCommunication\",\"s10Reading\",\"s14Writing\"];\nvar sliderTitlesArrayLang = [\"Oral Communication\",\"Reading\",\"Writing\"];\n\nvar sliderArrayLogi = [\"s2DecisionMaking\",\"s4JobTaskPlanningandOrganizing\",\"s9ProblemSolving\",\"s15CriticalThinking\"];\nvar sliderTitlesArrayLogi = [\"Decision-Making\",\"Job Task Planning and Organizing\",\"Problem Solving\",\"Critical Thinking\"];\n\nvar sliderArrayMath = [\"s5MeasurementandCalculation\",\"s6MoneyMath\",\"s7NumericalEstimation\",\"s11SchedulingorBudgetingandAccounting\"];\nvar sliderTitlesArrayMath = [\"Measurement and Calculation\",\"Money Math\",\"Numerical Estimation\",\"Scheduling, Budgeting, Accounting\"];\n\nvar sliderArrayComp = [\"s1DataAnalysis\",\"s3FindingInformation\",\"s12DigitalTechnology\",\"s13DocumentUse\",];\nvar sliderTitlesArrayComp = [\"Data Analysis\",\"Finding Information\",\"Digital Technology\",\"Document Use\"];\n\n\nvar sliderPositionsArray = []; // array to track all sliders\nvar sliderSVGArray = []; // array of slider SVGs\nvar sliderScaleArray = []; // array of slider scale functions\nvar sliderMulti = [];\nvar handleArray = []; // array of slider handles\nlistToDeleteMulti = []; // filtered IDs\n\nvar filteredIndustries = [];\n\nvar colourLegendMode = 0;\n\n\n// Log Clicked Node & ID using jQuery\n$( \"body\" ).click(function( event ) {\n    console.log( \"clicked: \" + event.target.nodeName, event.target.id);\n});\n\n// init foundation (used for joyride) (redundant?)\n// $(document).foundation()\n\n// d3.selection.prototype.moveToFront = function() {  \n//       return this.each(function(){\n//         this.parentNode.appendChild(this);\n//       });\n//     };\n\n\nvar graph, store; // displayed, stored data\nvar clicked = 0; // on: tooltips don't disappear\n\n// load the data\ncreateViz();\n\nfunction createViz() {\n\nd3.csv(\"NOC_494_interpolated.csv\", function(error, datapoints) {\n  if (error) throw error;\n\n\n\n// Viz dimensions & margins\nvar margin = {top: 20, right: 20, bottom: 50, left: 50};\nwidth = window.innerWidth/1.5, // set chart dimensions\nheight = window.innerHeight/1.5,\n    maxRadius = 30; // Max circle radius\n\n\n\n///////////////// TODO: Mobile version /////////////////\n\nd3.select(window).on(\"resize\", function() {\n  resize();\n  forceCollide = d3.forceCollide($(window).height()*0.009)\n  forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n  simulation.force(\"collide\", forceCollide).force(\"gravity\", forceGravity)\n  \n  if(graphMode==0){\n    simulation.alpha(0.25).alphaTarget(0.001).restart();\n  }\n\n});\n\nfunction resize() {\n  // desktop, tablet, mobile\n  // mobile: min-width: 320\n  // tablet: min-width: 768\n  // desktop: min-width: 1224\n  var w = $(window).width();\n  // console.log(\"width: \"+w+\"px\")\n  var h = $(window).height();\n  // console.log(w+\" x \"+h)\n\n  // reposition #svgCanvas and .annotation-group\n  // 1. recalculate \n  // 2. reposition\n\n  // mobile\n  if(w >= 320){\n    d3.select(\"#searchDiv\")\n    .style(\"width\", function(){\n      var linksBbox = document.getElementById(\"tabletLinks\").getBoundingClientRect()\n      return w - linksBbox.right - 100 + \"px\"\n    }) \n  }else{\n\n  }\n  // tablet\n  if(w >= 768) {\n    d3.select(\"#searchDiv\")\n    .style(\"width\", function(){\n      var linksBbox = document.getElementById(\"links-top\").getBoundingClientRect()\n      return w - linksBbox.right - 110 + \"px\"\n    })\n  }else{\n\n  }\n  // laptop & desktop\n  if(w >= 768) {\n    d3.select(\"#searchDiv\")\n    .style(\"width\", function(){\n      var linksBbox = document.getElementById(\"links-top\").getBoundingClientRect()\n      return w - linksBbox.right - 110 + \"px\"\n    })\n  }else{\n\n  }\n\n  if(w < 768){ // bookmarklet todo: style tablet navbar, decide on 3 breakpoints\n\n    d3.select(\"#btnColours\")\n    .style(\"position\",\"fixed\")\n    .style(\"left\",\"32px\")\n    .style(\"bottom\",\"180px\")\n    d3.select(\"#btnSizes\")\n    .style(\"position\",\"fixed\")\n    .style(\"right\",\"32px\")\n    .style(\"bottom\",\"180px\")\n\n\n    d3.select(\"#sliderDiv_skillsComp\").style(\"bottom\", \"1vh\")\n    d3.select(\"#sliderDiv_skillsMath\").style(\"bottom\", \"1vh\")\n    d3.select(\"#sliderDiv_skillsLang\").style(\"top\", \"5vh\")\n    d3.select(\"#sliderDiv_skillsLogi\").style(\"top\", \"5vh\")\n\n    d3.select(\"#resetFilters\").html(\"<i class='fa fa-undo-alt'></i>\")\n       .style(\"width\",\"85px\") .style(\"margin-bottom\",\"-15px\")\n    d3.select(\"#graph\").html(\"<i class='fa fa-chart-bar'></i>\")\n       .style(\"width\",\"85px\") .style(\"margin-bottom\",\"-15px\")\n\n    $(\"#titleBar\").hide()\n  }else{ // if w > 768 (desktop)\n\n    if(graphMode == 0){\n      d3.select(\"#btnColours\")\n      .style(\"position\",\"fixed\")\n      .style(\"left\",\"45px\")\n      .style(\"bottom\",\"255px\")\n      d3.select(\"#btnSizes\")\n      .style(\"position\",\"fixed\")\n      .style(\"right\",\"45px\")\n      .style(\"bottom\",\"255px\")\n\n      d3.select(\"#sliderDiv_skillsComp\").style(\"bottom\", \"9vh\")\n      d3.select(\"#sliderDiv_skillsMath\").style(\"bottom\", \"9vh\")\n      d3.select(\"#sliderDiv_skillsLang\").style(\"top\", \"9vh\")\n      d3.select(\"#sliderDiv_skillsLogi\").style(\"top\", \"9vh\")\n\n    } else if(graphMode == 1){\n      d3.select(\"#btnColours\")\n      .style(\"position\",\"fixed\")\n      .style(\"left\",\"5px\")\n      .style(\"bottom\",\"180px\")\n      d3.select(\"#btnSizes\")\n      .style(\"position\",\"fixed\")\n      .style(\"right\",\"5px\")\n      .style(\"bottom\",\"180px\")\n    \n      d3.select(\"#sliderDiv_skillsComp\").style(\"bottom\", \"1vh\")\n      d3.select(\"#sliderDiv_skillsMath\").style(\"bottom\", \"1vh\")\n      d3.select(\"#sliderDiv_skillsLang\").style(\"top\", \"5vh\")\n      d3.select(\"#sliderDiv_skillsLogi\").style(\"top\", \"5vh\")\n\n    }\n\n    $(\"#titleBar\").show()\n    d3.select(\"#resetFilters\").html(\"<span style='padding-right: 6px;'>\" +\n      \"Reset Filters</span> <i class='fa fa-undo-alt'></i>\")\n       .style(\"width\",\"185px\") .style(\"margin-bottom\",\"25px\")\n    d3.select(\"#graph\").html(\"<span>Graph View&nbsp&nbsp</span><img width='30px' style='padding-bottom: 3px;' id='graphToggle' src='img/toggle-off.png'></img>\"\n      ).style(\"width\",\"185px\") .style(\"margin-bottom\",\"-15px\")\n  }\n\n  if(w < 1024){\n\n    // d3.select(\"#chart\").style(\"margin-top\",\"-20px\")\n    // d3.select(\"#titleBar\").style(\"margin-top\",\"-10px\")\n    // .style(\"margin-left\",\"20px\")\n    d3.select(\"#viewButtons\").style(\"margin-top\",\"-20px\")\n    d3.select(\"#bottomButtons\").style(\"bottom\",\"7.5vh\")\n    // d3.select(\"#legend\") .style(\"margin-right\",\"25px\")\n    // d3.select(\"#legend\") .style(\"margin-left\",\"60px\")\n    d3.select(\"#sliderDiv_skillsLang\").style(\"left\", \"0vw\")\n    d3.select(\"#sliderDiv_skillsLogi\").style(\"right\", \"1.5vw\")\n    d3.select(\"#sliderDiv_skillsComp\").style(\"left\", \"0vw\")\n    d3.select(\"#sliderDiv_skillsMath\").style(\"right\", \"1.5vw\")\n\n    if(graphMode==1){\n      d3.selectAll(\".imgGraphExplain\").style(\"right\",\"20px\")\n    }\n    // d3.selectAll(\".btn-legend\").style(\"margin\",\"5px\").style(\"float\",\"right\")\n  }else{\n\n   if(graphMode == 0){\n    d3.select(\"#btnColours\")\n    .style(\"position\",\"fixed\")\n    .style(\"left\",$(window).width()*0.14+\"px\")\n    .style(\"bottom\",$(window).height()*0.461+\"px\")\n    d3.select(\"#btnSizes\")\n    .style(\"position\",\"fixed\")\n    .style(\"right\",$(window).width()*0.14+\"px\")\n    .style(\"bottom\",$(window).height()*0.461+\"px\")\n  }else if(graphMode == 1){\n    d3.select(\"#btnColours\")\n    .style(\"position\",\"fixed\")\n    .style(\"left\",\"25px\")\n    .style(\"bottom\",\"180px\")\n    d3.select(\"#btnSizes\")\n    .style(\"position\",\"fixed\")\n    .style(\"right\",\"25px\")\n    .style(\"bottom\",\"180px\")\n\n    d3.select(\".imgGraphExplain\").style(\"right\",\"100px\")\n\n  }\n\n    // d3.select(\"#chart\").style(\"margin-top\",\"\")\n    // d3.select(\"#titleBar\").style(\"margin-top\",\"-0.35vh\")\n    // .style(\"margin-left\",\"9vw\")\n    d3.select(\"#viewButtons\") .style(\"margin-top\",\"10px\")\n    d3.select(\"#bottomButtons\") .style(\"bottom\",\"8vh\")\n    // d3.selectAll(\".btn-legend\").style(\"margin\",\"5px\")\n    d3.select(\"#sliderDiv_skillsLang\").style(\"left\", \"9vw\")\n    d3.select(\"#sliderDiv_skillsLogi\").style(\"right\", \"9vw\")\n    d3.select(\"#sliderDiv_skillsComp\").style(\"left\", \"9vw\")\n    d3.select(\"#sliderDiv_skillsMath\").style(\"right\", \"9vw\")\n  }\n\n  if(typeof circles != \"undefined\"){\n    circles.attr(\"transform\", circleHeight(0, -100+$(window).height()*0.080 )) //flag! need to make equation for width/height ratio\n  }\n\n  // move the axes\n  if(typeof axisG != \"undefined\") {\n\n    axisYtranslate = $(window).height()*-0.110;\n    axisXtranslate = $(window).width()*-0.35+15;\n\n    // axisG.attr(\"transform\",c)\n    // Add the X Axis\n    axisX\n    .attr(\"transform\", circleHeight((axisXtranslate+2),(axisYtranslate*-1.945)) )\n\n    // text label for the x axis\n    axisLabelX\n    .attr(\"transform\", circleHeight((axisXtranslate*0.16),(axisYtranslate*-2.45)))\n\n    // Add the Y Axis\n    axisY\n   .attr(\"transform\",  circleHeight((axisXtranslate), (axisYtranslate*2.52)) )\n     // text label for the y axis\n    axisLabelY\n    .attr(\"y\", \"10vw\")\n    .attr(\"x\", \"-28vh\")\n\n  }\n\n\n  if(window.innerWidth<641){ // Phones\n    margin = {top: 20, right: 12, bottom: 20, left: 12}\n  }\n} // end of resize()\n\n\nfunction handleMouseover(){\n\n  var origWidth = 290,\n  origHeight = 120,\n  zoomWidth = 800,\n  zoomHeight = 547\n\n  d3.select(\"body\")\n  .append(\"div\")\n  .attr(\"id\",\"img-slide00Zoomed\")\n  .attr(\"class\",\"imgZoomed\")\n  .style(\"pointer-events\",\"none\")\n  .style(\"width\",origWidth+\"px\")\n  .style(\"height\",origHeight+\"px\")\n  .style(\"background-size\",origWidth+\"px \"+origHeight+\"px\")\n  .style(\"background-image\",\"url(img/enrolment.jpg)\")\n  .style(\"position\",\"fixed\")\n  .style(\"top\",function(){ return (document.getElementsByClassName(\"slick-current\")[0].getBoundingClientRect().top) + \"px\" })\n  .style(\"left\",function(){ return (document.getElementsByClassName(\"slick-current\")[0].getBoundingClientRect().left) + \"px\" })\n  .style(\"z-index\",\"999\")\n  .style(\"box-shadow\",\"0px 2px 4px 0 rgba(0,0,0,0.4)\")\n  .style(\"opacity\",0)\n  .transition().ease(d3.easeExp).duration(200)\n  .style(\"opacity\",1)\n  .style(\"top\",function(){ return (document.getElementsByClassName(\"slick-current\")[0].getBoundingClientRect().top - ((zoomHeight/2)-(origHeight/2))) + \"px\" }) // move by (half bigger div - half smaller div)\n  .style(\"left\",function(){ return (document.getElementsByClassName(\"slick-current\")[0].getBoundingClientRect().left - ((zoomWidth/2)-(origWidth/2))) + \"px\" })\n  .style(\"width\",zoomWidth+\"px\")\n  .style(\"height\",zoomHeight+\"px\")\n  .style(\"background-size\",zoomWidth+\"px \"+zoomHeight+\"px\")\n}\nfunction handleMouseout(){\n  d3.selectAll(\".imgZoomed\").transition().ease(d3.easeExp).duration(200)\n    .style(\"top\",function(){ return (document.getElementsByClassName(\"slick-current\")[0].getBoundingClientRect().top) + \"px\" })\n    .style(\"left\",function(){ return (document.getElementsByClassName(\"slick-current\")[0].getBoundingClientRect().left) + \"px\" })\n    .style(\"width\",\"290px\")\n    .style(\"height\",\"120px\")\n    .style(\"opacity\",0)\n    .remove()\n}\n// number of distinct clusters\nvar industries = [];\ndatapoints.forEach(function(row){\nif(!industries.includes(row.industry)) industries.push(row.industry)\n}); \nvar m = industries.length;\n\n\n// Actual max workers... need to re-order?\nvar maxWorkers = 120415; // patch: d3.max(datapoints, function(d) { return d.workers })\n\n// Scales\n    // Color scale for 10 categories\n// var color = d3.scaleOrdinal(d3.schemeCategory10)\n//     .domain(d3.range(m))\n\nvar color = d3.scaleOrdinal()\n    .domain(d3.range(m))\n    .range([\n          \"#4B40DD\",\n          \"#D42A2F\",\n          \"#329E33\",\n          \"#BCBC35\",\n          \"#2678B2\",\n          \"#AA3DAA\",\n          \"#FD7F27\",\n          \"#7F7F7F\",\n          \"#8B564C\",\n          \"#29BECE\",\n      ]);\n\nvar colorTooltip = d3.scaleOrdinal()\n    .domain([0,1,2,3,4,5,6,7,8,9])\n    .range([\"white\", // blue\n            \"white\", // orange\n            \"white\", // green\n            \"white\", // red\n            \"white\", // purple\n            \"white\", // brown\n            \"white\", // pink\n            \"white\", // grey\n            \"white\", // yellow-green\n            \"white\" ]) // teal\n\nvar colorTooltip2 = d3.scaleOrdinal()\n    .domain([0,1,2,3,4,5,6,7,8,9])\n    .range([\"#3E35B5\", // blue\n            \"#AE2327\", // \n            \"#29822A\", // green\n            \"#9A9A2C\", // red\n            \"#206392\", // purple\n            \"#8C328C\", // pink\n            \"#D06820\", // orange\n            \"#686868\", // grey\n            \"#72473F\", // brown\n            \"#229CA9\" ]) // teal\n\nvar colorSkillbar = d3.scaleOrdinal()\n    .domain([0,1,2,3,4,5,6,7,8,9])\n    .range([\"#256D1B\", // purple\n            \"#256D1B\", // red\n            \"#244F26\", // green\n            \"#256D1B\", // red\n            \"#244F26\", // blue\n            \"#256D1B\", // pink\n            \"#256D1B\", // orange\n            \"#256D1B\", // grey\n            \"#256D1B\", // brown\n            \"#256D1B\" ]) // teal\n\n// Scale Circle Area = Number of Workers\n// Sqrt scale because radius of a cicrle\nvar radiusScale = d3.scaleSqrt()\n.domain([10, maxWorkers])\n.range([1,maxRadius]);\n\n\n// The largest node for each cluster\nvar clusters = new Array(m);\n\n// Nodes: the data you want to display & filter by\nvar nodes = datapoints.map(function(el) {\n  var i = el.cluster,\n  r = collapsedRadius, // start equal radii\n  d = {\n    id: +el.id,\n    favourited: 0,\n    // transparent: false,\n    cluster: i, \n    radius: r, \n    job: el.job,\n    allTitles: el.allTitles,\n    topSkill1: el.topSkill1,\n    topSkill2: el.topSkill2,\n    topSkill3: el.topSkill3,\n    title1: el.title1,\n    title2: el.title2,\n    title3: el.title3,\n    industry: el.industry, \n    industryNum: +el.industryNum, \n    noc: el.noc, \n    workers: +el.workers,\n    wage: el.wage,\n    salaryMed: el.salaryMed,\n    automationRisk: el.automationRisk,\n    yearsStudy: el.yearsStudy,\n    skillsComp: el.skillsComp,\n    skillsLogi: el.skillsLogi,\n    skillsMath: el.skillsMath,\n    skillsLang: el.skillsLang,\n    s1DataAnalysis: el.s1DataAnalysis,\n    s2DecisionMaking: el.s2DecisionMaking,\n    s3FindingInformation: el.s3FindingInformation,\n    s4JobTaskPlanningandOrganizing: el.s4JobTaskPlanningandOrganizing,\n    s5MeasurementandCalculation: el.s5MeasurementandCalculation,\n    s6MoneyMath: el.s6MoneyMath,\n    s7NumericalEstimation: el.s7NumericalEstimation,\n    s8OralCommunication: el.s8OralCommunication,\n    s9ProblemSolving: el.s9ProblemSolving,\n    s10Reading: el.s10Reading,\n    s11SchedulingorBudgetingandAccounting: el.s11SchedulingorBudgetingandAccounting,\n    s12DigitalTechnology: el.s12DigitalTechnology,\n    s13DocumentUse: el.s13DocumentUse,\n    s14Writing: el.s14Writing,\n    s15CriticalThinking: el.s15CriticalThinking,\n\n};\n  // if there's no cluster i OR if biggest radius yet, set cluster\n  if (!clusters[i] || (d.workers > clusters[i].workers)) clusters[i] = d;\n  return d;\n});\n\n// Maximum values\nmaxWorkers = d3.max(nodes, function(d){ return d.workers});\n\n\n// Graph mode\n    // Toggle for graph mode = off initially\ngraphMode = 0;\n    // store nodes for drawing axes in graph mode\ngraph = nodes;\nstore = nodes;\n\n\n// Simulation, forces, & tick function\n    // Forces for the simulation\nvar forceCollide = d3.forceCollide($(window).height()*0.009)\nvar forceXCombine = d3.forceX().strength(.4)\nvar forceYCombine = d3.forceY().strength(.4)\n// default strength = -30, negative strength = repel, positive = attract\nvar forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n// .strength(function(d) { return -7 * automationRadiusScale(d.automationRisk) })\nvar forceXSeparate = d3.forceX(function(d) {\n  return ((width / m) * d.cluster - width/2 - 20) //try window.innerWidth??\n}).strength(0.3)\nvar forceYSeparate = d3.forceY(function(d) {\n  return ((height / 2) * d.cluster/40 - 50)\n}).strength(0.3)\nvar forceXSeparateRandom = d3.forceX(function(d) {\n  Math.random();\n  return ( (width / m) * 10 * Math.random() - width/2 + 0)\n}).strength(0.4)\nvar forceYSeparateRandom = d3.forceY(function(d) {\n  return ( Math.random() * (height/2) - 150 )\n}).strength(0.3)\n// var forceX5By2 = d3.forceX(function(d) { // 10-grid force example\n//     if (d.cluster/5<1) return d.cluster/5;\n//     if (d.cluster/5>1) return d.cluster/5+1;\n// })\n    // force the circles toward their cluster nodes\n\nvar clusterForce = 3.5;\nfunction forceCluster(alpha) { \n  // alpha = attractor force\n  for (var i = 0, n = nodes.length, node, cluster, k = alpha * 0.12; i < n; ++i) {\n    node = nodes[i];\n    cluster = clusters[node.cluster];\n    node.vx -= (clusterForce*node.x - cluster.x) * k;\n    node.vy -= (clusterForce*node.y - cluster.y) * k;\n  }\n  // for (var i = 0, n = nodes.length, node, cluster, k = alpha * 0.1; i < n; ++i) {\n  //   node = nodes[i];\n  //   cluster = clusters[node.cluster];\n  //   node.vx -= (3*node.x - cluster.x) * k;\n  //   node.vy -= (3*node.y - cluster.y) * k;\n  // }\n  }\n   \n // Update the positions each tick\ntick = function() {\n\n  circles\n  .attr(\"cx\", function(d) { \n\n\n      // if sticky\n      // if(sticky[d.id] == 2){\n      //   // stuck\n      //   return window.innerWidth*0.4 \n      // } else if(sticky[d.id] == 1){\n      //   return window.innerWidth*-0.4\n      // } else {\n      return d.x; \n      // }\n  })\n  .attr(\"cy\", function(d) { \n    return d.y; });\n}\n\n\n    // The force simulation\nsimulation = d3.forceSimulation()\n.nodes(store)\n    // .force(\"center\", d3.forceCenter())\n    .force(\"collide\", forceCollide)\n    .force(\"cluster\", forceCluster)\n    .force(\"gravity\", forceGravity)\n    .force(\"x\", forceXCombine)\n    .force(\"y\", forceYCombine)\n    .on(\"tick\", tick);\n\n\n// Tooltip div (on hover)\nvar div = d3.select(\"body\").append(\"div\").style(\"width\", \"360px\").style(\"border-radius\", \"6px\").attr(\"id\",\"tooltip\")\nvar div2;\nvar miniTooltip;\n\n// Append a group element to the svg & move to center\nvar svg = d3.select(\"#chart\")\n  .append('svg').attr(\"id\",\"svgCanvas\").style(\"position\",\"absolute\").style(\"z-index\", \"-1\")\n\nvar stretch_y = 1.7;\nvar compress_y = 0.7;\nvar skillsBarsXtranslate = -15;\nvar skillsBarsYtranslate = 80;\n// TODO: merge pre, post-filtering\n///////////////////////// Circles, Tooltips (pre-filtering) /////////////////////////////\n\nfunction circleHeight(xtrans,ytrans) {\n  return \"translate(\"+ (window.innerWidth*0.5 + xtrans)+\",\"+ (window.innerHeight*0.12 + 165 + ytrans) +\")\"\n}\n\n// Add the circles with tooltips\ncircles = svg.selectAll(\"circle\")\n.data(nodes)\n.enter().append(\"circle\")\n    .attr(\"r\", 0) // start at 0 radius and transition in\n    .attr(\"transform\", circleHeight(0, -100+$(window).height()*0.080 ) )\n    .attr(\"id\",function(d) { return \"circle_\"+d.id })\n    .attr(\"class\",\"jobCircle\")\n    .style(\"z-index\", -1)\n    .style(\"fill\", function(d) { return color(d.cluster); })\n    // Tooltips\n    .on(\"mouseenter\", function(d) {\n      if (clicked == 1) return;\n      // highlight the current circle\n      d3.selectAll(\"circle\").attr(\"stroke\", \"none\");\n      d3.select(this)\n        .style(\"fill\", \"url(#pattern_\"+d.id+\")\" )\n        // .attr(\"stroke\", \"black\")\n        .style(\"stroke-width\", 2)\n        .attr(\"stroke\", color(d.cluster));\n      showToolTip(0);\n      tooltipMouseover(d);\n      hoverTimeout = setTimeout(function(){\n        tooltipLarge(d)\n        clicked = 1\n      }, 1750)\n      })\n    .on(\"mouseout\", function(d) {\n\n      if(!circleExpanded[d.id] == 1){\n        // //if not stuck\n        // if(!sticky[d.id] == 1) {\n          d3.select(this)\n            .style(\"fill\", color(d.cluster) )\n            // .attr(\"stroke\", \"black\")\n            .style(\"stroke-width\", 2)\n            .attr(\"stroke\", color(d.cluster));\n        // } else { // if stuck\n        //   d3.select(this)\n        //     .style(\"fill\", \"url(#pattern_\"+d.id+\")\")\n        //     .attr(\"r\",\"30px\")\n\n        // }\n      }\n\n      clearTimeout(hoverTimeout)\n      if (clicked == 1) return;\n      clicked = 0;\n      hideToolTip(500)\n      d3.select(this).attr(\"stroke\", \"none\");\n      // div.transition().duration(500).style(\"opacity\", 0)\n\n    })\n    .on(\"click\", function(d) {\n      clearTimeout(hoverTimeout)\n      // click-off\n      if (clicked == 1) { \n        clicked = 0\n        hideToolTip(500)\n      // click-on\n      } else if (clicked == 0) {\n        clicked = 1;\n        tooltipLarge(d);\n       }\n      // hideToolTip(0);\n      // if(typeof div2 != \"undefined\") div2.transition().duration(250).style(\"height\",\"0px\").remove();\n      // tooltipSmall(d);}\n      })\n      \n      // setTimeout(function() {\n      // circles.transition().duration(2500).style(\"opacity\",1)\n        \n      // }, 500)\n\n\n\nd3.select(\"#chart\").on(\"click\", function(d){\n  // hide any subskill sliders\n  hideAll();\n  closeLegends();\n  if (graphMode == 0 && legendMode == 1) {\n    smashTogether(0.4, 0.25);\n  }\n  // if clicked off of a circle\n  if (clicked == 1) { \n    if (d3.event.target.nodeName == \"circle\") {\n      return\n    } else if (d3.event.target.nodeName == \"svg\") { clicked = 0\n    hideToolTip(500) }\n  }\n})\n\n\n\nfunction showToolTip(duration) {\n      d3.select(\"#tooltip\").transition().duration(duration).style(\"opacity\",1)\n      d3.select(\"#tooltip0\").transition().duration(duration).style(\"opacity\",1)\n      d3.select(\"#tooltip1\").transition().duration(duration).style(\"opacity\",1)\n      d3.select(\"#tooltip2\").transition().duration(duration).style(\"opacity\",1)\n      d3.select(\"#tooltip3\").transition().duration(duration).style(\"opacity\",1)\n      d3.select(\"#tooltipBottomDiv\").transition().duration(duration).style(\"opacity\",1)\n      d3.select(\"#tooltipBottomDiv2\").transition().duration(duration).style(\"opacity\",1)\n\n}\n\nfunction hideToolTip(duration) {\n\n      hideHoverImg();\n      // fade out each tooltip contents object\n      d3.select(\"#tooltip\").transition().duration(duration).style(\"opacity\",0)\n      d3.select(\"#tooltip0\").transition().duration(duration).style(\"opacity\",0).remove()\n      d3.select(\"#tooltip1\").transition().duration(duration).style(\"opacity\",0).remove()\n      d3.select(\"#tooltip2\").transition().duration(duration).style(\"opacity\",0).remove()\n      d3.select(\"#tooltip3\").transition().duration(duration).style(\"opacity\",0).remove()\n\n      // shrink each tooltip div\n      // d3.select(\"#tooltipBottomDiv\").transition().duration(duration).style(\"height\",\"0px\").remove()\n      // d3.select(\"#tooltipBottomDiv2\").transition().duration(duration).style(\"height\",\"0px\").remove()\n      \n      d3.select(\"#tooltipBottomDiv2\").transition().duration(duration).style(\"margin-top\",\"-250px\").style(\"opacity\",0).remove()\n      d3.select(\"#tooltipBottomDiv\").transition().duration(duration).style(\"margin-top\",\"-250px\").style(\"opacity\",0).remove()\n      \n      // fade the skill bar rects\n      for (var i = 5; i < 9; i++) {\n        d3.select(\"#rect\"+i).transition().duration(duration).style(\"opacity\",0).remove()\n        d3.select(\"#rect\"+i+\"shadow\").transition().duration(duration).style(\"opacity\",0).remove()\n      }\n\n      // put the original tooltip on top\n      d3.select(\"#moreBtnsContainerDiv\").style(\"z-index\",\"-1\")\n      d3.select(\"#moreBtnsDiv\").style(\"z-index\",\"-1\")\n      \n      // shrink the more buttons div\n      d3.select(\"#moreBtnsContainerDiv\").transition().duration(300).style(\"width\",\"20px\").style(\"opacity\",0).style(\"bottom\",\"20px\")\n      d3.select(\"#moreBtnsDiv\").transition().duration(180).style(\"opacity\",0)\n}\n\n\n\n\nvar defs = svg.append(\"defs\");\n\n// create for all 494? or create on the fly?\n\n  // defs.append(\"pattern\")\n\n  defs.selectAll(\".img-pattern\")\n    .data(datapoints)\n    .enter().append(\"pattern\")\n    .attr(\"class\", \"img-pattern\")\n      .attr(\"id\", function(d) { return \"pattern_\"+d.id} )\n      .attr(\"height\", \"100%\")\n      .attr(\"width\", \"100%\")\n      .attr(\"patternContentUnits\", \"objectBoundingBox\")\n      .append(\"image\")\n      .attr(\"height\", 1)\n      .attr(\"width\", 1)\n      .attr(\"preserveAspectRatio\", \"none\")\n      // .attr(\"xmlns:xlink:href\",\"/img/NOC_images/\"+d.noc+\".jpg\")\n      .attr(\"xlink:href\",function(d) {\n          return \"../../Pave-D3/img/NOC_images/\"+d.noc+\".jpg\"\n        })\n\n// svg.selectAll(\"use\")\n//     .data(datapoints)\n//     .enter().append(\"use\")\n//     .attr(\"xlink:href\",function(d){ return \"#pattern_\"+d.id})\n\n\nfunction createHoverImg(d) {\n\n  var circLeft, circTop;\n  \n  if(graphMode == 0) {\n\n    if(d3.event.pageX < window.innerWidth/2) { // left side\n      circLeft = window.innerWidth*0.5 + (d.x) - 125;\n      circTop = window.innerHeight*0.15 + ((window.innerHeight-300)*(d.y/window.innerHeight));\n\n    }else if (d3.event.pageX >= window.innerWidth/2) { // right side\n      circLeft = window.innerWidth*0.5 + (d.x) + 125;\n      circTop = window.innerHeight*0.15 + ((window.innerHeight-300)*(d.y/window.innerHeight));\n    }\n  }else if(graphMode == 1) {\n\n    if(d3.event.pageX < window.innerWidth/2) { // left side\n      circLeft = window.innerWidth*0.5 + (d.cx) - 125;\n      circTop = window.innerHeight*0.15 + ((window.innerHeight-300)*(d.cy/window.innerHeight));\n\n    }else if (d3.event.pageX >= window.innerWidth/2) { // right side\n      circLeft = window.innerWidth*0.5 + (d.cx) + 125;\n      circTop = window.innerHeight*0.15 + ((window.innerHeight-300)*(d.cy/window.innerHeight));\n    }\n  }\n\n  var imgCircle = d3.select(\"body\").append(\"svg\")\n    .attr(\"class\",\"circleSvg\")\n    .style(\"padding-top\",\"135px\")\n    .style(\"margin-top\",\"-135px\")\n    // .style(\"padding-top\",\"100px\")\n    // .style(\"margin-top\",\"-100px\")\n    .style(\"z-index\",999)\n    .style(\"pointer-events\",\"none\")\n    .attr(\"height\",$(window).height())\n    .attr(\"width\",$(window).width())\n    .style(\"position\",\"fixed\") //bookmark\n    .attr(\"left\",0)\n    .attr(\"top\",0)\n    .append(\"circle\")\n    .attr(\"class\",\"circleImg\")\n    .style(\"z-index\",999)\n    .attr(\"cx\",circLeft)\n    .attr(\"cy\",circTop)\n    .attr(\"fill\", \"url(#pattern_\"+d.id+\")\")\n  // .append(\"image\").attr(\"xlink:href\",\"/img/NOC_images/\"+d.noc+\".jpg\")\n    // .attr(\"cy\",d3.select(function(){return this.parentNode}).attr(\"cy\"))\n    // .attr(\"r\",d3.select(function(d){return d.r}))\n      // .transition().duration(350)\n    .attr(\"r\",imgRadius+\"px\")\n    .style(\"stroke\",\"black\")\n    .style(\"stroke-width\",\"1\")\n    .style(\"position\",\"fixed\") //bookmark\n    .style(\"pointer-events\",\"none\")\n\n    // .attr(\"cx\",)\n}\nfunction hideHoverImg() {\n  d3.selectAll(\".circleSvg\").transition().duration(200).style(\"opacity\",0).remove()\n  d3.selectAll(\".circleImg\").transition().duration(200).style(\"opacity\",0).remove()\n}\n\nfunction pad(num, size) { // add leading 0s to nocs like 0011\n    var s = num+\"\";\n    while (s.length < size) s = \"0\" + s;\n    return s;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar graphMode;\n\n  function tooltipMouseover(d) {\n  // create the hover tooltip\n\n      div.append(\"div\").attr(\"class\", \"tooltip\").attr(\"id\",\"tooltip0\")\n      .style(\"position\",\"absolute\").style(\"z-index\",\"999\")\n      // .style(\"left\", (d3.event.pageX) + 20 + \"px\")\n      // .style(\"top\", (d3.event.pageY - 80) - d.radius + \"px\")\n      .style(\"opacity\",1).style(\"width\",\"360px\")\n       \n      div.transition()\n      .duration(0)\n      .style(\"box-shadow\", \"4px 4px 17px #404040FF\")\n      .style(\"height\", \"auto\")\n      .style(\"position\", \"absolute\")\n      .style(\"z-index\", 999)\n      .style(\"pointer-events\",\"none\")\n\n      var divLeft, divTop;\n      \n      if(graphMode == 0) {\n\n        if(d3.event.pageX < window.innerWidth/2) { // left side\n          divLeft = window.innerWidth*0.5 + (d.x) + 10;\n          divTop = window.innerHeight*0.25 + ((window.innerHeight-300)*(d.y/window.innerHeight));\n        } else if (d3.event.pageX >= window.innerWidth/2) { // right side\n          divLeft = window.innerWidth*0.5 + (d.x) - 370;\n          divTop = window.innerHeight*0.25 + ((window.innerHeight-300)*(d.y/window.innerHeight));\n        }\n\n      }else if(graphMode == 1) {\n\n        if(d3.event.pageX < window.innerWidth/2) { // left side\n          divLeft = window.innerWidth*0.5 + (d.cx) + 5;\n          divTop = window.innerHeight*0.25 + ((window.innerHeight-300)*(d.cy/window.innerHeight));\n        } else if (d3.event.pageX >= window.innerWidth/2) { // right side\n          divLeft = window.innerWidth*0.5 + (d.cx) - 355;\n          divTop = window.innerHeight*0.25 + ((window.innerHeight-300)*(d.cy/window.innerHeight));\n        }\n      \n        // divTop = d.cy + window.innerHeight*0.4 - 150;      \n        // divLeft = d.cx + window.innerWidth/2;\n      }\n\n      // pageY increases downward\n      // at small pageY, approach d3.event.pageY\n      // at large pageY, approach constant window.innerHeight-400\n\n      // Display Hover Tooltip\n      div.html(\"<div id='tooltip1' style='z-index: 999; font-weight: bold; font-size: 20px; padding-top: 7.5px; padding-left: 12.5px; padding-right: 2.5px; font-family: Raleway; color: \" + colorTooltip(d.cluster)\n        +\"; font-weight: bold'>\" + d.job + \"</div>\"\n                +\"<div id='tooltip2' style='color: \" + colorTooltip(d.cluster) +\"; padding-left: 10px; font-size: 15px; font-family: Raleway;'>\"\n        \n                +\"<svg height='55px' style='margin: 10 0;' class='chart' aria-labelledby='title desc' role='img'>\"+\n                  \"<title id='title'>A bar chart showing information</title>\"+\n                  \"<g class='bar'>\"+\n                    \"<rect width='\"+(350*d.salaryMed/maxSalary)+\"' style='fill: #256D1B;' height='15'></rect>\"+\n                    \"<text style='fill: \" + colorTooltip(d.cluster) +\"; font-family: Arial' x='\"+(Math.round((350*d.salaryMed/maxSalary+5)*100)/100)+\"' y='9.5' dy='.35em'>$ \"+Math.round(d.salaryMed*100)/100+\"K per yr</text>\"+\n                  \"</g>\"+\n                  \"<g class='bar'>\"+\n                    \"<rect width='\"+(150*d.yearsStudy/5)+\"' style='fill: #244F26' height='15' y='20'></rect>\"+\n                    \"<text style='fill: \" + colorTooltip(d.cluster) +\"; font-family: Arial' x='\"+(150*d.yearsStudy/5+5)+\"' y='28' dy='.35em'>\"+Math.round(d.yearsStudy*10)/10+\" years of study</text>\"+\n                  \"</g>\"+\n                  \"<g class='bar'>\"+\n                    \"<rect width='\"+(150*d.automationRisk)+\"' height='15' style='fill: #550C18' y='40'></rect>\"+\n                    \"<text style='fill: \" + colorTooltip(d.cluster) +\"; font-family: Arial' x='\"+(150*d.automationRisk+5)+\"' y='48' dy='.35em'>\"+(Math.round(d.automationRisk*100))+\"% risk of machine automation</text>\"+\n                  \"</g>\"+\n                \"</svg>\"                                \n                +\"Top skills:</br>\"\n                +\"<ul class='subtext' style='margin-top: 5px;'><li>\" + d.topSkill1 + \"</li><li>\" + d.topSkill2 + \"</li><li>\" + d.topSkill3 + \"</ul>\"//TOP SKILLS\n     +\"<div id='tooltip3' style='border-bottom-left-radius: 6px; border-bottom-right-radius: 6px; margin-left: -10px; height: 15px; background: \"+ colorTooltip2(d.cluster) +\";'>\"\n                     // Skill minibars\n        +\"<svg id='miniBars' height='10px' style='position: absolute; margin-top: \"+5+\"px; margin-left: 25px;' class='chart' aria-labelledby='title desc' role='img'>\"+\n          \"<title id='title'>A bar chart showing information</title>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(-7-skillsBarsXtranslate)+\"' dy='.35em'>Language</text>\"+\n          \"<rect id='rect1' height='\"+(d.skillsLang*compress_y)+\"' width='18' style='fill: \"+ colorSkillbar(d.cluster) +\";' y='\"+(skillsBarsYtranslate*0.25-(d.skillsLang*compress_y))+\"' x='\"+(5-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(15-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsLang)/10+\"</text>\"+\n          \"</g>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(30-skillsBarsXtranslate)+\"' dy='.35em'>Logic</text>\"+\n          \"<rect id='rect2' height='\"+(d.skillsLogi*compress_y)+\"' width='18' style='fill: \"+ colorSkillbar(d.cluster) +\";' y='\"+(skillsBarsYtranslate*0.25-(d.skillsLogi*compress_y))+\"' x='\"+(40-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(50-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsLogi)/10+\"</text>\"+\n          \"</g>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(100-skillsBarsXtranslate)+\"' dy='.35em'>Computer</text>\"+\n          \"<rect id='rect4' height='\"+(d.skillsComp*compress_y)+\"' width='18' style='fill: \"+ colorSkillbar(d.cluster) +\";' y='\"+(skillsBarsYtranslate*0.25-(d.skillsComp*compress_y))+\"' x='\"+(75-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(120-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsComp)/10+\"</text>\"+\n          \"</g>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(65-skillsBarsXtranslate)+\"' dy='.35em'>Math</text>\"+\n          \"<rect id='rect3' height='\"+(d.skillsMath*compress_y)+\"' width='18' style='fill: \"+ colorSkillbar(d.cluster) +\";' y='\"+(skillsBarsYtranslate*0.25-(d.skillsMath*compress_y))+\"' x='\"+(110-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(85-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsMath)/10+\"</text>\"+\n          \"</g>\"+\n        \"</svg>\"+\n\n        \"<button id='btnSimilarSkills' class='btn btn-lg'\"+\n        \"style='position: absolute; right: 17px; z-index: 999; box-shadow: 3px 3px 3px grey; font-size: 16px; font-weight: bold; margin-top: 11px; font-family: Raleway; background: white; color: \" + color(d.cluster) +\"'>\"+\n        \"Similar jobs</button>\"+\n\n        \"<button id='btnFavourite' class='btn btn-lg'\"+\n        \"style='position: absolute; right: 17px; z-index: 999; box-shadow: 3px 3px 3px grey; font-size: 16px; font-weight: bold; margin-top: 11px; font-family: Raleway; background: white; color: \" + color(d.cluster) +\"'>\"+\n        \"<i class='fa fa-star'></i>Favourite</button>\"+\n\n        \"</div>\")\n        // Move div above mouse by \"top\" + radius and right by \"left\"\n        .style(\"left\", divLeft + \"px\")\n        .style(\"background\", color(d.cluster) )\n        .style(\"top\", (divTop) + \"px\")\n        .style(\"z-index\",999);\n\n        d3.select(\"#btnSimilarSkills\").style(\"margin-top\",\"-110px\").style(\"z-index\",9999)\n        d3.select(\"#btnFavourite\").style(\"margin-top\",\"-60px\").style(\"z-index\",9999)\n        // d3.select(\"#btnSimilarSkills\").style(\"top\",(document.getElementById(\"tooltip3\").getBoundingClientRect.height-120)+\"px\")\n        // d3.select(\"#btnFavourite\").style(\"top\",(document.getElementById(\"tooltip3\").getBoundingClientRect.height-70)+\"px\")\n\n        if(d.favourited==1){\n          d3.select(\"#btnFavourite\")\n          .html(\"<i class='fa fa-star'></i>Favourited\")\n          .style(\"color\",\"#ff9600\")\n        }\n\n        d3.select(\"#btnFavourite\").on(\"click\", function() {\n          d.favourited = 1-d.favourited // toggle status\n\n\n          if(d.favourited==1){\n            favourites[d.id]=1; // add to list of favourites\n\n          // show sidebar if one or more favourites\n            if(d3.select(\"#favesDiv\").style(\"opacity\")==0){\n              d3.select(\"#favesDiv\").transition().duration(500).style(\"opacity\",1).style(\"pointer-events\",\"auto\")\n            }\n\n            d3.select(\"#btnFavourite\")\n            .html(\"<i class='fa fa-star'></i>Favourited\")\n            .style(\"color\",\"#ff9600\")\n          } else {\n\n            favourites[d.id]=0; // remove from list of favourites\n            // if no favourites, hide the sidebar\n            if(favourites.reduce(getSum)==0){\n              d3.select(\"#favesDiv\").transition().duration(500).style(\"opacity\",0).style(\"pointer-events\",\"none\")}\n\n            d3.select(\"#btnFavourite\")\n            .html(\"<i class='fa fa-star'></i>Favourite\")\n            .style(\"color\",color(d.cluster))\n          }\n\n          appendFavourites()\n\n        })\n\n          // set filter levels to this job group's levels\n        d3.select(\"#btnSimilarSkills\").on(\"click\", function() {\n          // for each skill in main skills and sub skills\n          // set skill slider to that level\n          for(var sliderID in sliderArray){\n            sliderPositionsArray[sliderID] = d[sliderArray[sliderID]];\n          }\n\n          // then continue the rest of updateMulti()\n          var filteredNodes = filterAll()\n          //  UPDATE\n          circles = circles.data(filteredNodes, function(d) { return d.id });\n\n          // EXIT\n          circles.exit().transition().duration(500)\n          // exit transition: \"pop\" radius * 1.5 + 5 & fade out\n          .attr(\"r\", $(window).height()*0.03)\n          .styleTween(\"opacity\", function(d) {\n            var i = d3.interpolate(1, 0);\n            return function(t) { return i(t); };\n          })\n          .remove();\n\n          // ENTER (create the circles with all attributes)\n          enterUpdateCircles();\n\n          //bookmarklet : resetSimulation()?\n\n          // reset simulation if graph mode = off\n          if (graphMode == 0) {\n            simulation.nodes(filteredNodes)\n            .force(\"collide\", forceCollide)\n            .force(\"cluster\", forceCluster)\n            .force(\"gravity\", forceGravity)\n            .force(\"x\", forceXCombine)\n            .force(\"y\", forceYCombine)\n            .on(\"tick\", tick);\n            restartSimulation();\n\n            } else if (graphMode == 1) { // else reposition nodes on graph\n\n              switch (mode) {\n\n                case 0:\n                case 1:\n                circles\n                    // x = Years of Study\n                    .attr(\"cx\", function(d){ return d.yearsStudy/maxYearsStudy*width*0.73 - width*0.4 + graphXtranslate})\n                    // y = Wage\n                    .attr(\"cy\", function(d){ return ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate});\n                    break;\n\n                    case 2:\n                    circles\n                    // x = Number of Jobs\n                    .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n                    // y = Wage\n                    .attr(\"cy\", function(d){ return ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate});\n                    break;\n                  // x = Number of Jobs\n                  // y = Automation Risk (same as initial, but using cx to glide into position from previous positions)\n                  case 3:\n                  circles\n                    // x = Number of Jobs\n                    .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n                    // y = Automation Risk (same as initial, but using cx to transition into position from previous positions)\n                    .attr(\"cy\", function(d){ return (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate});\n                    break;\n\n                    case 4:\n                    circles\n                    // x = Number of Jobs\n                    .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n                    // y = Automation Risk\n                    .attr(\"cy\", function(d){ return (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate});\n                    break;\n\n                case 5: // graph mode off\n                circles\n                .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.9 - width/2 + margin.left  + graphXtranslate})\n                .attr(\"cy\", function(d){ return (d.automationRisk)*height - height/2 + graphYtranslate})\n                break;\n              }\n\n            }\n\n          })\n      // div2.transition()\n      // .duration(200)\n      // .style(\"left\", (d3.event.pageX) + 20 + \"px\")\n      // .style(\"top\", (d3.event.pageY - 80) - d.radius + \"px\")\n      // .style(\"opacity\", .9)\n\n      // div2.html(\"test\")\n      createHoverImg(d);\n\n\n  }\n\n  function tooltipLarge(d) {\n\n  div2 = div.style(\"pointer-events\",\"auto\").append(\"div\")\n  .attr(\"id\",\"tooltipBottomDiv\").style(\"background\",colorTooltip2(d.cluster))\n  .style(\"height\",\"0px\").style(\"width\",\"360px\")\n  .style(\"z-index\",-1)\n  .style(\"border-bottom-left-radius\",\"6px\")\n  .style(\"border-bottom-right-radius\",\"6px\")\n  .style(\"pointer-events\",\"auto\");\n\n  d3.select(\"#miniBars\").transition().duration(275)\n  // .style(\"margin-top\",250+\"px\")\n  .style(\"opacity\",0);\n \n  var maxLength = 34\n  //Some job titles from this group are...\n  if(d.title1.length>maxLength){var title1 = d.title1.substring(0,maxLength) + \"...\"\n  }else{var title1 = d.title1}\n  if(d.title2.length>maxLength){var title2 = d.title2.substring(0,maxLength) + \"...\"\n  }else{var title2 = d.title2}\n  if(d.title3.length>maxLength){var title3 = d.title3.substring(0,maxLength) + \"...\"\n  }else{var title3 = d.title3}\n\n  setTimeout(function(){\n    d3.select(\"#tooltipBottomDiv\")\n    .html(\n      \"<div id='tooltipBottomDiv2' style=' z-index: -1; margin-top: -15px; border-bottom-left-radius: 6px; border-bottom-right-radius: 6px; font-size: 16px; padding-top: 5px; padding-left: 10px; font-family: Raleway; color: \" + colorTooltip(d.cluster)\n      +\"; background: \"+ colorTooltip2(d.cluster) +\";'>\"\n\n        +\"<span style='padding-left: 3px;'>Some job titles from this group are:</span></br>\"\n        +\"<ul style='padding-top: 9px;'><li>\"+title1+\"</li><li>\"+title2+\"</li><li>\"+title3+\"</li></ul></div>\"\n\n      // Skill levels\n        +\"<svg height='80px' style='position: absolute; margin-top: \"+(15)+\"px; margin-left: 15px;' class='chart' aria-labelledby='title desc' role='img'>\"+\n        \"<title id='title'>A bar chart showing information</title>\"+\n\n        \"<g class='bar'>\"+                                                                       // y = x if rotated 90deg\n        \"<rect id='rect5shadow' class='shadow' height='\"+(d.skillsLang*stretch_y)+\"' width='18' transform='translate(3,7)' style='box-shadow: 3px 3px 3px black; fill: #30352F;' y='\"+(skillsBarsYtranslate-(d.skillsLang*stretch_y))+\"' x='\"+(5-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<rect id='rect5' height='\"+(d.skillsLang*stretch_y)+\"' width='18' style='box-shadow: 3px 3px 3px black; fill: #256D1B;' y='\"+(skillsBarsYtranslate-(d.skillsLang*stretch_y))+\"' x='\"+(5-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(-5-skillsBarsXtranslate)+\"' dy='.35em'>\"+\n          \"Language</text>\"+\n        // \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(17-skillsBarsXtranslate)+\"'>\"+\n        //   Math.round(10*d.skillsLang)/10+\"</text>\"+\n        \"</g>\"+\n        \"<g class='bar'>\"+\n        \"<rect id='rect6shadow' class='shadow' height='\"+(d.skillsLogi*stretch_y)+\"' width='18' transform='translate(3,7)' style='box-shadow: 3px 3px 3px black; fill: #30352F;' y='\"+(skillsBarsYtranslate-(d.skillsLogi*stretch_y))+\"' x='\"+(40-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<rect id='rect6' height='\"+(d.skillsLogi*stretch_y)+\"' width='18' style='box-shadow: 3px 3px 3px black; fill: #256D1B;' y='\"+(skillsBarsYtranslate-(d.skillsLogi*stretch_y))+\"' x='\"+(40-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(32-skillsBarsXtranslate)+\"' dy='.35em'>\"+\n        \"Logic</text>\"+\n        // \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(52-skillsBarsXtranslate)+\"'>\"+\n        //   Math.round(10*d.skillsLogi)/10+\"</text>\"+\n        \"</g>\"+\n        \"<g class='bar'>\"+\n        \"<rect id='rect7shadow' class='shadow' height='\"+(d.skillsComp*stretch_y)+\"' width='18' transform='translate(3,7)' style='box-shadow: 3px 3px 3px black; fill: #30352F;' y='\"+(skillsBarsYtranslate-(d.skillsComp*stretch_y))+\"' x='\"+(75-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<rect id='rect7' height='\"+(d.skillsComp*stretch_y)+\"' width='18' style='box-shadow: 3px 3px 3px black; fill: #256D1B;' y='\"+(skillsBarsYtranslate-(d.skillsComp*stretch_y))+\"' x='\"+(75-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(67-skillsBarsXtranslate)+\"' dy='.35em'>Computer</text>\"+\n        // \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(87-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsComp)/10+\"</text>\"+\n        \"</g>\"+\n        \"<g class='bar'>\"+\n        \"<rect id='rect8shadow' class='shadow' height='\"+(d.skillsMath*stretch_y)+\"' width='18' transform='translate(3,7)' style='box-shadow: 3px 3px 3px black; fill: #30352F;' y='\"+(skillsBarsYtranslate-(d.skillsMath*stretch_y))+\"' x='\"+(110-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<rect id='rect8' height='\"+(d.skillsMath*stretch_y)+\"' width='18' style='box-shadow: 3px 3px 3px black; fill: #256D1B;' y='\"+(skillsBarsYtranslate-(d.skillsMath*stretch_y))+\"' x='\"+(110-skillsBarsXtranslate)+\"'></rect>\"+\n        \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(102-skillsBarsXtranslate)+\"' dy='.35em'>Math</text>\"+\n        // \"<text class='subtext' style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(122-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsMath)/10+\"</text>\"+\n        \"</g>\"+\n        \"</svg>\"+\n        // +\"<br/>\" \n        \"<span style='margin-left: 231px'></span>\"+\n        \"<span style='margin-top: 10px; margin-left: 220px'></span>\"+\n\n        \"</div>\")\n  d3.select(\"#tooltipBottomDiv\").append(\"div\")\n  .attr(\"id\",\"carousel\").style(\"padding\",\"0px\")\n  .html(\n    \"<div class='carouselTooltip'>\"+\n    \"<div id='carousel1' class='carouselDiv' style='background-image: url(img/enrolment.jpg); height: 120px; width: 290px; background-size: 290px 120px; background-repeat: no-repeat;'>\"+\n    \"</div>\"+\n    \"<div id='carousel2' class='carouselDiv'>Oh wow some more content Lorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis, iste.</div>\"+\n    \"<div id='carousel3' class='carouselDiv'>No way, even more content? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Reiciendis, iste.</div>\"+\n    \"</div>\"\n    )\n\n  // $(document).ready(function(){\n    $('.carouselTooltip').slick({\n      autoplay: true,\n      centerPadding: \"0px\",\n      dots: true,\n      // more settings at http://kenwheeler.github.io/slick/#settings\n    // });\n    });\n\nd3.select(\".slick-current\")\n  .on(\"mouseover\",handleMouseover) // image appends and removes itself on mouseout\n  .on(\"mouseout\",handleMouseout)\n\n\n   }, 275);\n\n  // skill bars\n  d3.select(\"#tooltipBottomDiv\").append(\"svg\")\n  .attr(\"height\",\"280px\").style(\"position\",\"absolute\").style(\"margin-left\",\"25px\")\n  .append(\"rect\").attr(\"height\",(d.skillsLang*compress_y)).attr(\"width\",\"18\")\n  .style(\"fill\",colorSkillbar(d.cluster))\n  .attr(\"y\",(skillsBarsYtranslate*0.25-(d.skillsLang*compress_y))).attr(\"x\",(5-skillsBarsXtranslate))\n  .transition().duration(275)\n    .attr(\"height\", (d.skillsLang*stretch_y))\n    .attr(\"y\",150)\n\n  d3.select(\"#tooltipBottomDiv\").append(\"svg\")\n  .attr(\"height\",\"280px\").style(\"position\",\"absolute\").style(\"margin-left\",\"25px\")\n  .append(\"rect\").attr(\"height\",(d.skillsLogi*compress_y)).attr(\"width\",\"18\")\n  .style(\"fill\",colorSkillbar(d.cluster))\n  .attr(\"y\",(skillsBarsYtranslate*0.25-(d.skillsLogi*compress_y))).attr(\"x\",(40-skillsBarsXtranslate))\n  .transition().duration(275)\n    .attr(\"height\", (d.skillsLogi*stretch_y))\n    .attr(\"y\",150)  \n\n  d3.select(\"#tooltipBottomDiv\").append(\"svg\")\n  .attr(\"height\",\"280px\").style(\"position\",\"absolute\").style(\"margin-left\",\"25px\")\n  .append(\"rect\").attr(\"height\",(d.skillsComp*compress_y)).attr(\"width\",\"18\")\n  .style(\"fill\",colorSkillbar(d.cluster))\n  .attr(\"y\",(skillsBarsYtranslate*0.25-(d.skillsComp*compress_y))).attr(\"x\",(75-skillsBarsXtranslate))\n  .transition().duration(275)\n    .attr(\"height\", (d.skillsComp*stretch_y))\n    .attr(\"y\",150)  \n\n  d3.select(\"#tooltipBottomDiv\").append(\"svg\")\n  .attr(\"height\",\"280px\").style(\"position\",\"absolute\").style(\"margin-left\",\"25px\")\n  .append(\"rect\").attr(\"height\",(d.skillsMath*compress_y)).attr(\"width\",\"18\")\n  .style(\"fill\",colorSkillbar(d.cluster))\n  .attr(\"y\",(skillsBarsYtranslate*0.25-(d.skillsMath*compress_y))).attr(\"x\",(110-skillsBarsXtranslate))\n  .transition().duration(275)\n    .attr(\"height\", (d.skillsMath*stretch_y))\n    .attr(\"y\",150)\n\n  div2.transition().duration(250).style(\"height\",\"250px\");\n\n     };\n\nfunction tooltipSmall(d) {\n  d3.selectAll(\".subtext\").style(\"opacity\",0)\n  d3.select(\"#tooltipBottomDiv2\").transition().duration(250).style(\"height\",\"0px\");\n  d3.select(\"#tooltipBottomDiv\").transition().duration(250).style(\"height\",\"0px\");\n  d3.select(\"#tooltipContent\").transition().duration(250).style(\"height\", \"100px\");\n      setTimeout(function() {\n              div.html(\"<div style='z-index: 99; font-weight: bold; font-size: 20px; padding-top: 7.5px; padding-left: 12.5px; font-family: Raleway; color: \" + colorTooltip(d.cluster)\n        +\"; font-weight: bold'>\" + d.job + \"</div>\"\n                +\"<div id='tooltip2' style='color: \" + colorTooltip(d.cluster) +\"; padding-left: 10px; font-size: 15px; font-family: Raleway;'>\"\n        \n                +\"<svg height='55px' style='margin: 10 0;' class='chart' aria-labelledby='title desc' role='img'>\"+\n                  \"<title id='title'>A bar chart showing information</title>\"+\n                  \"<g class='bar'>\"+\n                    \"<rect width='\"+(350*d.salaryMed/maxSalary)+\"'  style='fill: #256D1B;'height='15' ></rect>\"+\n                    \"<text style='fill: \" + colorTooltip(d.cluster) +\"; font-family: Raleway' x='\"+(Math.round((350*d.salaryMed/maxSalary+5)*100)/100)+\"' y='9.5' dy='.35em'>$ \"+Math.round(d.salaryMed*100)/100+\"K per yr</text>\"+\n                  \"</g>\"+\n                  \"<g class='bar'>\"+\n                    \"<rect width='\"+(150*d.yearsStudy/5)+\"' style='fill: #244F26' height='15' y='20'></rect>\"+\n                    \"<text style='fill: \" + colorTooltip(d.cluster) +\"; font-family: Raleway' x='\"+(150*d.yearsStudy/5+5)+\"' y='28' dy='.35em'>\"+Math.round(d.yearsStudy*10)/10+\" years of study</text>\"+\n                  \"</g>\"+\n                  \"<g class='bar'>\"+\n                    \"<rect width='\"+(150*d.automationRisk)+\"' height='15' style='fill: #550C18' y='40'></rect>\"+\n                    \"<text style='fill: \" + colorTooltip(d.cluster) +\"; font-family: Raleway' x='\"+(150*d.automationRisk+5)+\"' y='48' dy='.35em'>\"+(Math.round(d.automationRisk*100))+\"% risk of machine automation</text>\"+\n                  \"</g>\"+\n                \"</svg>\"             \n                +\"Top skills:</br>\"\n                +\"<ul class='subtext' style='margin-top: 5px;'><li>\" + d.topSkill1 + \"</li><li>\" + d.topSkill2 + \"</li><li>\" + d.topSkill3 + \"</ul>\"//TOP SKILLS\n                     \n     +\"<div style='border-bottom-left-radius: 6px; border-bottom-right-radius: 6px; height: 15px; background: \"+ colorTooltip2(d.cluster) +\";'>\"\n                     // Skill minibars\n        +\"<svg id='miniBars' height='10px' style='position: absolute; margin-top: \"+5+\"px; margin-left: 25px;' class='chart' aria-labelledby='title desc' role='img'>\"+\n          \"<title id='title'>A bar chart showing information</title>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(-7-skillsBarsXtranslate)+\"' dy='.35em'>Language</text>\"+\n          \"<rect id='rect1' height='\"+(d.skillsLang*compress_y)+\"' width='18' style='fill: \"+ colorSkillbar(d.cluster) +\";' y='\"+(skillsBarsYtranslate*0.25-(d.skillsLang*compress_y))+\"' x='\"+(5-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(15-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsLang)/10+\"</text>\"+\n          \"</g>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(30-skillsBarsXtranslate)+\"' dy='.35em'>Logic</text>\"+\n          \"<rect id='rect2' height='\"+(d.skillsLogi*compress_y)+\"' width='18' style='fill: \"+ colorSkillbar(d.cluster) +\";' y='\"+(skillsBarsYtranslate*0.25-(d.skillsLogi*compress_y))+\"' x='\"+(40-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(50-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsLogi)/10+\"</text>\"+\n          \"</g>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(100-skillsBarsXtranslate)+\"' dy='.35em'>Computer</text>\"+\n          \"<rect id='rect3' height='\"+(d.skillsComp*compress_y)+\"' width='18' style='fill: #256D1B;' y='\"+(skillsBarsYtranslate*0.25-(d.skillsComp*compress_y))+\"' x='\"+(75-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(120-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsComp)/10+\"</text>\"+\n          \"</g>\"+\n          \"<g class='bar'>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-size: 16px; font-family: Raleway' x='-80' y='\"+(65-skillsBarsXtranslate)+\"' dy='.35em'>Math</text>\"+\n          \"<rect id='rect4' height='\"+(d.skillsMath*compress_y)+\"' width='18' style='fill: #256D1B;' y='\"+(skillsBarsYtranslate*0.25-(d.skillsMath*compress_y))+\"' x='\"+(110-skillsBarsXtranslate)+\"'></rect>\"+\n          // \"<text style='fill: \" + colorTooltip(d.cluster) +\"; transform: rotate(-90deg); font-family: Raleway' x='\"+(-75)+\"' y='\"+(85-skillsBarsXtranslate)+\"'>\"+Math.round(10*d.skillsMath)/10+\"</text>\"+\n          \"</g>\"+\n        \"</svg>\"\n        +\"</div>\")\n\n            }, 200);\n\n  d3.select(\"#rect5\")\n  .transition().duration(200)\n    .attr(\"height\", (d.skillsLang*compress_y))\n    .attr(\"y\",-100)  \n\n  d3.select(\"#rect6\")\n  .transition().duration(200)\n    .attr(\"height\", (d.skillsLogi*compress_y))\n    .attr(\"y\",-100)  \n\n  d3.select(\"#rect7\")\n  .transition().duration(200)\n    .attr(\"height\", (d.skillsComp*compress_y))\n    .attr(\"y\",-100)  \n\n  d3.select(\"#rect8\")\n  .transition().duration(200)\n    .attr(\"height\", (d.skillsMath*compress_y))\n    .attr(\"y\",-100)\n\n  d3.select(\"#rect5shadow\")\n  .transition().duration(150)\n    .attr(\"height\", (d.skillsLang*compress_y))\n    .attr(\"y\",-100)  \n\n  d3.select(\"#rect6shadow\")\n  .transition().duration(150)\n    .attr(\"height\", (d.skillsLogi*compress_y))\n    .attr(\"y\",-100)  \n\n  d3.select(\"#rect7shadow\")\n  .transition().duration(150)\n    .attr(\"height\", (d.skillsComp*compress_y))\n    .attr(\"y\",-100)  \n\n  d3.select(\"#rect8shadow\")\n  .transition().duration(150)\n    .attr(\"height\", (d.skillsMath*compress_y))\n    .attr(\"y\",-100)\n}\n\n// on start, transition in radii from 0\ncircles.transition()\n.duration(2000)\n.delay(function(d, i) { return i * 4})\n.attrTween(\"r\", function(d) {\n  var i = d3.interpolate(0, collapsedRadius);\n  return function(t) { return d.radius = i(t); };\n})\n.styleTween(\"opacity\", function() {\n  var i = d3.interpolate(0, 1);\n  return function(t) { return i(t) }\n});\n\n\n// Enable dragging\nfunction dragstarted(d) { // no dragging in graph mode\n\n  // if clicking on the chart, restart the simulation\n  if (!d3.event.active && graphMode == 0) simulation.alphaTarget(0.001).restart();    \n\n    d.fx = d.x; // drag\n    d.fy = d.y;\n\n  // if dragged to right side, becomes sticky\n  // if (d.fx < window.innerWidth*0.8){\n    // sticky[d.id] = 1\n  // }\n\n}\n\nfunction dragged(d) {\n  d3.select(this).classed(\"fixed\", d.fixed = true);\n\n\n  // // if in right sticky zone\n  // if(d.x > window.innerWidth*0.4) { \n  //   // stick!\n  //   sticky[d.id] = 2 // right side\n  //   d3.select(this).style(\"fill\", function(d) { return \"url(#pattern_\"+d.id+\")\" }).attr(\"stroke-width\", \"2px\").attr(\"r\",\"30px\")\n  // // if in left sticky zone\n  // } else if (d.x < window.innerWidth*-0.4){\n  //   sticky[d.id] = 1 // left side\n  //   d3.select(this).style(\"fill\", function(d) { return \"url(#pattern_\"+d.id+\")\" }).attr(\"stroke-width\", \"2px\").attr(\"r\",\"30px\")\n  // }\n\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active && graphMode == 0) simulation.alphaTarget(0.001);\n  d.fx = null;\n  d.fy = null;\n} \n\ndrag_handler = d3.drag()\n.on(\"start\", dragstarted)\n.on(\"drag\", dragged)\n.on(\"end\", dragended);\n\ndrag_handler(circles);\n\n\n\n///////////////////////////////// Buttons ////////////////////////////////////\n\nvar legendButtonHeight = 60,\n    legendButtonWidth = 85;\n\n/////////////// COLOUR LEGEND button\n\nindustriesArray = [\n'Natural resources and agriculture',\n'Management',\n'Art, culture, recreation and sport',\n'Trades, transport and equipment ops',\n'Business, finance and administration',\n'Education, law, social, community, government',\n'Natural and applied sciences',\n'Manufacturing and utilities',\n'Health',\n'Sales and services',\n]\n\nd3.select(\"#btnColours\").on(\"click\", function() {\n  expandColoursLegend()\n})\n\nd3.select(\"#btnColours\").on(\"mouseover\", function() {\n  d3.select(\"#btnColours\").style(\"background\",\"#eaeaea\")\n})\nd3.select(\"#btnColours\").on(\"mouseout\", function() {\n  d3.select(\"#btnColours\").style(\"background\",\"white\")\n})\n\nfunction expandColoursLegend() {\n  colourLegendMode = 1\n  if (graphMode == 0){\n    // split the circles horizontally by cluster\n    simulation\n    .force(\"x\", forceXSeparate).alpha(0.4)\n    .force(\"y\", forceYSeparate).alpha(0.4)\n      .alphaTarget(0.001) // cool down to minimal temperature\n      .restart()\n\n    setTimeout(function(){\n      createAnnotations(\"colours\")\n\n      d3.selectAll(\".annotation-note-bg\")\n        .style(\"fill\",\"white\")\n        .style(\"fill-opacity\",0.7)\n\n      d3.selectAll(\".annotation-group\")\n        // .style(\"font-size\",\"20px\")\n        .style(\"font-weight\",\"bold\")\n        .style(\"fill\",\"black\")\n      d3.selectAll(\".annotation-note-label\")\n        .style(\"background\",\"white\").style(\"opacity\",1)\n    }, 3000)\n  };\n\n  legendMode = 1;\n\n  // d3.select(\"#btnColours\").on(\"click\",\"\")\n  // fade Size Legend button \n  // d3.select(\"#btnSizes\").transition().duration(250).style(\"opacity\",0)\n\n  // var bboxColours = document.getElementById(\"btnColours\").getBoundingClientRect()\n  // var bboxMath = document.getElementById(\"sliderDiv_skillsMath\").getBoundingClientRect()\n\n  // move size legend button right\n  d3.select(\"#btnSizes\").transition().duration(500)\n  .style(\"right\",$(window).width()*0.03+\"px\")\n\n  d3.select(\"#btnColours\").transition().duration(500)\n  .style(\"left\",$(window).width()*0.07+\"px\")\n  .style(\"opacity\",0.01)\n  \n  // expand colour legend\n  d3.select(\"body\")\n    .append(\"div\")\n  .attr(\"id\",\"legendDivColours\")\n    .style(\"font-weight\",\"bold\")\n    .style(\"opacity\",0)\n    .style(\"border-radius\",\"6px\")\n    .style(\"border\",\"2px solid rgba(73, 172, 82, 0)\")\n    .style(\"bottom\",function(){\n      if($(window).width() >= 768){\n        return ($(window).height()*0.5 - 275/2) +\"px\"\n      }else if($(window).width() >= 320){\n        return \"100px\"\n      }\n    })\n    .style(\"left\",function() {\n      if($(window).width() >= 1024){\n        return $(window).width()*0.06+\"px\"\n      }else if($(window).width() >= 768){\n        return $(window).width()*0.01+\"px\"\n      }else if($(window).width() >= 320){\n        return $(window).width()*0.06+\"px\"\n      }\n    })\n    .transition().duration(375)\n    .style(\"left\",function() {\n      if($(window).width() >= 768){\n        return $(window).width()*0.03+\"px\"\n      }else if($(window).width() >= 320){\n        return $(window).width()*0.06+\"px\"\n      }\n    })\n    .style(\"opacity\",0.9)\n    .style(\"background\",\"white\")\n    .style(\"border\",\"2px solid rgba(73, 172, 82, 1)\") // fade in border\n    .style(\"bottom\",function(){\n      if($(window).width() >= 768){\n        return ($(window).height()*0.5 - 275/2) +\"px\"\n      }else if($(window).width() >= 320){\n        return \"170px\"\n      }\n    })\n\n  d3.select(\"#btnColours\").style(\"margin-right\",\"18px\")\n\n  svgColoursLegend = d3.select(\"#legendDivColours\")\n      .html(\"\")\n      .append(\"svg\").attr(\"id\",\"svgColoursLegend\")\n        .style(\"margin-top\",\"5px\")\n        .style(\"background\",\"white\")\n        .style(\"height\", \"270px\")\n    \n  legendCircles = d3.select(\"#svgColoursLegend\").selectAll(\"circle\").data(industriesArray).enter().append(\"circle\")\n      .attr(\"r\", 0) // start at 0 radius and transition in\n      .attr(\"class\",\"legendCirc\")\n      .transition().duration(450).attr(\"r\", 10)\n      .attr(\"id\",function(d,i) { return \"legendCircle_\"+i } )\n      .attr(\"transform\", function(d,i) { return \"translate(\"+\"14\"+\",\"+(12+i*27)+\")\" } ) //flag! need to make equation for width/height ratio\n      .style(\"fill\", function(d,i) { return color(i); })\n      .attr(\"opacity\",  function(d,i) {\n        if( filteredIndustries.includes(+i) ) { \n          return 0.1 }\n        else{ \n          return 1 }\n      })\n\n  legendTexts = svgColoursLegend.selectAll(\"text\").data(industriesArray).enter().append(\"text\")\n      .attr(\"text-anchor\",\"left\")\n      .attr(\"transform\", function(d,i) { return \"translate(\"+\"32\"+\",\"+(17+i*27)+\")\" } )\n      .text(function(d) { return d })\n      .style(\"opacity\",0).transition().duration(600).style(\"opacity\",1)\n  \n      // append rect with on click event\n  legendFilterCircles = d3.select(\"#svgColoursLegend\").selectAll(\"rect\").data(industriesArray).enter().append(\"rect\")\n        .attr(\"id\",function(d,i){ return i+\"_filterColoursRect\" })\n        .attr(\"class\",\"legendBtn\")\n        // .style(\"fill\",\"black\")\n        .attr(\"onclick\",function(d,i) { return \"filterIndustry(\"+(this.id.substring(0,1))+\")\" })\n        .attr(\"width\",\"320px\")\n        .attr(\"height\",\"20px\")\n        .attr(\"transform\", function(d,i) { return \"translate(\"+\"4\"+\",\"+(1+i*27)+\")\" } )\n\n\n\n  if (graphMode == 0){\n    d3.select(\"#legendDivColours\").style(\"opacity\",0.9)\n    // d3.selectAll(\".legendCirc\").style(\"opacity\",1)\n  }\n\n} // end expandColoursLegend()\n\nfunction closeLegends() {\n  colourLegendMode = 0\n  d3.selectAll(\".annotation-group\").transition().duration(500).style(\"opacity\",0).remove()\n\n    if (graphMode == 0) {\n    smashTogether(0.4, 0.25);\n    }\n\n  legendMode = 0;\n  // reset Size Legend button\n  d3.select(\"#btnSizes\").transition().duration(300)\n  .style(\"right\",function(){\n    if($(window).width() >= 1024){\n      if(graphMode == 1){\n        return \"25px\";\n      }else{\n        return $(window).width()*0.14+\"px\";\n      }\n    }else if($(window).width() >= 768){\n      if(graphMode == 1){\n        return \"5px\"\n      }else{\n        return 45+\"px\";\n      }\n    }else if($(window).width() >= 320){\n      if(graphMode == 1){\n        return \"5px\"\n      }else{\n        return \"32px\";\n      }\n    }\n  }).style(\"opacity\",1)\n    // .style(\"height\",legendButtonHeight+\"px\")\n  .style(\"width\",legendButtonWidth+\"px\").style(\"border-width\",\"3px\")\n    \n    setTimeout(function() {\n      d3.select(\"#btnSizes\")\n      .html(\"Size<br>Legend\")\n      }, 300);\n\n  // reset Colour Legend button\n  d3.select(\"#btnColours\")\n  .transition().duration(300).style(\"opacity\",1)\n  .style(\"left\",function(){\n    if($(window).width() >= 1024){\n      if(graphMode == 1){\n        return \"25px\";\n      }else{\n        return $(window).width()*0.14+\"px\";\n      }\n    }else if($(window).width() >= 768){\n      if(graphMode == 1){\n        return \"5px\"\n      }else{\n        return 45+\"px\";\n      }\n    }else if($(window).width() >= 320){\n      if(graphMode == 1){\n        return \"5px\"\n      }else{\n        return \"32px\";\n      }\n    }\n  })\n  // .style(\"width\", legendButtonWidth+\"px\")\n  .style(\"height\", legendButtonHeight+\"px\").style(\"border-width\",\"3px\")\n\n    setTimeout(function() {\n      d3.select(\"#btnColours\")\n      .html(\"Colour<br>Legend\")\n      }, 300);\n\n  d3.select(\"#btnColours\").on(\"click\", function() {\n    expandColoursLegend()\n  })\n\n  d3.select(\"#btnSizes\").on(\"click\", function() {\n    expandSizesLegend()  \n  })\n\n  d3.select(\"#svgColoursLegend\").selectAll(\"circle\").transition().duration(400).attr(\"r\", 0)\n  d3.select(\"#svgSizesLegend\").selectAll(\"circle\").transition().duration(400).attr(\"r\", 0)\n\n  var bboxSizes = document.getElementById(\"btnSizes\").getBoundingClientRect()\n\n  d3.select(\"#legendDivColours\").transition().duration(300)\n      .style(\"bottom\",function(){\n        if($(window).width() >= 768){\n          return $(window).height()/2 - 275/2 + \"px\"\n        }else if($(window).width() >= 320){\n          return \"100px\"\n        }\n      })\n      .style(\"left\",function() {\n        if($(window).width() >= 1024){\n          return $(window).width()*0.06+\"px\"\n        }else if($(window).width() >= 768){\n          return $(window).width()*0.03+\"px\"\n        }else if($(window).width() >= 320){\n          return $(window).width()*0.06+\"px\"\n        }\n      })\n      .style(\"opacity\",0).remove()\n\n  d3.select(\"#legendDivSizes\").transition().duration(300)\n      .style(\"bottom\",function(){\n        if($(window).width() >= 768){\n          return $(window).height()*0.39+\"px\"\n        }else if($(window).width() >= 320){\n          return \"140px\"\n        }\n      }).style(\"opacity\",0).remove()\n\n  d3.select(\"#sizeOptionsDiv\")\n      .transition().duration(400)\n      .style(\"bottom\",function(){\n        if($(window).width() >= 768){\n          return $(window).height()*0.41+\"px\";\n        }else if($(window).width() >= 320){\n          return \"140px\";\n        }\n      })\n\n  d3.select(\"#svgSizesLegend\").selectAll(\"text\").transition().duration(300).style(\"opacity\",0).remove()\n  d3.select(\"#svgColoursLegend\").selectAll(\"text\").transition().duration(300).style(\"opacity\",0).remove()\n  d3.select(\"#sizeDropdownButton\").transition().duration(300).style(\"opacity\",0).remove()\n  // legendTexts.selectAll(\"text\").style(\"opacity\",0).remove()\n\n}\n\n\n\n\n////////////////// SIZE LEGEND button\n\n// size scales\nvar wageRadiusScale = d3.scaleSqrt() // Sqrt scale because radius\n.domain([14, maxSalary]) // input\n.range([1,maxRadius/1.2]); // output -- need to think about relative scales for each set of sizes\n\nvar automationRadiusScale = d3.scaleSqrt()\n.domain([0.01, d3.max(nodes, function(d) { return d.automationRisk })])\n.range([1,maxRadius/3]);\n\nvar yearRadiusScale = d3.scaleSqrt()\n.domain([d3.min(nodes, function(d) { return d.yearsStudy }), d3.max(nodes, function(d) { return d.yearsStudy })])\n.range([0.01,maxRadius/2]);\nvar sizesArray = []\nvar sizesValuesArray = []\n\nsetSizes(\"none\")\n\nfunction setSizes(mode){\n\n  // radii of size legend circles\n  sizesArray = []\n  sizesValuesArray = []\n\n  switch (mode) {\n    case \"workers\":\n    // add minima\n    sizesArray.push(radiusScale(d3.min(nodes, function(d) { return d.workers })))\n    sizesValuesArray.push(d3.min(nodes, function(d) { return d.workers }))\n    // split scales into 4 intervals after minimum\n    for (var i = 1; i < 2; i++) {\n      sizesArray.push(\n        (i/2) * radiusScale(d3.max(nodes, function(d) { return d.workers }))\n        )\n      sizesValuesArray.push(\n        (i/2) * d3.max(nodes, function(d) { return d.workers })\n        )\n    }\n    break;\n    case \"salary\":\n    // add minima\n    sizesArray.push(wageRadiusScale(14))\n    sizesValuesArray.push(\"$ \"+String(14).substring(0,2)+\"K per yr\")\n    // split scales into 4 intervals after minimum\n    for (var i = 1; i < 2; i++) {\n      sizesArray.push(\n        (i/2) * wageRadiusScale(maxSalary)\n        )\n      sizesValuesArray.push(\"$ \"+String(\n        (i/2) * maxSalary\n        ).substring(0,2)+\"K per yr\")\n    }\n    break;\n    case \"yearsStudy\":\n    // add minima\n    sizesArray.push(yearRadiusScale(d3.min(nodes, function(d) { return d.yearsStudy })))\n    sizesValuesArray.push(d3.min(nodes, function(d) { return d.yearsStudy }))\n    // split scales into 4 intervals after minimum\n    for (var i = 1; i < 2; i++) {\n      sizesArray.push(\n        (i/2) * yearRadiusScale(d3.max(nodes, function(d) { return d.yearsStudy }))\n        )\n      sizesValuesArray.push(\n        (i/2) * d3.max(nodes, function(d) { return d.yearsStudy })\n        )\n    }\n    break;\n    case \"none\":\n    break;\n  }\n\n}\n\nvar currentSize = \"nothing\"\n\nd3.select(\"#btnSizes\").on(\"click\", function() {\n      expandSizesLegend()  \n})\nd3.select(\"#btnSizes\").on(\"mouseover\", function() {\n  d3.select(\"#btnSizes\").style(\"background\",\"#eaeaea\")\n})\nd3.select(\"#btnSizes\").on(\"mouseout\", function() {\n  d3.select(\"#btnSizes\").style(\"background\",\"white\")\n})\n\nfunction expandSizesLegend() {\n\n  // d3.select(\"#sizeDropdownDiv\").remove()\n\n  if(typeof sizesDiv != \"undefined\") {\n    sizesDiv.remove()\n  }\n\n  d3.select(\"#btnSizes\").on(\"click\", \"\")\n\n    var bboxSizes = document.getElementById(\"btnSizes\").getBoundingClientRect()\n\n    sizesDiv = d3.select(\"#btnSizes\")\n    .append(\"div\").attr(\"id\",\"legendDivSizes\")\n\n    // transition in fade from below\n    d3.select(\"#legendDivSizes\")\n    .style(\"border-radius\", \"6px\")\n    .style(\"opacity\", 0).style(\"border\",\"2px solid rgba(73, 172, 82, 0)\")\n    .style(\"bottom\",function(){\n      if($(window).width() >= 768){\n        return $(window).height()*0.41 +\"px\";\n      }else if($(window).width() >= 320){\n        return \"140px\";\n      }\n    })\n    .transition().duration(350)\n    .style(\"opacity\", 1).style(\"border\",\"2px solid rgba(73, 172, 82, 1)\")\n    .style(\"background\",\"white\")\n    .style(\"bottom\", function(){\n      if($(window).width() >= 768){\n        return $(window).height()*0.5-75 +\"px\";\n      }else if($(window).width() >= 320){\n        return \"170px\"\n      }\n    })\n    // .text(\"\")\n\n    svgSizesLegend = d3.select(\"#legendDivSizes\")\n      .html(\"\")\n      .append(\"svg\").attr(\"id\",\"svgSizesLegend\")\n\n    if(currentSize!=\"nothing\"){\n\n      sizeCircles = svgSizesLegend.selectAll(\"circle\").data(sizesArray).enter().append(\"circle\")\n          .attr(\"class\",\"legendCircle\")\n          .attr(\"r\", 0) // start at 0 radius and transition in\n          .transition().duration(400).attr(\"r\",  function(d,i) { \n            if(sizesArray.length < 2) { return sizesArray[i] }\n            else{ return sizesArray[i]+5 }\n          })\n          .attr(\"transform\", function(d,i) { return \"translate(\"+(55 + i*95) + \n            // Math.pow(sizesArray[i], 1.6))+\n          \",\"+\"25\"+\")\" } ) \n          .style(\"fill\", \"#B5ADAD\")\n\n      legendTexts = d3.select(\"#svgSizesLegend\").selectAll(\"text\").data(sizesValuesArray).enter().append(\"text\")\n          .attr(\"class\",\"legendText\")\n          .attr(\"text-anchor\",\"left\")\n          .attr(\"transform\", function(d,i) { return \"translate(\"+(40 + i*95) + \n            // Math.pow(sizesArray[i], 1.6))+\n          \",\"+\"60\"+\")\" } ) \n          .text(function(d,i) { if(i==0){ return \"Less\" }else if(i==1){ return \"More\" } })\n          .style(\"opacity\",0).transition().duration(600).style(\"opacity\",1)\n\n    }\n    \n    if(currentSize==\"nothing\"){\n      d3.select(\"#svgSizesLegend\").append(\"text\")\n      .attr(\"class\",\"legendText\")\n      .attr(\"text-anchor\",\"left\")\n      .attr(\"transform\",\"translate(73,45)\")\n      .text(\"Equal sizes\")\n      .style(\"opacity\",0).transition().duration(600).style(\"opacity\",1)\n    }\n\n    // size buttons\n    sizesOptions = d3.select(\"#legendDivSizes\").append(\"div\")\n      .attr(\"id\",\"sizeOptionsDiv\")\n      .style(\"width\", \"220px\")\n      .style(\"bottom\",function(){\n        if($(window).width() >= 768){\n          return $(window).height()*0.41+\"px\"\n        }else if($(window).width() >= 320){\n          return \"140px\"\n        }\n      })\n      \n      sizesOptions\n      .transition().duration(400)\n      .style(\"bottom\",function(){\n        if($(window).width() >= 768){\n          return $(window).height()*0.5-75+\"px\";\n        }else if($(window).width() >= 320){\n          return \"170px\";\n        }\n      })\n    \n    // sizesOptions.transition().duration(350)\n    //   .style(\"bottom\",function(){\n    //     if($(window).width() >= 768){\n    //       return $(window).width()*0.5-75+\"px\"\n    //     }else if($(window).width() >= 320){\n    //       return \"170px\"\n    //     }\n    //   })\n\n    sizesOptions.append(\"button\").attr(\"id\",\"workLink\")\n      .style(\"float\",\"left\")\n      .attr(\"class\",\"btnSizesOption\")\n      .text(\"Number of jobs\")\n      .style(\"color\",function(){\n        if(currentSize == \"Number of Jobs\"){return \"white\"}else{return \"#49AC52\"}\n      })\n      .style(\"background\",function(){\n        if(currentSize == \"Number of Jobs\"){return \"#49AC52\"}else{return \"white\"}\n      })\n    sizesOptions.append(\"button\").attr(\"id\",\"yearLink\")\n      .style(\"float\",\"left\")\n      .attr(\"class\",\"btnSizesOption\")\n      .text(\"Years of study\")\n      .style(\"color\",function(){\n        if(currentSize == \"Years of Study\"){return \"white\"}else{return \"#49AC52\"}\n      })\n      .style(\"background\",function(){\n        if(currentSize == \"Years of Study\"){return \"#49AC52\"}else{return \"white\"}\n      })\n    sizesOptions.append(\"button\").attr(\"id\",\"wageLink\")\n      .style(\"float\",\"left\")\n      .attr(\"class\",\"btnSizesOption\")\n      .text(\"Salary ($K per yr)\")\n      .style(\"color\",function(){\n        if(currentSize == \"Salary ($K per yr)\"){return \"white\"}else{return \"#49AC52\"}\n      })\n      .style(\"background\",function(){\n        if(currentSize == \"Salary ($K per yr)\"){return \"#49AC52\"}else{return \"white\"}\n      })\n    sizesOptions.append(\"button\").attr(\"id\",\"equaLink\")\n      .style(\"float\",\"left\")\n      .attr(\"class\",\"btnSizesOption\")\n      .text(\"Equal sizes\")\n      .style(\"color\",function(){\n        if(currentSize == \"nothing\"){return \"white\"}else{return \"#49AC52\"}\n      })\n      .style(\"background\",function(){\n        if(currentSize == \"nothing\"){return \"#49AC52\"}else{return \"white\"}\n      })\n\n    // click \"Number of Jobs\"\n    d3.select(\"#workLink\").on(\"click\", function() {\n      // reset all buttons & colour this button green      \n      d3.selectAll(\".btnSizesOption\").style(\"color\",\"#49AC52\").style(\"background\",\"white\")\n      d3.select(this).style(\"color\",\"white\").style(\"background\",\"#49AC52\")\n      // transition radii to selected values\n      circles.transition().duration(100)\n        .delay(function(d, i) { return i * 0.8})\n        .attrTween(\"r\", function(d) {\n          var i = d3.interpolate(d.radius, radiusScale(d.workers));\n          return function(t) { return d.radius = i(t); };\n        });\n      // reset forces\n      forceGravity = d3.forceManyBody().strength(function(d){return d.radius*-11})\n      forceCollide = d3.forceCollide(function(d){return d.radius + nodePadding})\n      // if simulation active, reset simulation with new radius-appropriate forces\n      if(graphMode == 0 && colourLegendMode == 0) {\n        simulation\n        .force(\"collide\", forceCollide)\n        .force(\"gravity\", forceGravity)\n        setTimeout(function() { resetSimulation() }, 700);\n        setTimeout(function() { enterUpdateCircles();\n          simulation.alpha(0.7).alphaTarget(0.001).restart(); }, 200);\n      } else if(graphMode == 0 && colourLegendMode == 1){\n        simulation\n        .force(\"collide\", forceCollide)\n        setTimeout(function() {   \n          forceGravity = d3.forceManyBody().strength(function(d){return d.radius*-11})\n          forceCollide = d3.forceCollide(function(d){return d.radius + nodePadding})\n          simulation.force(\"collide\", forceCollide)\n          .force(\"gravity\", forceGravity)\n          .on(\"tick\", tick).alpha(0.1).alphaTarget(0.001).restart(); \n        }, 450);\n        setTimeout(function(){\n          d3.selectAll(\".annotation-group\").transition().duration(250).style(\"opacity\",0).remove()\n          // wait for transform before applying transformed annotations\n          setTimeout(function() {\n            createAnnotations(\"colours\");\n            d3.selectAll(\".annotation-note-bg\")\n            .style(\"fill\",\"white\")\n            .style(\"fill-opacity\",0.7)\n\n            d3.selectAll(\".annotation-group\")\n            // .style(\"font-size\",\"20px\")\n            .style(\"font-weight\",\"bold\")\n            .style(\"fill\",\"black\")\n            d3.selectAll(\".annotation-note-label\")\n            .style(\"background\",\"white\").style(\"opacity\",1)\n          }, 300)\n        }, 1000)\n\n      }\n      currentSize = \"Number of Jobs\"\n      // document.getElementById(\"sizeDropdownButton\").innerHTML = \"Size by<br>\"+currentSize;\n      setSizes(\"workers\")\n      redrawSizeLegend()\n    })\n\n    // click \"Salary ($K per yr)\"\n    d3.select(\"#wageLink\").on(\"click\", function() {\n      // reset all buttons & colour this button green      \n      d3.selectAll(\".btnSizesOption\").style(\"color\",\"#49AC52\").style(\"background\",\"white\")\n      d3.select(this).style(\"color\",\"white\").style(\"background\",\"#49AC52\")\n      // transition radii to selected values\n      circles.transition().duration(100)\n      .delay(function(d, i) { return i * 0.8})\n      .attrTween(\"r\", function(d) {\n        var i = d3.interpolate(d.radius, wageRadiusScale(d.salaryMed)/1.2);\n        return function(t) { return d.radius = i(t); };\n      });\n      // reset forces\n      forceGravity = d3.forceManyBody().strength(function(d){return d.radius*-11})\n      forceCollide = d3.forceCollide(function(d){return d.radius + nodePadding})\n      // if simulation active, reset simulation with new radius-appropriate forces\n      if(graphMode == 0 && colourLegendMode == 0) {\n        simulation\n        .force(\"collide\", forceCollide)\n        .force(\"gravity\", forceGravity)\n        setTimeout(function() { resetSimulation() }, 700);\n        setTimeout(function() { enterUpdateCircles();\n          simulation.alpha(0.7).alphaTarget(0.001).restart(); }, 200);\n      } else if(graphMode == 0 && colourLegendMode == 1){\n        simulation\n        .force(\"collide\", forceCollide)\n        setTimeout(function() {   \n          forceGravity = d3.forceManyBody().strength(function(d){return d.radius*-11})\n          forceCollide = d3.forceCollide(function(d){return d.radius + nodePadding})\n          simulation.force(\"collide\", forceCollide)\n          .force(\"gravity\", forceGravity)\n          .on(\"tick\", tick).alpha(0.1).alphaTarget(0.001).restart(); \n        }, 450);\n        setTimeout(function(){\n          d3.selectAll(\".annotation-group\").transition().duration(250).style(\"opacity\",0).remove()\n          // wait for transform before applying transformed annotations\n          setTimeout(function() {\n            createAnnotations(\"colours\");\n            d3.selectAll(\".annotation-note-bg\")\n            .style(\"fill\",\"white\")\n            .style(\"fill-opacity\",0.7)\n\n            d3.selectAll(\".annotation-group\")\n            // .style(\"font-size\",\"20px\")\n            .style(\"font-weight\",\"bold\")\n            .style(\"fill\",\"black\")\n            d3.selectAll(\".annotation-note-label\")\n            .style(\"background\",\"white\").style(\"opacity\",1)\n          }, 300)\n        }, 1000)\n\n      }\n      currentSize = \"Salary ($K per yr)\"\n      setSizes(\"salary\")\n      redrawSizeLegend()\n    })\n\n    // click \"Years of study\"\n    d3.select(\"#yearLink\").on(\"click\", function() {\n      // reset all buttons & colour this button green      \n      d3.selectAll(\".btnSizesOption\").style(\"color\",\"#49AC52\").style(\"background\",\"white\")\n      d3.select(this).style(\"color\",\"white\").style(\"background\",\"#49AC52\")\n      // transition radii to selected values\n      circles.transition().duration(100)\n      .delay(function(d, i) { return i * 0.8})\n      .attrTween(\"r\", function(d) {\n        var i = d3.interpolate(d.radius, yearRadiusScale(d.yearsStudy));\n        return function(t) { return d.radius = i(t); };\n      });\n      // reset forces\n      forceGravity = d3.forceManyBody().strength(function(d){return d.radius*-11})\n      forceCollide = d3.forceCollide(function(d){return d.radius + nodePadding})\n      // if simulation active, reset simulation with new radius-appropriate forces\n      if(graphMode == 0 && colourLegendMode == 0) {\n        simulation\n        .force(\"collide\", forceCollide)\n        .force(\"gravity\", forceGravity)\n        setTimeout(function() { resetSimulation() }, 700);\n        setTimeout(function() { enterUpdateCircles();\n          simulation.alpha(0.7).alphaTarget(0.001).restart(); }, 200);\n      } else if(graphMode == 0 && colourLegendMode == 1){\n        simulation\n        .force(\"collide\", forceCollide)\n        setTimeout(function() {   \n          forceGravity = d3.forceManyBody().strength(function(d){return d.radius*-11})\n          forceCollide = d3.forceCollide(function(d){return d.radius + nodePadding})\n          simulation.force(\"collide\", forceCollide)\n          .force(\"gravity\", forceGravity)\n          .on(\"tick\", tick).alpha(0.1).alphaTarget(0.001).restart(); \n        }, 450);\n        setTimeout(function(){\n          d3.selectAll(\".annotation-group\").transition().duration(500).style(\"opacity\",0).remove()\n          // wait for transform before applying transformed annotations\n          setTimeout(function() {\n            createAnnotations(\"colours\");\n            d3.selectAll(\".annotation-note-bg\")\n            .style(\"fill\",\"white\")\n            .style(\"fill-opacity\",0.7)\n\n            d3.selectAll(\".annotation-group\")\n            // .style(\"font-size\",\"20px\")\n            .style(\"font-weight\",\"bold\")\n            .style(\"fill\",\"black\")\n            d3.selectAll(\".annotation-note-label\")\n            .style(\"background\",\"white\").style(\"opacity\",1)\n          }, 300)\n        }, 450)\n\n      }\n      currentSize = \"Years of Study\"\n      setSizes(\"yearsStudy\")\n      redrawSizeLegend()\n    })\n\n    // click \"Equal sizes\"\n    d3.select(\"#equaLink\").on(\"click\", function() {\n      d3.selectAll(\".btnSizesOption\").style(\"color\",\"#49AC52\").style(\"background\",\"white\")\n      d3.select(\"#equaLink\").style(\"color\",\"white\").style(\"background\",\"#49AC52\")\n      resetSizes()\n      redrawSizeLegend()\n    })\n} // end expandSizesLegend()\nfunction resetSizes() {\n        // reset all buttons & colour this button green      \n      // transition radii to selected values\n      circles.transition().duration(100)\n      .delay(function(d, i) { return i * 0.8})\n      .attrTween(\"r\", function(d) {\n        var i = d3.interpolate(d.radius, collapsedRadius);\n        return function(t) { return d.radius = i(t); };\n      })\n      // reset forces\n      forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n      forceCollide = d3.forceCollide($(window).height()*0.009)\n      // if simulation active, reset simulation with new radius-appropriate forces\n      if(graphMode == 0 && colourLegendMode == 0) {\n        simulation\n        .force(\"collide\", forceCollide)\n        .force(\"gravity\", forceGravity)\n        setTimeout(function() { resetSimulation() }, 700);\n        setTimeout(function() { enterUpdateCircles();\n          simulation.alpha(0.7).alphaTarget(0.001).restart(); }, 200);\n      } else if(graphMode == 0 && colourLegendMode == 1){\n        simulation\n        .force(\"collide\", forceCollide)\n        setTimeout(function() {   \n          forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n          forceCollide = d3.forceCollide($(window).height()*0.009)\n          simulation.force(\"collide\", forceCollide)\n          .force(\"gravity\", forceGravity)\n          .on(\"tick\", tick).alpha(0.1).alphaTarget(0.001).restart(); \n        }, 450);\n        setTimeout(function(){\n          d3.selectAll(\".annotation-group\").transition().duration(250).style(\"opacity\",0).remove()\n          // wait for transform before applying transformed annotations\n          setTimeout(function() {\n            createAnnotations(\"colours\");\n            d3.selectAll(\".annotation-note-bg\")\n            .style(\"fill\",\"white\")\n            .style(\"fill-opacity\",0.7)\n\n            d3.selectAll(\".annotation-group\")\n            // .style(\"font-size\",\"20px\")\n            .style(\"font-weight\",\"bold\")\n            .style(\"fill\",\"black\")\n            d3.selectAll(\".annotation-note-label\")\n            .style(\"background\",\"white\").style(\"opacity\",1)\n          }, 300)\n        }, 1000)\n\n      }\n      currentSize = \"nothing\"\n      setSizes(\"none\")\n}\n\n// re-draw size legend circles and \"less, more\" texts\nfunction redrawSizeLegend() {\n\n    d3.selectAll(\".legendCircle\").remove()\n    d3.selectAll(\".legendText\").remove()\n\n    sizeCircles = svgSizesLegend.selectAll(\"circle\").data(sizesArray).enter().append(\"circle\")\n      .attr(\"r\", 0) // start at 0 radius and transition in\n      .attr(\"class\",\"legendCircle\")\n      .transition().duration(400).attr(\"r\",  function(d,i) { \n        if(sizesArray.length < 2) { return sizesArray[i] }\n        else{ return sizesArray[i]+5 }\n      })\n      .attr(\"transform\", function(d,i) { return \"translate(\"+(55 + i*95) + \n        // Math.pow(sizesArray[i], 1.6))+\n      \",\"+\"25\"+\")\" } ) \n      .style(\"fill\", \"#B5ADAD\")\n\n    legendTexts = d3.select(\"#svgSizesLegend\").selectAll(\"text\").data(sizesValuesArray).enter().append(\"text\")\n        .attr(\"class\",\"legendText\")\n        .attr(\"text-anchor\",\"left\")\n        .attr(\"transform\", function(d,i) { return \"translate(\"+(40 + i*95) + \n          // Math.pow(sizesArray[i], 1.6))+\n        \",\"+\"60\"+\")\" } ) \n        .text(function(d,i) { if(i==0){ return \"Less\" }else if(i==1){ return \"More\" } })\n        .style(\"opacity\",0).transition().duration(600).style(\"opacity\",1)\n\n    if(currentSize==\"nothing\"){\n      d3.select(\"#svgSizesLegend\").append(\"text\")\n      .attr(\"class\",\"legendText\")\n      .attr(\"text-anchor\",\"left\")\n      .attr(\"transform\",\"translate(73,45)\")\n      .text(\"Equal sizes\")\n      .style(\"opacity\",0).transition().duration(600).style(\"opacity\",1)\n    }\n\n}\n\n//////////// Industry Split ////////////////\n\n// d3.select(\"#industry\").on('click', function() {\n//   if (graphMode == 1) return;\n//   simulation\n//   .force(\"x\", forceXSeparate).alpha(0.4)\n//   .force(\"y\", forceYSeparate).alpha(0.4)\n//     .alphaTarget(0.001) // after click, cool down to minimal temperature\n//     .restart()\n\n//   // d3.select(\"#split\").style(\"display\",\"none\");\n//   // d3.select(\"#shuffle\").style(\"display\",\"none\");\n\n//   // d3.select(\"#combine\").style(\"display\", \"inline\");\n\n//   // legend.transition().duration(500).style(\"opacity\", 0).remove();\n//   })\n\nd3.select(\"#shuffle\").on('click', function() {\n  // legend.transition().duration(500).style(\"opacity\", 0).remove();\n  // createBottomLegend();\n  if (graphMode == 1) {\n    graphMode = 0;\n    graphModeOff();\n  };\n  simulation\n  .force(\"x\", forceXSeparateRandom)\n  .force(\"y\", forceYSeparateRandom)\n  .alpha(0.15).alphaTarget(0.001).restart();\n\n\n})\n\nfunction smashTogether(force, temp) {\n  simulation\n  .force(\"x\", d3.forceX().strength(force)).alpha(temp)\n  .force(\"y\", d3.forceY().strength(force)).alpha(temp)\n  .alphaTarget(0.001)\n  .restart()\n}\n\nd3.select(\"#combine\").on('click', function(d) {\n\n  if (graphMode == 0) {\n    smashTogether(0.4, 0.25);\n  }\n})\n\n// TODO: maxWorkers, maxSalary, skillsMath not working\nvar minWorkers = d3.min(nodes, function(d) {return d.workers}),\nminWage = d3.min(nodes, function(d) {return d.salaryMed});\n\n\nmaxYearsStudy = d3.max(nodes, function(d) {return d.yearsStudy}); // 5\n\n\n\n\n\n\n\n////////////////// Pause the simulation ////////////////////////\nd3.select(\"#pause\").on('click', function(d) {\n  simulation.stop();\n\n  d3.select(\"#pause\").style(\"display\", \"none\");\n  d3.select(\"#unpause\").style(\"display\", \"inline\");\n\n});\n////////////////// unpause the simulation ////////////////////////\nd3.select(\"#unpause\").on('click', function(d) {\n  simulation.alpha(0.7).alphaTarget(0.001).restart();\n\n  d3.select(\"#pause\").style(\"display\", \"inline\");\n  d3.select(\"#unpause\").style(\"display\", \"none\");\n\n});\n\n\n\n///////////////// Graph Mode ////////////////////\n\n// catch stored positions\nvar positionsX = {};\nvar positionsY = {};\nvar originalRadius = {};\n// store previous radii\n  nodes.forEach(function(d) {\n    originalRadius[d.id] = d.radius;\n  });\n\n\n\nfunction createGraphExplainerDiv() { //bookmarklet\n  // width of the div\n  var explainerWidth = 620;\n    // append a large div, transition its height and width\n  graphExplainerDiv = d3.select(\"body\").append(\"div\")\n    .attr(\"id\",\"graphExplainerDiv\").style(\"opacity\",0)\n    .style(\"left\",($(window).width()-explainerWidth)/2 + \"px\")\n    .html(\n      \"<p class='inactiveHeader' style='margin: 2px 0px 20px 20px'>Graph View lets you compare job groups by what you care about most.</p>\"+\n      \"<button id='btnExit'>x</button>\"+\n      \"<div class='grid-container'>\"+\n        \"<div class='explainDiv'>\"+\n          \"<button id='btnSuggest1' class='suggested-views-btn' href='#'>\"+\n            \"<p style='padding-top: 10px'>Income</p> \"+\n            \"<p>vs.</p> \"+\n            \"<p>Years of Study</p>\"+\n          \"</button>\"+\n          \"<p class='p-graphModes inactiveText' style='margin-bottom: -0.10em'>Usually, jobs that need more education have higher incomes.</p>\"+\n          \"<p class='p-graphModes inactiveText'>Compare average income and years of study.</p>\"+\n        \"</div>\"+\n        \"<div class='explainDiv'>\"+\n          \"<button id='btnSuggest2' class='suggested-views-btn' href='#'>\"+\n            \"<p style='padding-top: 10px'>Income</p> \"+\n            \"<p>vs.</p> \"+\n            \"<p>Number of Jobs</p>\"+\n          \"</button>\"+\n          \"<p class='p-graphModes inactiveText' style='margin-bottom: -0.10em'>The more jobs are available, the easier it might be to get hired.</p>\"+\n          \"<p class='p-graphModes inactiveText'>Compare average income and how many jobs are available.</p>\"+\n        \"</div>\"+\n        \"<div class='explainDiv'>\"+\n          \"<button id='btnSuggest3' class='suggested-views-btn' href='#'>\"+\n            \"<p style='padding-top: 10px'>Machines</p> \"+\n            \"<p>vs.</p> \"+\n            \"<p>Number of Jobs</p>\"+\n          \"</button>\"+\n          \"<p class='p-graphModes inactiveText' style='margin-bottom: -0.10em'>Machines are getting better at performing new tasks every day.</p>\"+\n          \"<p class='p-graphModes inactiveText'>Compare risk that job tasks will be taken over by machines and how many jobs are available.</p>\"+\n          \"</p>\"+\n        \"</div>\"+\n      \"</div>\"\n    )\n \n  // explainer transition\n  d3.select(\"#graphExplainerDiv\").transition().duration(500)\n    .style(\"background\",\"white\")\n    .style(\"opacity\",1)\n\n  d3.select(\"#btnExit\").on(\"click\", function(){\n    d3.select(\"#graphExplainerDiv\").transition().duration(500).style(\"opacity\",0).remove()\n  })\n\n\nd3.select(\"#btnSuggest3\").on('mouseover', function() {d3.select(this).style(\"background\", \"#eaeaea\")})\nd3.select(\"#btnSuggest3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\nd3.select(\"#btnSuggest3\").on('click', function() { // Automation vs Number of Jobs\n  currentMode = 3;\n  graphModeOn(3);\n\n  graphExplainerDiv.transition().duration(500).style(\"opacity\",0).remove()\n\n  d3.select(\"#btnSuggest3\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\",\"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnSuggest3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnSuggest3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n\n  d3.select(\"#btnSuggest1\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnSuggest1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnSuggest1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnSuggest2\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnSuggest2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnSuggest2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView3\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\", \"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnView3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnView3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n\n  d3.select(\"#btnView1\").style(\"background\", \"white\").style(\"color\",\"#49AC52\").on(\"mouseover\", \"\")\n  d3.select(\"#btnView1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView2\").style(\"background\", \"white\").style(\"color\",\"#49AC52\").on(\"mouseover\", \"\")\n  d3.select(\"#btnView2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n});\n\nd3.select(\"#btnSuggest1\").on('click', function() { // Wage vs Years\n  currentMode = 1;\n  // graphModeOn(1);\n\n  graphExplainerDiv.transition().duration(500).style(\"opacity\",0).remove()\n\n  d3.select(\"#btnSuggest3\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnSuggest3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnSuggest3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnSuggest1\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\",\"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnSuggest1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnSuggest1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n\n  d3.select(\"#btnSuggest2\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnSuggest2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnSuggest2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView3\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView1\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\", \"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnView1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnView1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView2\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n});\n\nd3.select(\"#btnSuggest2\").on('click', function() { // Wage vs Workers\n  currentMode = 2;\n  graphModeOn(2);\n\n  graphExplainerDiv.transition().duration(500).style(\"opacity\",0).remove()\n\n  d3.select(\"#btnSuggest3\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnSuggest3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnSuggest3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n  \n  d3.select(\"#btnSuggest1\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnSuggest1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnSuggest1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnSuggest2\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\",\"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnSuggest2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnSuggest2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n\n  d3.select(\"#btnView3\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView1\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView2\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\", \"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnView2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnView2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n});\n\n\n}\n\nd3.select(\"#graph\").on('click', function(d){\n  // first time?\n  if(graphFirstTime == true){\n    graphFirstTime = false;\n    createGraphExplainerDiv()\n  }\n\n\n  // Toggle mode on or off\n  graphMode = 1-graphMode;\n  //cool to 0 degrees\n  simulation.alpha(0);\n\n  ////////////// GRAPH MODE ON! ////////////////\n  if (graphMode == 1) {\n      currentMode = 0;\n      graphModeOn(0);\n    }\n  \n  d3.select(\"body\").append(\"img\")\n  .attr(\"class\",\"imgGraphExplain\")\n  .attr(\"src\",\"img/question.png\").attr(\"alt\",\"Graph View explanation\")\n  .attr(\"height\",\"29\").attr(\"width\",\"29\").style(\"border-radius\",\"20px\")\n  .style(\"position\",\"fixed\")\n  .style(\"top\",function(){\n    console.log(getBbox(\"btnView1\").top)\n    return (getBbox(\"btnView1\").top - 33) + \"px\"\n  })\n  .style(\"right\",\n    function(){\n      if($(window).width() >= 1024){\n        return \"100px\";\n      }else if($(window).width() >= 768){\n        return \"20px\";\n      }else if($(window).width() >= 320){\n        return \"20px\";\n      }\n    }\n    )\n  .style(\"cursor\",\"pointer\")\n  .on(\"click\",function(){createGraphExplainerDiv()})\n  .style(\"opacity\",0).transition().duration(500).style(\"opacity\",1)\n\n  //////////////// Graph mode OFF. ///////////////////\n  if (graphMode == 0) {\n    if(typeof graphExplainerDiv != \"undefined\"){\n      graphExplainerDiv.transition().duration(500).style(\"opacity\",0).remove()\n      // graphFirstTime = true;\n    }\n    graphModeOff();\n  }; // transition back to clusters\n  \n})\n\nfunction moveBottomDown() {\n  // Move top up\n  d3.select(\"#viewButtons\").transition().duration(500).style(\"margin-top\", \"-20px\");\n  d3.select(\"#sliderDiv_skillsLang\").transition().duration(500).style(\"top\", \"5vh\");\n  d3.select(\"#sliderDiv_skillsLogi\").transition().duration(500).style(\"top\", \"5vh\");\n  \n  d3.select(\"#bottomButtons\").transition().duration(500).style(\"bottom\", \"5vh\");\n  d3.select(\"#sliderDiv_skillsMath\").transition().duration(500).style(\"bottom\", \"1vh\");\n  d3.select(\"#sliderDiv_skillsComp\").transition().duration(500).style(\"bottom\", \"1vh\");\n}\nfunction moveBottomUp() {\n  // Move top up\n  d3.select(\"#viewButtons\").transition().duration(500).style(\"margin-top\", \"0px\");\n  d3.select(\"#sliderDiv_skillsLang\").transition().duration(500).style(\"top\", \"9vh\");\n  d3.select(\"#sliderDiv_skillsLogi\").transition().duration(500).style(\"top\", \"9vh\");\n\n  d3.select(\"#bottomButtons\").transition().duration(500).style(\"bottom\", \"7.5vh\");\n  if($(window).width() <= 768){\n    d3.select(\"#sliderDiv_skillsMath\").transition().duration(500).style(\"bottom\", \"1vh\");\n    d3.select(\"#sliderDiv_skillsComp\").transition().duration(500).style(\"bottom\", \"1vh\");\n  }else{\n    d3.select(\"#sliderDiv_skillsMath\").transition().duration(500).style(\"bottom\", \"9vh\");\n    d3.select(\"#sliderDiv_skillsComp\").transition().duration(500).style(\"bottom\", \"9vh\");\n  }\n}\n\n/////////////////////////////// Suggested Views buttons /////////////////////////\n\nd3.select(\"#btnView3\").on('click', function() { // Automation vs Number of Jobs\n  currentMode = 3;\n  graphModeOn(currentMode);\n\n  d3.select(\"#btnView3\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\", \"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnView3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnView3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n\n  d3.select(\"#btnView1\").style(\"background\", \"white\").style(\"color\",\"#49AC52\").on(\"mouseover\", \"\")\n  d3.select(\"#btnView1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView2\").style(\"background\", \"white\").style(\"color\",\"#49AC52\").on(\"mouseover\", \"\")\n  d3.select(\"#btnView2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n});\n\nd3.select(\"#btnView1\").on('click', function() { // Wage vs Years\n  currentMode = 1;\n  graphModeOn(currentMode);\n\n  d3.select(\"#btnView3\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView1\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\", \"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnView1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnView1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView2\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n});\n\nd3.select(\"#btnView2\").on('click', function() { // Wage vs Workers\n  currentMode = 2;\n  graphModeOn(currentMode);\n\n  d3.select(\"#btnView3\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView3\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView3\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView1\").style(\"background\", \"white\").style(\"color\",\"#49AC52\")\n  d3.select(\"#btnView1\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  d3.select(\"#btnView1\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n\n  d3.select(\"#btnView2\").style(\"background\", \"#49AC52\").style(\"color\",\"white\").on(\"mouseover\", \"\").on(\"mouseout\", \"\")\n  // d3.select(\"#btnView2\").on(\"mouseover\", function() {d3.select(this).style(\"background\", \"#eaeaea\")})\n  // d3.select(\"#btnView2\").on(\"mouseout\", function() {d3.select(this).style(\"background\", \"white\")})\n});\n\n\nfunction graphModeOn(mode) {\n\n  if($(window).width() <= 320){\n\n  }else if($(window).width() <= 768){\n      d3.select(\"#btnColours\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"left\",\"5px\")\n      .style(\"bottom\",\"180px\")\n      d3.select(\"#btnSizes\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"right\",\"5px\")\n      .style(\"bottom\",\"180px\")\n  } else if($(window).width() <= 1024){\n      d3.select(\"#btnColours\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"left\",\"5px\")\n      .style(\"bottom\",\"180px\")\n      d3.select(\"#btnSizes\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"right\",\"5px\")\n      .style(\"bottom\",\"180px\")\n  } else {\n      d3.select(\"#btnColours\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"left\",\"25px\")\n      .style(\"bottom\",\"180px\")\n      d3.select(\"#btnSizes\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"right\",\"25px\")\n      .style(\"bottom\",\"180px\")\n  }\n  // d3.selectAll(\".views-btn\").transition().duration(500).style(\"opacity\",1)\n  d3.select(\"#grid-container-views\").transition().duration(500).style(\"opacity\",1)\n  // resize()\n\n  width=$(window).width()*0.75;\n  height=$(window).height()*0.75;\n  // move legend group right\n  d3.select(\"#legend\").transition().duration(500).style(\"bottom\",\"180px\")\n  // clear annotations\n  d3.selectAll(\".annotation-group\").transition().duration(500).style(\"opacity\",0).remove()\n  // wait for transform before applying transformed annotations\n  setTimeout(function() {\n    createAnnotations(mode);}\n    , 1000)\n  \n  hideGraphViewCallout();\n  hideAll();\n  // hideGraphViewCallout();\n  moveBottomDown();\n  hideToolTip(500);\n\n  // if there is already a legend, remove the legend\n  if (typeof axisG != \"undefined\") axisG.transition().duration(500).style(\"opacity\", 0).remove();\n  if (typeof legend != \"undefined\") legend.transition().duration(500).style(\"opacity\", 0).remove();\n  if (typeof futureLegend != \"undefined\") futureLegend.transition().duration(500).style(\"opacity\", 0).remove();\n  if (typeof futureAxisG != \"undefined\") futureAxisG.transition().duration(500).style(\"opacity\", 0).remove();\n\n\n  d3.select(\"#graphToggle\").attr(\"src\",\"img/toggle-on.png\")\n  \n  $(\"#grid-container-views\").show();\n    // cool to 0 degrees\n    simulation.stop();\n\n    // store previous positions\n    nodes.forEach(function(d) {\n      positionsX[d.id] = d.x;\n    });\n    nodes.forEach(function(d) {\n      positionsY[d.id] = d.y;\n    });\n\n    // CHOOSE / SWITCH for graph-mode dropdown\n    switch (mode) {\n\n        case 0:\n          // transition circles to graph positions\n          circles.transition()\n          .duration(750)\n            .attrTween(\"cx\", function(d) {\n              var i = d3.interpolate(d.x, \n                // x = Years of Study\n                d.yearsStudy/maxYearsStudy*width*0.73 - width*0.4);\n              return function(t) { return d.cx = i(t); };\n            })\n            .attrTween(\"cy\", function(d) {\n              var i = d3.interpolate(d.y, \n                // y = Wage\n                ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate);\n              return function(t) { return d.cy = i(t); };\n            });\n            break;\n\n        case 1:\n          circles.transition()\n          .duration(750)\n            .attrTween(\"cx\", function(d) {\n              var i = d3.interpolate(d.cx, \n                // x = Years of Study\n                d.yearsStudy/maxYearsStudy*width*0.73 - width*0.4);\n              return function(t) { return d.cx = i(t); };\n            })\n            .attrTween(\"cy\", function(d) {\n              var i = d3.interpolate(d.cy, \n                // y = Wage\n                ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate);\n              return function(t) { return d.cy = i(t); };\n            });\n            break;\n\n        case 2:\n          circles.transition()\n          .duration(750)\n            .attrTween(\"cx\", function(d) {\n              var i = d3.interpolate(d.cx, \n                // x = Number of Jobs\n                d.workers/maxWorkers*width*0.73 - width*0.4);\n              return function(t) { return d.cx = i(t); };\n            })\n            .attrTween(\"cy\", function(d) {\n              var i = d3.interpolate(d.cy, \n                // y = Wage\n                ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate);\n              return function(t) { return d.cy = i(t); };\n            });\n            break;\n\n        case 3:\n          circles.transition()\n          .duration(750)\n            .attrTween(\"cx\", function(d) { // transition x position to...\n              var i = d3.interpolate(d.cx, \n                // x = Number of Jobs\n                d.workers/maxWorkers*width*0.73 - width*0.4);\n              return function(t) { return d.cx = i(t); };\n            })\n            .attrTween(\"cy\", function(d) {\n              var i = d3.interpolate(d.cy, \n                // y = Automation Risk (same as initial, but using cx to transition into position from previous positions)\n                (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate);\n              return function(t) { return d.cy = i(t); };\n            });\n            break;\n\n        case 4:\n          circles.transition()\n          .duration(750)\n            .attrTween(\"cx\", function(d) { // transition x position to...\n              var i = d3.interpolate(futurePositions[d.id][0], \n                // x = Number of Jobs\n                d.workers/maxWorkers*width*0.73 - width*0.4);\n              return function(t) { return d.cx = i(t); };\n            })\n            .attrTween(\"cy\", function(d) {\n              var i = d3.interpolate(futurePositions[d.id][1], \n                // y = Automation Risk\n                (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate);\n              return function(t) { return d.cy = i(t); };\n            });\n            break;\n\n        case 5:\n\n            break;\n        case 6:\n\n    }\n\n  //////////////////////// Axes ////////////////////////////\ncompressY = 0.65;\n  // Set the ranges\n  var x = d3.scaleLinear().range([0, width*0.75]);\n  var y = d3.scaleLinear().range([height*compressY, 0]);\n\n   switch (mode) {\n      // x = Number of Jobs\n      // y = Automation Risk\n        case 1:\n               // Scale the range of the data (using globally-stored nodes)\n                x.domain([0, maxWorkers]); //minmax workers\n                y.domain([0, maxSalary]); //maxmin risk d3.max(store, function(d) { return d.automationRisk; })\n            break;\n      // x = Years of Study\n      // y = Wage\n        case 0:\n                x.domain([0, maxYearsStudy]); //minmax workers\n                y.domain([0, maxSalary]);\n            break;\n      // x = Number of Jobs\n      // y = Wage\n        case 2:\n                x.domain([0, maxWorkers]); //minmax workers\n                y.domain([0, maxSalary]);\n            break;\n      // x = Number of Jobs\n      // y = Automation Risk (when graph mode already on)\n        case 3:\n                x.domain([0, maxWorkers]); //minmax workers\n                y.domain([100, 0]); //maxmin risk d3.max(store, function(d) { return d.automationRisk; })\n            break;\n      // x = Number of Jobs\n      // y = Automation Risk (when future mode already on)\n        case 4:\n                x.domain([0, maxWorkers]); //minmax workers\n                y.domain([100, 0]); //maxmin risk d3.max(store, function(d) { return d.automationRisk; })\n            break;\n        case 5:\n\n            break;\n        case 6:\n\n    }\n\n  graphYtranslate = window.innerHeight*0.14 - 10; // y position of all nodes on graph\n  // Add an axis-holder group\n  axisG = svg.append(\"g\")\n\n  axisYtranslate = $(window).height()*-0.110;\n  axisXtranslate = $(window).width()*-0.35+15;\n\n  d3.select(\"xaxis\").remove();\n\n  // Add the X Axis\n  axisX = axisG.append(\"g\")\n  .attr(\"class\", \"axis\")\n  .attr(\"transform\", circleHeight((axisXtranslate+2),(axisYtranslate*-1.945)) )\n  .call(d3.axisBottom(x).ticks(5)).attr(\"id\",\"axisX\")\n  .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n  // text label for the x axis\n  axisLabelX = axisG.append(\"text\")\n  .attr(\"transform\", circleHeight((axisXtranslate*0.16),(axisYtranslate*-2.45)))\n  .style(\"class\", \"inactiveText\")\n  .style(\"text-anchor\", \"middle\")\n  .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n   d3.select(\"yaxis\").remove();\n\n  // Add the Y Axis\n  axisY = axisG.append(\"g\")\n .attr(\"class\", \"axis\")\n .attr(\"transform\",  circleHeight((axisXtranslate), (axisYtranslate*2.52)) )\n .call(d3.axisLeft(y).ticks(4)).attr(\"id\",\"axisY\")\n .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n   // text label for the y axis\n  axisLabelY = axisG.append(\"text\")\n  .style(\"class\", \"inactiveText\")\n  .attr(\"transform\", \"rotate(-90)\")\n  .attr(\"y\", \"10vw\")\n  .attr(\"x\", \"-28vh\")\n  .attr(\"dy\", \"1em\")\n  .style(\"text-anchor\", \"middle\")\n\n\n\n  // axisDecorationYTop = axisG\n  //   .append(\"polygon\")\n  // .attr(\"points\",\"20,15 0,15 10,0\")\n  // .style(\"fill\",\"lime\")\n  // .style(\"stroke\",\"black\")\n  // .attr(\"transform\", \"translate(\"+window.innerWidth*0.1+\",\"+( -15 )+\")\")\n  \n  // axisDecorationTextTop = axisG.append(\"text\")\n  //   .style(\"fill\",\"#49AC52\")\n  //   .attr(\"y\", \"1vh\")\n  //   .attr(\"x\", \"9.2vw\")\n  //   .attr(\"dy\", \"1em\")\n\n  // axisDecorationYBtm = axisG\n  //   .append(\"polygon\")\n  // .attr(\"points\",\"20,0 0,0 10,15\")\n  // .style(\"fill\",\"red\")\n  // .style(\"stroke\",\"black\")\n  // .attr(\"transform\", \"translate(\"+window.innerWidth*0.1+\",\"+( window.innerHeight*0.4 )+\")\")\n  \n  // axisDecorationTextBtm = axisG.append(\"text\")\n  //   .style(\"fill\",\"#C81B1B\")\n  //   .attr(\"y\", \"36vh\")\n  //   .attr(\"x\", \"9.2vw\")\n  //   .attr(\"dy\", \"1em\")\n  \n\n  // function decorateYAxis() { //mode\n  //   axisDecorationTextTop.html(\"More\").style(\"font-size\", \"20px\")\n  //   .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n  //   axisDecorationTextBtm.html(\"Less\").style(\"font-size\", \"20px\")\n  //   .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n  //   axisDecorationYTop.html(\"More\").style(\"font-size\", \"20px\")\n  //   .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n  //   axisDecorationYBtm.html(\"Less\").style(\"font-size\", \"20px\")\n  //   .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n  // \n  switch (mode) {\n      // x = Number of Jobs\n      // y = Automation Risk\n        // case 1:\n        //     // axisY.call(d3.axisLeft(y)).style(\"fill\", \"none\").style(\"stroke\", \"none\");\n        //     axisY.call(d3.axisLeft(y).ticks(4))\n        //     .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n        //     axisX.call(d3.axisBottom(x).ticks(4))\n        //     .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n        //     d3.selectAll(\"text\").text(\"\");\n\n        //     axisLabelX.text(\"Number of Jobs\").style(\"fill\",\"#49AC52\").style(\"font-size\", \"20px\")\n        //     .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n        //     axisLabelY.html(\"Risk of tasks being replaced by machine work (%)\").style(\"fill\",\"#49AC52\").style(\"font-size\", \"20px\")\n        //     .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            \n        //     // decorateYAxis();\n        //     break;\n      // x = Years of Study\n      // y = Wage\n        case 0:\n        case 1:\n            // axisY.call(d3.axisLeft(y)).style(\"fill\", \"none\").style(\"stroke\", \"none\");\n            axisY.call(d3.axisLeft(y).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisX.call(d3.axisBottom(x).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            d3.selectAll(\"text\").text(\"\");\n            axisLabelX.text(\"Years of Study\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisLabelY.text(\"Salary ($K per yr)\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            // decorateYAxis();\n            break;\n      // x = Number of Jobs\n      // y = Wage\n        case 2:\n            // axisY.call(d3.axisLeft(y)).style(\"fill\", \"none\").style(\"stroke\", \"none\");\n            axisY.call(d3.axisLeft(y).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisX.call(d3.axisBottom(x).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            d3.selectAll(\"text\").text(\"\");\n            axisLabelX.text(\"Number of Jobs\").style(\"fill\",\"#49AC52\").style(\"font-family\", \"Raleway\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisLabelY.text(\"Salary ($K per yr)\").style(\"fill\",\"#49AC52\").style(\"font-family\", \"Raleway\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            // decorateYAxis();\n            break;\n      // x = Number of Jobs\n      // y = Automation Risk (when graph mode already on)\n        case 3:\n            axisY.call(d3.axisLeft(y).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisX.call(d3.axisBottom(x).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            d3.selectAll(\"text\").text(\"\");\n            axisLabelX.text(\"Number of Jobs\").style(\"fill\",\"#49AC52\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisLabelY.text(\"Risk of tasks being replaced by machine work (%)\").style(\"fill\",\"#49AC52\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            // decorateYAxis();\n            break;\n      // x = Number of Jobs\n        // y = Automation Risk (when future mode already on)\n        case 4:\n            axisY.call(d3.axisLeft(y).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisX.call(d3.axisBottom(x).ticks(5))\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            d3.selectAll(\"text\").text(\"\");\n            axisLabelX.text(\"Number of Jobs\").style(\"fill\",\"#49AC52\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n            axisLabelY.text(\"Risk of job tasks being replaced by machine work (%)\").style(\"fill\",\"#49AC52\").style(\"font-size\", \"20px\")\n            .style(\"opacity\", 0).transition().duration(500).style(\"opacity\",1);\n\n            // decorateYAxis();\n            break;\n  }\n\n\n\n}\n\n\n\n\n\n/////////////////// Annotations ////////////////////\n\n// const type = d3.annotationLabel\n\n// const annotations = [{\n//   note: {\n//     label: \"Longer text to show text wrapping\",\n//     title: \"Natural resources and agriculture\",\n//   },\n//   //can use x, y directly instead of data\n//   data: { date: \"18-Sep-09\", close: 185.02 },\n//   x: 100, \n//   y: 100,\n//   dy: 137,\n//   dx: 162,\n//   subject: { radius: 50, radiusPadding: 10 },\n// }]\n\n// const parseTime = d3.timeParse(\"%d-%b-%y\")\n// const timeFormat = d3.timeFormat(\"%d-%b-%y\")\n\n// var width = window.innerWidth/1.5, // set chart dimensions\n//     height = window.innerHeight/1.5,\n//     compressY = 0.65;\n// //Skipping setting domains for sake of example\n// const x = d3.scaleLinear().range([0, width*0.75]);\n// const y = d3.scaleLinear().range([height*compressY, 0]);\n\n\n\n// const makeAnnotations = d3.annotation()\n//   .editMode(true)\n//   .type(type)\n//   //accessors & accessorsInverse not needed\n//   //if using x, y in annotations JSON\n//   .accessors({\n//     x: d => x(parseTime(d.date)),\n//     y: d => y(d.close)\n//   })\n//   .accessorsInverse({\n//      date: d => timeFormat(x.invert(d.x)),\n//      close: d => y.invert(d.y)\n//   })\n//   .annotations(annotations)\n\n// d3.select(\"svg\")\n//   .append(\"g\")\n//   .attr(\"class\", \"annotation-group\")\n//   .call(makeAnnotations)\n\n\n    // document.fonts.ready.then(function(){\n    //   d3.select(\"svg\")\n    //     .append(\"g\")\n    //     .attr(\"class\", \"annotation-group\")\n    //     .style('font-size', fontSize(ratio))\n    //     .call(makeAnnotations)\n    // })\nfunction getPointCoords(circle){ \n  thisCircle = d3.select(\"#circle_\"+circle)\n  thisCircleQuery = document.getElementById(\"circle_\"+circle)\n  var point = document.getElementById('chart').createSVGPoint();\n  point.x = thisCircle.attr(\"cx\");//get the circle cx \n  point.y = thisCircle.attr(\"cy\");//get the circle cy\n  var newPoint = point.matrixTransform(thisCircleQuery.getCTM());//new point after the transform\n  return newPoint;\n}\n\nfunction createAnnotations(mode){\n//  http://d3-annotation.susielu.com/\n  var xSc = d3.scaleLinear().range([0, width*0.75]);\n  var ySc = d3.scaleLinear().range([height*compressY, 0]);\n\n   switch (mode) {\n      // x = Number of Jobs\n      // y = Salary\n        case 0:\n               // Scale the range of the data (using globally-stored nodes)\n                xSc.domain([0, maxWorkers]); //minmax workers\n                ySc.domain([0, maxSalary]); //maxmin risk d3.max(store, function(d) { return d.automationRisk; })\n            break;\n      // x = Years of Study\n      // y = Salary\n        case 1:\n                xSc.domain([0, maxYearsStudy]); //minmax workers\n                ySc.domain([0, maxSalary]);\n            break;\n      // x = Number of Jobs\n      // y = Salary\n        case 2:\n                xSc.domain([0, maxWorkers]); //minmax workers\n                ySc.domain([0, maxSalary]);\n            break;\n      // x = Number of Jobs\n      // y = Automation Risk (when graph mode already on)\n        case 3:\n                xSc.domain([0, maxWorkers]); //minmax workers\n                ySc.domain([100, 0]); //maxmin risk d3.max(store, function(d) { return d.automationRisk; })\n            break;\n      // x = Number of Jobs\n      // y = Automation Risk (when future mode already on)\n        case 4:\n                xSc.domain([0, maxWorkers]); //minmax workers\n                ySc.domain([0, maxSalary]); //maxmin risk d3.max(store, function(d) { return d.automationRisk; })\n            break;\n        case 5:\n\n            break;\n        case 6:\n\n    }\n\n  // graphYtranslate = window.innerHeight*0.12 - 10; // y position of entire graph\n\n  // var axisYtranslate = window.innerHeight*-0.12;\nvar labels;\nvar makeAnnotations;\n  // first mode: Wage vs Years of Study\n\n\n  // Lawyers circle_207 Judges 206 Optometrists 170\n  var pointLawyers = getPointCoords(207),\n      titleLawyers = \"Lawyers and Quebec notaries\",\n      labelLawyers = \"$ 134.8K per yr\";\n\n  var pointJudges = getPointCoords(206),\n      titleJudges = \"Judges\",\n      labelJudges = \"$ 116.2K per yr\";\n\n  var pointOptometrists = getPointCoords(170),\n      titleOptometrists = \"Optometrists\",\n      labelOptometrists = \"$ 99.2K per yr\";\n\n  var pointSecondTeachers = getPointCoords(203),\n      titleSecondTeachers = \"Secondary school teachers\",\n      labelSecondTeachers = \"$ 44.87K per yr\";\n\n  var pointElementTeachers = getPointCoords(204),\n      titleElementTeachers = \"Elementary school teachers\",\n      labelElementTeachers = \"$ 22.36K per yr\";\n\n  var pointNurses = getPointCoords(165),\n      titleNurses = \"Registered nurses\",\n      labelNurses = \"$ 40K per yr\";\n\n  var hzLineAuto = getPointCoords(229),\n      titleLineAuto = \"50% risk\"\n      labelLineAuto = \"of automation\"\n\n  // Salary vs Years of Study trendline\n  // y = 7.6737x + 8.1584\n  var trendLineSalaryYears = getPointCoords(458)\n\n  var labelLineSalaryYears = getPointCoords(79)\n      labelLSY = \"As expected the more a person has studied the greater salary they tend to earn.\"\n\n  switch (mode) {\n\n    case 0: // Income vs Study\n    case 1: // Income vs Study\n    // annotate judges, lawyers, optometrists\n      labels = [\n      {\n        note: {\n          title: titleJudges,\n          label: labelJudges,\n          },\n          // connector: {},\n          x: pointJudges.x,\n          y: pointJudges.y,\n          dy: -20,\n          dx: -100,\n      },{\n        note: {\n          title: titleLawyers,\n          label: labelLawyers,\n          },\n          // connector: {},\n          x: pointLawyers.x,\n          y: pointLawyers.y,\n          dy: -10,\n          dx: -70,\n      },{\n        note: {\n          title: titleOptometrists,\n          label: labelOptometrists,\n          },\n          x: pointOptometrists.x,\n          y: pointOptometrists.y,\n          dy: -15,\n          dx: -150,\n      },{\n        // trend line\n          color: \"#4EA699\",\n          \"className\": \"trendLine\",\n          x: trendLineSalaryYears.x,\n          y: trendLineSalaryYears.y,\n          dy: getPointCoords(23).y-trendLineSalaryYears.y,\n          dx: getPointCoords(23).x-trendLineSalaryYears.x,\n      },{\n          \"className\": \"trendLabel\",\n        note: {\n          // label the trend line\n          label: labelLSY,\n          wrap: 200,\n          },\n          x: labelLineSalaryYears.x,\n          y: labelLineSalaryYears.y,\n          dy: -110,\n          dx: -80,\n          connector: { end: \"arrow\" }\n      }]\n      break;\n\n    case 2: // Income vs Jobs\n      labels = [\n      {\n        note: {\n          title: titleLawyers,\n          label: labelLawyers,\n        },\n          x: pointLawyers.x,\n          y: pointLawyers.y,\n          dy: -10,\n          dx: 80,\n      },{\n        note: {\n          title: titleElementTeachers,\n          label: labelElementTeachers,\n        },\n          x: pointElementTeachers.x,\n          y: pointElementTeachers.y,\n          dy: -50,\n          dx: -10,\n      },{\n        note: {\n          title: titleSecondTeachers,\n          label: labelSecondTeachers,\n        },\n          x: pointSecondTeachers.x,\n          y: pointSecondTeachers.y,\n          dy: -50,\n          dx: 50,\n      }]\n\n      break;\n\n    case 3: // Machines vs Jobs\n      labels = [\n      {\n        note: {\n          title: titleLawyers,\n          label: labelLawyers,\n        },\n          x: pointLawyers.x,\n          y: pointLawyers.y,\n          dy: 40,\n          dx: 50,\n      },{\n        note: {\n          title: titleElementTeachers,\n          label: labelElementTeachers,\n        },\n          x: pointElementTeachers.x,\n          y: pointElementTeachers.y,\n          dy: 95,\n          dx: -10,\n      },{\n        note: {\n          title: titleNurses,\n          label: labelNurses,\n        },\n          x: pointNurses.x,\n          y: pointNurses.y,\n          dy: 50,\n          dx: -40,\n      },{\n        color: \"#E3655B\",\n        \"className\": \"riskLine\",\n        note: {\n          title: titleLineAuto,\n          label: labelLineAuto,\n        },\n          x: $(window).width()*0.17,\n          y: hzLineAuto.y,\n          dy: 0,\n          dx: $(window).width()*0.6,\n      }]\n\n      break;\n\n    case \"colours\":\n\n      // get average cluster centers of mass\n      var thisCluster = 1\n      var divisor = 0\n\n      var centerX = new Array(industries.length)\n      var centerY = new Array(industries.length)\n\n      industries.forEach(function(){\n        centerX[thisCluster] = 0\n        centerY[thisCluster] = 0\n        // get each industry center of mass\n        graph.forEach(function(d){\n          if(d.cluster == thisCluster){\n            thisCircleQuery = document.getElementById(\"circle_\"+d.id)\n            var point = document.getElementById('chart').createSVGPoint();\n                point.x = d3.select(\"#circle_\"+d.id).attr(\"cx\");//get the circle cx \n                point.y = d3.select(\"#circle_\"+d.id).attr(\"cy\");//get the circle cy\n            var newPoint = point.matrixTransform(thisCircleQuery.getCTM());//new point after the transform\n            centerX[thisCluster] = centerX[thisCluster] + newPoint.x\n            centerY[thisCluster] = centerY[thisCluster] + newPoint.y\n            // centerY[thisCluster] += --circleY\n            divisor++}\n        })\n        centerX[thisCluster] = centerX[thisCluster] / divisor // average x\n        centerY[thisCluster] = centerY[thisCluster] / divisor // average x\n        // centerY[thisCluster] = centerY[thisCluster] / divisor // average x\n        divisor = 0 // reset for next industry\n        thisCluster++\n      })\n\n      labels = [\n      {\n        note: {\n          label: \"Natural resources and agriculture\",\n        },\n          x: centerX[10],\n          y: centerY[10],\n          // x: getPointCoords(414).x,\n          // y: getPointCoords(414).y,\n\n      },{\n        note: {\n          label: \"Management\",\n        },\n          x: centerX[1],\n          y: centerY[1],\n          // dy: -130,\n          // dx: -15,\n      },{\n        note: {\n          label: \"Art, culture, recreation and sport\",\n        },\n          x: centerX[2],\n          y: centerY[2],\n          // dy: -240,\n          // dx: 15,\n      },{\n        note: {\n          label: \"Trades, transport and equipment ops\",\n        },\n          x: centerX[3],\n          y: centerY[3],\n          // dy: 100,\n          // dx: -15,\n      },{\n        note: {\n          label: \"Business, finance and administration\",\n        },\n          x: centerX[4],\n          y: centerY[4],\n          // dy: 60,\n          // dx: -10,\n      },{\n        note: {\n          label: \"Education, law, social, community, government\",\n        },\n          x: centerX[5],\n          y: centerY[5],\n          // dy: function(){\n          //   if(getPointCoords(204).y > $(window).height()/2 ){\n          //     return -50\n          //   }else{return 50}\n          // },\n          // dx: -10,\n      },{\n        note: {\n          label: \"Natural and applied sciences\",\n        },\n          x: centerX[6],\n          y: centerY[6],\n          // dy: -150,\n          // dx: 5,\n      },{\n        note: {\n          label: \"Manufacturing and utilities\",\n        },\n          x: centerX[7],\n          y: centerY[7],\n          // dy: 60,\n          // dx: 10,\n      },{\n        note: {\n          label: \"Health\",\n        },\n          x: centerX[8],\n          y: centerY[8],\n          // dy: 70,\n          // dx: 10,\n      },{\n        note: {\n          label: \"Sales and services\",\n        },\n          x: centerX[9],\n          y: centerY[9],\n          // dy: -50,\n          // dx: 50,\n      }]\n\n      break;\n\n    } // end switch\n\n    makeAnnotations = d3.annotation()\n      // .editMode(true)\n      // .type(type)\n      .type(d3.annotationLabel)\n      //accessors & accessorsInverse not needed\n      //if using x, y in annotations JSON\n      .accessors({\n        x: d => x(d.yearsStudy),\n        y: d => y(d.salaryMed)\n      })\n      .accessorsInverse({\n         yearsStudy: d => x.invert(d.x),\n         wage: d => y.invert(d.y)\n      })\n      .annotations(labels)\n      \n// const makeAnnotations = d3.annotation()\n//   .annotations(annotations)\n\n    d3.select(\"#chart\")\n      .append(\"g\")\n      .attr(\"class\", \"annotation-group\")\n      .call(makeAnnotations)\n      .style(\"opacity\",0).transition().duration(500).style(\"opacity\",1)\n}\n      // },{\n      //   note: {\n      //     label: \"somelabel\",\n      //     title: \"sometitle\",\n      //     wrap: 150\n      //   },\n      //   connector: {\n      //     // end: \"dot\",\n      //     // type: \"curve\",\n      //     //can also add a curve type, e.g. curve: d3.curveStep\n      //     // points: [[100, 14],[190, 52]]\n      //   },\n      //   x: 350,\n      //   y: 150,\n      //   dy: 137,\n      //   dx: 262\n      // },{\n      //   //below in makeAnnotations has type set to d3.annotationLabel\n      //   //you can add this type value below to override that default\n      //   type: d3.annotationCalloutCircle,\n      //   note: {\n      //     label: \"A different annotation type\",\n      //     title: \"d3.annotationCalloutCircle\",\n      //     wrap: 190\n      //   },\n      //   //settings for the subject, in this case the circle radius\n      //   subject: {\n      //     radius: 50\n      //   },\n      //   x: 620,\n      //   y: 150,\n      //   dy: 137,\n      //   dx: 102\n      // }]\n      // .map(function (l) {\n      //   l.note = Object.assign({}, l.note, { title: \"Title: \" + l.note.title,\n      //     label: \"label: \" + l.note.label });\n      //   return l;\n      // })\n      // .map(function(d){ d.color = \"#E8336D\"; return d})\n\n\n\n\n\n\n\nfunction hideLeftButtons() {\n    // hide industry split, shuffle, combine\n    d3.select(\"#split\").transition().duration(500).style(\"opacity\", 0);\n    setTimeout(function(){d3.select(\"#split\").style(\"display\",\"none\")}, 500);\n    d3.select(\"#shuffle\").transition().duration(500).style(\"opacity\", 0);\n    setTimeout(function(){d3.select(\"#shuffle\").style(\"display\",\"none\")}, 500);\n    d3.select(\"#combine\").transition().duration(500).style(\"opacity\", 0);\n    setTimeout(function(){d3.select(\"#combine\").style(\"display\",\"none\")}, 500);\n    d3.select(\".btn-group\").style(\"padding-left\", \"0px\");\n    // hide play/pause as well\n    d3.select(\"#pause\").transition().duration(500).style(\"opacity\", 0);\n    d3.select(\"#unpause\").transition().duration(500).style(\"opacity\", 0);\n    setTimeout(function(){\n      d3.select(\"#pause\").style(\"display\", \"none\");\n      d3.select(\"#unpause\").style(\"display\", \"none\");\n    }, 500)\n}\nfunction showLeftButtons() {\n\n    d3.select(\"#split\").style(\"display\",\"inline\").transition().duration(500).style(\"opacity\", 1);\n    d3.select(\"#shuffle\").style(\"display\",\"inline\").transition().duration(500).style(\"opacity\", 1);\n    d3.select(\".btn-group\").style(\"padding-left\", \"0px\")\n\n    d3.select(\"#pause\").style(\"display\",\"inline\").transition().duration(500).style(\"opacity\", 1);\n    d3.select(\"#unpause\").transition().duration(500).style(\"opacity\", 1);\n}\n\n\n\nfunction graphModeOff() {\n  // move legend div back\n  d3.selectAll(\".imgGraphExplain\").transition().duration(500).style(\"opacity\",0).remove()\n  d3.select(\"#legend\").transition().duration(500).style(\"bottom\",\"230px\")\n  d3.select(\"#grid-container-views\").transition().duration(500).style(\"opacity\",0)\n  setTimeout(function(){$(\"#grid-container-views\").hide();},500)\n  if($(window).width() <= 320){\n\n  }else if($(window).width() <= 768){\n      d3.select(\"#btnColours\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"left\",\"32px\")\n      .style(\"bottom\",\"180px\")\n      d3.select(\"#btnSizes\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"right\",\"32px\")\n      .style(\"bottom\",\"180px\")\n  } else if($(window).width() <= 1024){\n      d3.select(\"#btnColours\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"left\",\"45px\")\n      .style(\"bottom\",\"255px\")\n      d3.select(\"#btnSizes\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"right\",\"45px\")\n      .style(\"bottom\",\"255px\")\n  } else {\n      d3.select(\"#btnColours\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"left\",$(window).width()*0.14+\"px\")\n      .style(\"bottom\",$(window).height()*0.461+\"px\")\n      d3.select(\"#btnSizes\").transition().duration(500)\n      .style(\"position\",\"fixed\")\n      .style(\"right\",$(window).width()*0.14+\"px\")\n      .style(\"bottom\",$(window).height()*0.461+\"px\")\n  }\n\n  // resize()\n  // clear annotations\n  d3.selectAll(\".annotation-group\").transition().duration(500).style(\"opacity\",0).remove()\n\n  d3.select(\"#graphToggle\").attr(\"src\",\"img/toggle-off.png\")\n\n    showLeftButtons();\n  \n  // hide graph modes options\n\n  // remove axes\n  axisG.style(\"opacity\", 1).transition().duration(500).style(\"opacity\",0)\n  .remove();\n\n    // move sliders back up\n    moveBottomUp();\n    // Transition back to original positions\n    circles.transition()\n    .duration(750)\n    // .attr(\"r\", function(d) { return originalRadius[d.id] })\n    .style(\"fill\", function(d) { return color(d.cluster) })\n      // set x, y values\n    .attrTween(\"cx\", function(d) { // transition x position to...\n      // previous positions\n      var i = d3.interpolate(d.cx, positionsX[d.id])\n      return function(t) { return d.cx = i(t); };\n    })\n    .attrTween(\"cy\", function(d) { // transition y position to...\n      // previous positions\n      var i = d3.interpolate(d.cy, positionsY[d.id]);\n      return function(t) { return d.cy = i(t); };\n    });\n\n    // start the simulation after the transition delay\n    setTimeout(function() {\n      simulation.alphaTarget(0.001).restart();\n    }, 750);\n\n  \n  return;\n\n}\n\n\n\n\n\n\n\n\n// Transition node areas and colours to automationRisk\n  var pastPosX = {};\n  var pastPosY = {};\n\n///////////// Reset Filters /////////////\n\nd3.select(\"#resetFilters\").on('click', function(d) {\n  resetFilters(currentMode);\n});\n\nresetFilters = function(mode) {\n  // collapseCircleImages() if expanded \n  if(circlesExpanded == 1){\n    circlesExpanded = 0;\n  }\n  // reset sizes\n      // reset all buttons & colour this button green      \n      d3.selectAll(\".btnSizesOption\").style(\"color\",\"#49AC52\").style(\"background\",\"white\")\n      d3.select(\"#equaLink\").style(\"color\",\"white\").style(\"background\",\"#49AC52\")\n      currentSize = \"nothing\"\n      // transition radii to selected values\n      d3.selectAll(\".jobCircle\").attr(\"r\",collapsedRadius)\n\n  if(graphMode == 0) { // reset simulation forces if simulating\n    setTimeout(function() { \n      forceCollide = d3.forceCollide($(window).height()*0.009)\n      forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n      simulation\n      .force(\"cluster\", forceCluster)\n      .force(\"x\", forceXCombine)\n      .force(\"y\", forceYCombine)\n      .force(\"gravity\", forceGravity)\n      .force(\"collide\", forceCollide)\n      .on(\"tick\", tick)\n      simulation.alpha(0.5).alphaTarget(0.001).restart(); \n    }, 450);\n  }\n  // reset colour filters\n  circles.transition().duration(500).style(\"opacity\",1)  \n  filteredIndustries = []\n  d3.selectAll(\".legendCirc\").attr(\"opacity\",1)\n  // reset size filters\n  d3.selectAll(\".legendCircle\").remove()\n  d3.selectAll(\".legendText\").remove()\n  currentSize = \"nothing\"\n  d3.select(\"#svgSizesLegend\").append(\"text\")\n  .attr(\"class\",\"legendText\")\n  .attr(\"text-anchor\",\"left\")\n  .attr(\"transform\",\"translate(73,45)\")\n  .text(\"Equal sizes\")\n  .style(\"opacity\",0).transition().duration(600).style(\"opacity\",1)\n  // Reset green inset-left on all sliders\n  // Main sliders\n  for(var i=0; i<sliderArray.length; i++) {\n    d3.select(\"#inset-left_\"+i).transition().duration(500).attr(\"x2\", 0 )\n  };\n  // reset the graph\n  graph = store;\n  hideAll();\n  hideGraphViewCallout();\n  // reset the slider positions\n  for(var i=0; i<sliderArray.length; i++) {\n    handleArray[i].transition().duration(500).attr(\"cx\", sliderScaleArray[i](0)); // move the slider handle\n    sliderPositionsArray[i] = 0; // Update the slider positions array\n  };\n  // reset all circles\n  circles = circles.data(store, function(d) { return d.id });\n  // ENTER (create the circles with all attributes)\n  enterUpdateCircles();\n  // restart simulation only if graph mode off\n  if (graphMode == 0) {\n    resetSimulation();\n  } else if (graphMode == 1) {\n    switch (mode) {\n      case 0:\n        circles\n          // x = Number of Jobs\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n          // y = Automation Risk\n          .attr(\"cy\", function(d){ return (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate});\n          break;\n      case 1:\n        circles\n          // x = Years of Study\n          .attr(\"cx\", function(d){ return d.yearsStudy/maxYearsStudy*width*0.73 - width*0.4 + graphXtranslate})\n          // y = Wage\n          .attr(\"cy\", function(d){ return ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate});\n          break;\n\n      case 2:\n        circles\n          // x = Number of Jobs\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n          // y = Wage\n          .attr(\"cy\", function(d){ return ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate});\n          break;\n          // x = Number of Jobs\n          // y = Automation Risk (same as initial, but using cx to glide into position from previous positions)\n      case 3:\n        circles\n          // x = Number of Jobs\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n          // y = Automation Risk (same as initial, but using cx to transition into position from previous positions)\n          .attr(\"cy\", function(d){ return (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate});\n          break;\n\n      case 4:\n        circles\n          // x = Number of Jobs\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n          // y = Automation Risk\n          .attr(\"cy\", function(d){ return (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate});\n          break;\n\n      case 5: // graph mode off\n        circles\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.9 - width/2 + margin.left  + graphXtranslate})\n          .attr(\"cy\", function(d){ return (d.automationRisk)*height - height/2 + graphYtranslate})\n          break;\n      }\n\n\n    }\n  }; // end resetFilters()\n\n\nfunction resetSimulation() {\n  simulation.nodes(store)\n  .force(\"collide\", forceCollide)\n  .force(\"cluster\", forceCluster)\n  .force(\"gravity\", forceGravity)\n  .force(\"x\", forceXCombine)\n  .force(\"y\", forceYCombine)\n  .on(\"tick\", tick);\n\n  restartSimulation();\n}\n\nfunction restartSimulation(){\n  simulation.alpha(0.25).alphaTarget(0.001).restart();\n}\n\n/////// Tooltips (post-filter)\n\nenterUpdateCircles = function() {\n    var newCircles = circles.enter().append(\"circle\")\n    .attr(\"r\", collapsedRadius) // start at full radius\n    .attr(\"transform\", circleHeight(0, -100+$(window).height()*0.080) ) //flag! need to make equation for width/height ratio\n    .style(\"fill\", function(d) { \n      if(circleExpanded[d.id] != 1){\n        return color(d.cluster); \n      }else { return \"url(#pattern_\"+d.id+\")\" }\n     })\n    .attr(\"class\",\"jobCircle\")\n    .attr(\"id\",function(d) { return \"circle_\"+d.id })\n    .attr(\"opacity\",\n      function(d) { // make filtered circles transparent\n        // if the industry is on the list, transparent\n        if( filteredIndustries.includes(+d.industryNum) ) { \n          return 0.1 }\n        else{ \n          return 1 }\n    })  \n    // newCircles.attr(\"r\",0).transition().duration(500).attr(\"r\", function(d) { return d.radius })\n    // Tooltips\n    .on(\"mouseenter\", function(d) {\n      if (clicked == 1) return;\n      // highlight the current circle\n      d3.selectAll(\"circle\").attr(\"stroke\", \"none\");\n      d3.select(this)\n        .style(\"fill\", \"url(#pattern_\"+d.id+\")\" )\n        // .attr(\"stroke\", \"black\")\n        .style(\"stroke-width\", 2)\n        .attr(\"stroke\", color(d.cluster));\n      showToolTip(0);\n      tooltipMouseover(d);\n      hoverTimeout = setTimeout(function(){\n        tooltipLarge(d)\n        clicked = 1\n      }, 1750)\n      })\n    .on(\"mouseout\", function(d) {\n\n      if(!circleExpanded[d.id] == 1){\n        d3.select(this)\n          .style(\"fill\", color(d.cluster) )\n          // .attr(\"stroke\", \"black\")\n          .style(\"stroke-width\", 2)\n          .attr(\"stroke\", color(d.cluster));\n      }\n\n      clearTimeout(hoverTimeout)\n      if (clicked == 1) return;\n      clicked = 0;\n      hideToolTip(500)\n      d3.select(this).attr(\"stroke\", \"none\");\n      // div.transition().duration(500).style(\"opacity\", 0)\n\n    })\n    .on(\"click\", function(d) {\n      clearTimeout(hoverTimeout)\n      // click-off\n      if (clicked == 1) { \n        clicked = 0\n        hideToolTip(500)\n      // click-on\n      } else if (clicked == 0) {\n        clicked = 1;\n        tooltipLarge(d);\n       }\n      // hideToolTip(0);\n      // if(typeof div2 != \"undefined\") div2.transition().duration(250).style(\"height\",\"0px\").remove();\n      // tooltipSmall(d);}\n      })\n\n  drag_handler(newCircles);\n  //  ENTER + UPDATE\n  if(graphMode == 1){ // transition in radii in graph mode\n    circles = circles.merge(\n      newCircles.attr(\"r\",0).transition().duration(500)\n      .attr(\"r\", collapsedRadius));\n  }else if(graphMode == 0){\n    circles = circles.merge(newCircles);\n  }\n  \n\n}\n\n\n\n\n\n\n\n\n\n\n\n///////////////////////////////// Filters ////////////////////////////////////\nvar sliderSideTranslate = 9;\nif(window.innerWidth >= 1007) {\n  sliderSideTranslate = window.innerWidth*0.01\n  // d3.select(\"#titleBar\").style(\"margin-left\", window.innerWidth*0.01 + \"vw\")\n  // d3.select(\"#search-btn-div\").style(\"right\", window.innerWidth*0.0094 + \"vw\")\n}\nvar sliderHeightTranslate = 9;\n// d3.select(\"#titleBar\").style(\"margin-left\",\"14vw\")\n//////////////// Filter Sliders 2: Multiple Sliders from an Array //////////////////////\n\ncreateSliders(sliderArrayMain, sliderTitlesArrayMain);\n\n// createSliders(sliderArrayLang, sliderTitlesArrayLang);\n\nfunction createSliders(createSliderArray, sliderTitlesArray){\n// For Each Slider create the slider\n  for(var i=0; i<createSliderArray.length; i++) {\n    \n    var sub_xtranslate = 3,\n        xtrans,\n        ytrans;\n    var leftOrRight, topOrBottom;\n\n  // Top row\n  if([\"Communication <p class='sliderText'>and Verbal skills</p>\", \"Logic and <p class='sliderText'>Reasoning skills</p>\"].includes(sliderTitlesArray[i])){\n    xtrans = sliderSideTranslate;\n    ytrans = sliderHeightTranslate;\n    topOrBottom = \"top\";\n  }\n\t// Right column\n\tif([\"Math and <p class='sliderText'>Spatial skills</p>\", \"Logic and <p class='sliderText'>Reasoning skills</p>\"].includes(sliderTitlesArray[i])){\n\t\t// xtrans = sliderSideTranslate;\n    leftOrRight = \"right\";\n    // posn = \"fixed\";\n\t}\n   // Bottom row\n  if([\"Math and <p class='sliderText'>Spatial skills</p>\", \"Computer and <p class='sliderText'>Information skills</p>\"].includes(sliderTitlesArray[i])){\n    xtrans = sliderSideTranslate;\n    ytrans = sliderHeightTranslate;\n    topOrBottom = \"bottom\";\n  }\n  // Left column\n  if([\"Communication <p class='sliderText'>and Verbal skills</p>\", \"Computer and <p class='sliderText'>Information skills</p>\"].includes(sliderTitlesArray[i])){\n    leftOrRight = \"left\";\n  }\n\n  // Title & SVG\n  var sliderButtonArrows = [\"&#9660\", \"&#9660\", \"&#9650\", \"&#9650\"];\n  var sliderButtonPositions = [];\n\n  sliderSVGArray[i] = d3.select(\"body\")\n  .append(\"div\")\n    .attr(\"id\", \"sliderDiv_\"+sliderArrayMain[i]) // sliderDiv_skillsLang\n    .style(\"position\", \"fixed\")\n    .style(leftOrRight, xtrans+\"vw\")\n    .style(topOrBottom, ytrans+\"vh\")\n    // lg and xl\n    .html(\n      \"<img id=question_\"+i+\" style='border-radius: 29px; display: inline-block; padding-left: 5px; padding-bottom: 2px; margin: 20px 20px 0px 0px; float: right' src='img/question.png' \"\n      +\"alt='help' height='26' width = '29'>\"\n      +\"<div class='inactiveHeader' align='left' style='display: inline-block; height: 66px; width: 180px; float: left; margin-left: \"+(sub_xtranslate+2)+\"%;\"\n      +\"font-size: 140%; font-weight: bold;\"\n      +\" font-family: Raleway'>\"\n      +sliderTitlesArray[i] // \"Communication <p class='sliderText'>and Verbal skills</p>\"\n      +\"</div>\"\n      )\n\n  // Not Much       Lots\n  .append(\"div\")\n    .attr(\"align\", \"left\")\n    .style(\"position\", \"relative\")\n    .style(\"margin-top\", \"39%\")\n    .style(\"margin-left\", (sub_xtranslate)+\"%\")\n    .style(\"color\", \"#49AC52\")\n    .style(\"font-weight\", \"bold\")\n    .style(\"font-family\", \"Raleway\")\n    .html(\"<div id='notmuchlots_\"+i+\"' class='inactiveText' style='margin-left: 5px; margin-top: -4px'>\"\n      +\"Not&nbspmuch\"\n      +\"<span id='notmuchSpan_\"+i+\"' style='margin-left: \"+137+\"px;'></span>\"\n      +\"Lots</div>\"+\n      \"<div id=subSliderDiv_\"+i+\">\"+\n      \"<span>\"+\n        \"<button id='btnSubsliders_\"+i+\"' class='expand-sliders-btn' style='width: 250px; margin-top: 4px; margin-left: 1px; fill: white; z-index: 99;' \"+\n        \"onclick='expandSliders(\"+i+\")' type='button'>\"+\n          \"<span id='spanSubsliders_\"+i+\"' style='font-family: Raleway; font-size: 15; font-weight: bold; color: #49AC52;'>\"+sliderButtonArrows[i]+\" view \"+sliderTitlesArrayMainCompact[i].toLowerCase()+\" \"+sliderButtonArrows[i]+\"</span>\"+\n        \"</button>\"+\n      \"</span></div>\")\n    .select(function() {\n    return this.parentNode;\n  \t})\n  // Slider svg\n  .append(\"svg\")\n  \t.style(\"z-index\", 99)\n  \t// .attr(\"viewBox\", \"0 3 \"+230+\" \"+50)\n    .style(\"position\", \"absolute\")\n    .style(\"top\", 56+\"px\") // y position\n    // .style(\"margin-left\", -sub_xtranslate+\"%\") // x position\n    .attr(\"id\", \"slider_\"+i)\n    .attr(\"width\", 250)\n    .attr(\"height\", 60);\n\n$(document).ready(function(){resize()})\n\n\n\n  sliderSVGArray[i].attr(\"class\", \"d-inline d-sm-inline d-md-inline d-lg-inline d-xl-inline\")\n  var mainSlidersWidth = 223;\n  var reductionFactor = 0.7;\n\n  // Scale\n  sliderScaleArray[i] = d3.scaleLinear()\n    .domain([0, d3.max(nodes, function(d){ return d[sliderArrayMain[i]]}) * reductionFactor ]) // lower the maximum for all skills by 20% to prevent filtering down to 0\n    .range([0, mainSlidersWidth]) // Width of slider is 200 px\n    .clamp(true);\n  // Bugfix: math max not working\n  if([\"Math and <p class='sliderText'>Spatial skills</p>\"].includes(sliderTitlesArray[i])) {\n  sliderScaleArray[i] = d3.scaleLinear()\n    .domain([0, 59 * reductionFactor])\n    .range([0, mainSlidersWidth]) // Width of slider is 200 px\n    .clamp(true);\n  }\n\n  // Move Wage, Number of Jobs down\n    // Slider\n  sliderMulti[i] = sliderSVGArray[i].append(\"g\") // switch to SVG with viewBox?\n  .attr(\"class\", \"slider\")\n  .attr(\"transform\", \"translate(\" + 25 + \",\" + 25 + \")\");\n\n  // track\n  sliderMulti[i].append(\"line\")\n  .attr(\"class\", \"track\")\n  .attr(\"x1\", sliderScaleArray[i].range()[0])\n  .attr(\"x2\", sliderScaleArray[i].range()[1])\n  .select(function() {\n    return this.parentNode;\n  }) // inset\n  .append(\"line\")\n  .attr(\"x1\", sliderScaleArray[i].range()[0])\n  .attr(\"x2\", sliderScaleArray[i].range()[1])\n  .attr(\"class\", \"track-inset\")\n  .select(function() {\n    return this.parentNode;\n  }) // inset-left (fills up green on drag)\n  .append(\"line\")\n  .attr(\"x1\", sliderScaleArray[i].range()[0])\n  .attr(\"x2\", sliderScaleArray[i].range()[0])\n  .attr(\"class\", \"track-inset-left\")\n  .attr(\"id\",\"inset-left_\"+i)\n  .select(function() {\n    return this.parentNode;\n  }) // overlay\n  .append(\"line\")\n  .attr(\"x1\", sliderScaleArray[i].range()[0])\n  .attr(\"x2\", sliderScaleArray[i].range()[1])\n  .attr(\"class\", \"track-overlay\")\n  .attr(\"id\", i)\n  .on(\"mouseover\", function() {\n    d3.select(\"#handle_\"+this.id).style(\"fill\",\"#eaeaea\")\n  })\n  .on(\"mouseout\", function() {\n    d3.select(\"#handle_\"+this.id).style(\"fill\",\"white\")\n    if(typeof miniTooltip != \"undefined\"){\n      miniTooltip.transition().duration(500)\n      .style(\"opacity\",0)\n    }\n  })\n  .call(d3.drag()\n    .on(\"start.interrupt\", function() {\n      sliderMulti[event.target.id].interrupt();\n    }) // drag update function\n    .on(\"start drag\", function() {\n      if(typeof miniTooltip == \"undefined\"){\n        miniTooltip = d3.select(\"body\").append(\"div\")\n          .attr(\"class\", \"minitooltip\")\n          .style(\"opacity\", 0);\n      }\n      // show mini tooltip indicating how many job groups remain\n      \n\n\n      miniTooltip.transition().duration(200)\n      .style(\"opacity\",.9)\n      miniTooltip.html(graph.length + \" job groups<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remain\")\n      // .style(\"left\", (event.pageX - 64) + \"px\")\n      \n      if($(event.target).attr('class') == 'track-overlay'){\n        miniTooltip.style(\"top\", (event.target.getBoundingClientRect().top - 90) + \"px\")\n      }\n                  // (d3.select(\"#handle_\"+this.id)\n      if(graph.length >= 10){ \n        miniTooltip.style(\"left\", (document.getElementById(\"handle_\"+this.id).getBoundingClientRect().left - 55) + \"px\") \n\n      }\n      graph.length <= 50 ? miniTooltip.style(\"color\",\"#FEB22E\") : miniTooltip.style(\"color\", \"white\")\n      if(graph.length <= 25){ \n        miniTooltip.style(\"color\",\"#FE2E2E\") \n\n\n\n\n\n        expandCircleImages()\n\n\n\n\n\n\n\n\n\n      } else { collapseCircleImages(); }\n\n      if(graph.length >= 175){\n        forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n\n        simulation\n        .force(\"collide\", forceCollide)\n        .force(\"cluster\", forceCluster)\n        .force(\"gravity\", forceGravity)\n        .force(\"x\", forceXCombine)\n        .force(\"y\", forceYCombine)\n        .on(\"tick\", tick);\n\n        if(graphMode == 0){\n          simulation.alpha(0.15).alphaTarget(0.001).restart();\n        }\n\n      }\n\n      updateMulti(sliderScaleArray[event.target.id].invert(d3.event.x), currentMode); // pass the current line id to update function\n      // }\n    \n    })\n  );\n\n  handleArray[i] = sliderMulti[i].insert(\"circle\", \".track-overlay\")\n    .attr(\"class\", \"handle\")\n    .style(\"z-index\", 99)\n    .attr(\"r\", 9)\n    .attr(\"id\",\"handle_\"+i);\n\n    // Bugfix: lang slider not on top\n  // if([\"Communication <p class='sliderText'>and Verbal skills</p>\"].includes(sliderTitlesArray[i])) {\n  //   d3.select(\"#\"+i).style(\"z-index\", 99);\n  // }\n\n};\n\n\n\n\n//////////////////////// Create Sub Sliders ///////////////////////////////\n\n// for each slider_1-4,                           (1: Language 2: Logic 3: Math 4: Computer)\n//  for each subskill in that skill\n//    append/create a subslider with that subskill's y-translate height\n\n// TODO: append divs to appropriate parents\n\n// y-translate map\n// map slider name to x,y position\nvar sliderYTranslateMap = new Map();\nvar sliderXTranslateMap = new Map();\nvar sliderLeftRightMap = new Map();\nvar fontSizeMap = new Map();\n\nfor (var i = sliderTitlesArray.length - 1; i >= 0; i--) {\n  fontSizeMap.set(sliderTitlesArray[i], 100)\n}\n// Lang X, Y\nfor (var i = sliderTitlesArrayLang.length - 1; i >= 0; i--) {\n  sliderXTranslateMap.set(sliderTitlesArrayLang[i], 1.5) // X\n  sliderYTranslateMap.set(sliderTitlesArrayLang[i], window.innerHeight*0.08*i-170) // Y\n  // sliderLeftRightMap.set(sliderTitlesArrayLang[i], \"left\")\n  // shrink longer titles\n  if([\"Job Task Planning and Organizing\",\"Measurement and Calculation\",\n    \"Scheduling or Budgeting and Accounting\", ].includes(sliderTitlesArrayLang[i])){\n      fontSizeMap.set(sliderTitlesArrayLang[i], 100)\n  }\n}\n// Logi X, Y\nfor (var i = sliderTitlesArrayLogi.length - 1; i >= 0; i--) {\n  sliderXTranslateMap.set(sliderTitlesArrayLogi[i], 1.5) // X\n  sliderYTranslateMap.set(sliderTitlesArrayLogi[i], window.innerHeight*0.08*i-170) // Y\n  // sliderLeftRightMap.set(sliderTitlesArrayLogi[i], \"right\")\n  // shrink longer titles\n  if([\"Job Task Planning and Organizing\",\"Measurement and Calculation\",\n    \"Scheduling or Budgeting and Accounting\", ].includes(sliderTitlesArrayLogi[i])){\n      fontSizeMap.set(sliderTitlesArrayLogi[i], 100)\n  }\n}\n// Math X, Y\nfor (var i = sliderTitlesArrayMath.length - 1; i >= 0; i--) {\n  sliderXTranslateMap.set(sliderTitlesArrayMath[i], 1.5) // X\n  sliderYTranslateMap.set(sliderTitlesArrayMath[i], window.innerHeight*0.08*i-170) // Y\n  // sliderLeftRightMap.set(sliderTitlesArrayMath[i], \"right\")\n  // shrink longer titles\n  if([\"Job Task Planning and Organizing\",\"Measurement and Calculation\"].includes(sliderTitlesArrayMath[i])){\n      fontSizeMap.set(sliderTitlesArrayMath[i], 100)\n  } else if([\"Scheduling or Budgeting and Accounting\", ].includes(sliderTitlesArrayMath[i])){\n      fontSizeMap.set(sliderTitlesArrayMath[i], 100)\n  }\n}\n// Comp X, Y\nfor (var i = sliderTitlesArrayComp.length - 1; i >= 0; i--) {\n  sliderXTranslateMap.set(sliderTitlesArrayComp[i], 1.5) // X\n  sliderYTranslateMap.set(sliderTitlesArrayComp[i], window.innerHeight*0.08*i-170) // Y\n  // sliderLeftRightMap.set(sliderTitlesArrayComp[i], \"left\")\n  // resize larger titles\n  if([\"Job Task Planning and Organizing\",\"Measurement and Calculation\",\n    \"Scheduling or Budgeting and Accounting\", ].includes(sliderTitlesArrayComp[i])){\n      fontSizeMap.set(sliderTitlesArrayComp[i], 100)\n  }\n}\n\n\n\ncreateSubSliders(sliderArrayLang, sliderTitlesArrayLang, 4, 0);\n\ncreateSubSliders(sliderArrayLogi, sliderTitlesArrayLogi, 7, 1);\n\ncreateSubSliders(sliderArrayMath, sliderTitlesArrayMath, 11, 2);\n\ncreateSubSliders(sliderArrayComp, sliderTitlesArrayComp, 15, 3);\n\n\n\n\nfunction createSubSliders(subSliderArray, subSliderTitlesArray, indexIn_sliderArray, appendToDiv){\n  \n  // For Each Slider create the slider\n  for(var i=0; i<subSliderArray.length; i++) {\n    \n    // sliderPositionsArray, \n    // sliderScaleArray, and handleArray\n    // are used in filterAll() and updateMulti() \n    // so they must include all sliders \n    // --> increment i by j\n    var j = indexIn_sliderArray;\n\n    var xtranslate, ytranslate;\n    // Left column\n\n    ytranslate = sliderYTranslateMap.get(subSliderTitlesArray[i])\n    xtranslate = sliderXTranslateMap.get(subSliderTitlesArray[i])\n    // var leftOrRight = sliderLeftRightMap.get(subSliderTitlesArray[i])\n\n    // Title & SVG\n    sliderSVGArray[(i+j)] = d3.select(\"#btnSubsliders_\"+appendToDiv)\n      .append(\"div\").style(\"display\",\"inline\")\n        .attr(\"id\", \"sliderDiv_\"+subSliderArray[i]) // sliderDiv_skillsLang\n        .style(\"position\", \"absolute\")\n        .style(\"left\", xtranslate+\"%\")\n        .style(\"top\", ytranslate+220+\"px\")\n        .style(\"width\",\"400px\")\n        // lg and xl\n        .html(\"<div class='d-inline d-sm-inline d-md-inline d-lg-inline d-xl-inline' align='left' style='\"+\n          \"position: absolute; left: \"+(xtranslate+3)+\"%; width: 400px;\"\n          +\" font-size: \"+fontSizeMap.get(subSliderTitlesArray[i])+\"%; font-weight: bold;\"\n          +\" color:  #49AC52; font-family: Raleway'>\"\n          +subSliderTitlesArray[i] // Skill title\n          +\"</div>\"\n        // md sm and xs\n      // +\"<div class='d-inline d-sm-inline d-md-inline d-lg-none d-xl-none' align='left' style='margin-left: \"+(xtranslate)+\"%;\"\n      //     +\"font-size: 115%; font-weight: bold;\"\n      //     +\" color:  #49AC52; font-family: Raleway'>\"\n      //     +subSliderTitlesArray[i].substring(0,subSliderTitlesArray[i].length - 7)+\"...\" // \"Communication <p class='sliderText'>and Verbal skills</p>\"\n      //     +\"</div>\"\n        // sm and xs\n      // +\"<div class='d-inline d-sm-inline d-md-none d-lg-none d-xl-none' align='left' style='margin-left: \"+(xtranslate)+\"%;\"\n      //     +\"font-size: 100%; font-weight: bold;\"\n      //     +\" color:  #49AC52; font-family: Raleway'>\"\n      //     +subSliderTitlesArray[i].substring(0,subSliderTitlesArray[i].length - 7) // \"Communication <p class='sliderText'>and Verbal skills</p>\"\n\n      //     +\"</div>\"\n          )\n\n      .append(\"div\").attr(\"id\", \"sliderDiv2_\"+subSliderArray[i])\n        .attr(\"align\", \"left\")\n        .style(\"position\", \"relative\")\n        .style(\"margin-top\", \"19%\")\n        .style(\"margin-left\", 13+\"%\")\n        .style(\"font-weight\", \"bold\")\n        .attr(\"class\",\"inactiveHeader\")\n        .style(\"font-family\", \"Raleway\")\n        .html(\"<div id='notmuchlots_\"+(i+j)+\"' class='inactiveText d-inline d-sm-inline d-md-inline d-lg-inline d-xl-inline' style='font-family: Raleway'>Not&nbspmuch\"\n          +\"<span id='notmuchSpan_\"+(i+j)+\"' style='margin-left: \"+window.innerWidth*0.135+\"px'></span>\"\n          +\"Lots</div>\")\n        .select(function() {\n        return this.parentNode;\n        })\n\n      .append(\"svg\").attr(\"id\", \"sliderSvg_\"+subSliderArray[i])\n        .style(\"z-index\", 99)\n        .style(\"left\", xtranslate+\"%\")\n        // .attr(\"viewBox\", \"0 10 \"+250+\" \"+50)\n        .style(\"position\", \"absolute\")\n        .style(\"top\", window.innerHeight*0.0215+\"px\") // y position\n        // .style(\"margin-left\", -xtranslate+\"%\") // x position\n        .attr(\"id\", \"slider_\"+(i+j))\n        .attr(\"width\", 280)\n        .attr(\"height\", 50);\n\n\n     \n    // sliderSVGArray[(i+j)].attr(\"class\", \"d-inline d-sm-inline d-md-inline d-lg-inline d-xl-inline\")\n\n    // hide until shown\n    sliderSVGArray[(i+j)].style(\"display\",\"none\")\n    // d3.select(\"#sliderDiv2_\"+sliderArray[(i+j)]).style(\"visibility\", \"hidden\")\n    d3.select(\"#notmuchlots_\"+(i+j)).style(\"visibility\", \"hidden\")\n    d3.select(\"#sliderDiv_\"+subSliderArray[i]).style(\"visibility\", \"hidden\")\n\n    var slidersWidth = 230;\n    var reductionFactorSubskills = 0.6; // reduce the subskill slider ranges to 60% to avoid over-filtering\n\n    // Scale\n    sliderScaleArray[(i+j)] = d3.scaleLinear()\n      .domain([0, d3.max(nodes, function(d){ return d[subSliderArray[i]]}) * reductionFactorSubskills ])\n      .range([0, slidersWidth]) // Width\n      .clamp(true);\n\n    if([\"Oral Communication\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 43 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Reading\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 49 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Writing\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 55 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Job Task Planning and Organizing\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 23 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Critical Thinking\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 20 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Problem Solving\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 23 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Document Use\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 33 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Data Analysis\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 25 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Finding Information\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 20 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Digital Technology\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 58 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Measurement and Calculation\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 31 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Scheduling or Budgeting and Accounting\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 28 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    if([\"Numerical Estimation\"].includes(subSliderTitlesArray[i])){\n      sliderScaleArray[(i+j)] = d3.scaleLinear()\n        .domain([0, 11 * reductionFactorSubskills ])\n        .range([0, slidersWidth]) // Width\n        .clamp(true);      \n    }\n    // Bugfix: math max not working\n    // if([\"Math and <p class='sliderText'>Spatial skills</p>\"].includes(subSliderTitlesArray[i])) {\n    // sliderScaleArray[i] = d3.scaleLinear()\n    //   .domain([0, 59])\n    //   .range([0, 200]) // Width of slider is 200 px\n    //   .clamp(true);\n    // }\n   \n   // Slider\n    sliderMulti[(i+j)] = sliderSVGArray[(i+j)].append(\"g\") // switch to SVG with viewBox?\n      .attr(\"class\", \"slider\")\n      // .style(\"z-index\", 99)\n      .attr(\"transform\", \"translate(\" + (15+xtranslate) + \",\" + 25 + \")\");\n\n      // track\n      sliderMulti[(i+j)].append(\"line\")\n      .attr(\"class\", \"track\")\n      // .style(\"z-index\", 98)\n      .attr(\"x1\", sliderScaleArray[(i+j)].range()[0])\n      .attr(\"x2\", sliderScaleArray[(i+j)].range()[1])\n      .select(function() {\n        return this.parentNode;\n      }) // inset\n      .append(\"line\")\n      // .style(\"z-index\", 98)\n      .attr(\"x1\", sliderScaleArray[(i+j)].range()[0])\n      .attr(\"x2\", sliderScaleArray[(i+j)].range()[1])\n      .attr(\"class\", \"track-inset\")\n      .select(function() {\n        return this.parentNode;\n      }) // inset-left (fills up green on drag)\n      .append(\"line\")\n      .attr(\"x1\", sliderScaleArray[(i+j)].range()[0])\n      .attr(\"x2\", sliderScaleArray[(i+j)].range()[0])\n      .attr(\"class\", \"track-inset-left\")\n      .attr(\"id\",\"inset-left_\"+(i+j))\n      .select(function() {\n        return this.parentNode;\n      }) // overlay\n      .append(\"line\")\n      // .style(\"z-index\", 99)\n      .attr(\"x1\", sliderScaleArray[(i+j)].range()[0])\n      .attr(\"x2\", sliderScaleArray[(i+j)].range()[1])\n      .attr(\"class\", \"track-overlay\")\n      .attr(\"id\", (i+j))\n      .on(\"mouseover\", function() {\n        d3.select(\"#handle_\"+this.id).style(\"fill\",\"#eaeaea\")\n      })\n      .on(\"mouseout\", function() {\n        d3.select(\"#handle_\"+this.id).style(\"fill\",\"white\")\n        if(typeof miniTooltip != \"undefined\"){\n          miniTooltip.transition().duration(500)\n          .style(\"opacity\",0)\n        }\n      })\n\n      .call(d3.drag()\n        .on(\"start.interrupt\", function() {\n          sliderMulti[event.target.id].interrupt();\n        }) // drag update function\n        .on(\"start drag\", function() {\n          // remove old mini tooltip\n          if(typeof miniTooltip == \"undefined\"){\n            miniTooltip = d3.select(\"body\").append(\"div\")\n            .attr(\"class\", \"minitooltip\")\n            .style(\"opacity\", 0);\n          }\n          // show mini tooltip indicating how many job groups remain\n          miniTooltip.transition().duration(200)\n          .style(\"opacity\",.9)\n          miniTooltip.html(graph.length + \" job groups<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;remain\")\n          .style(\"left\", (event.pageX - 64) + \"px\")\n          .style(\"top\", (event.target.getBoundingClientRect().top - 88) + \"px\")\n\n          if(graph.length >= 10){ miniTooltip.style(\"left\", (document.getElementById(\"handle_\"+this.id).getBoundingClientRect().left - 55) + \"px\") }\n          graph.length <= 30 ? miniTooltip.style(\"color\",\"#FEB22E\") : miniTooltip.style(\"color\", \"white\")\n          // if under 25 circles left, expand images\n          if(graph.length <= 25){ \n            miniTooltip.style(\"color\",\"#FE2E2E\") \n            expandCircleImages();\n          } else { // collapse images\n            collapseCircleImages();\n          }\n          if(graph.length >=175){\n            forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n\n            simulation\n            .force(\"collide\", forceCollide)\n            .force(\"cluster\", forceCluster)\n            .force(\"gravity\", forceGravity)\n            .force(\"x\", forceXCombine)\n            .force(\"y\", forceYCombine)\n            .on(\"tick\", tick);\n            \n            if(graphMode == 0){\n              simulation.alpha(0.15).alphaTarget(0.001).restart();\n            }\n          }\n\n          updateMulti(sliderScaleArray[event.target.id].invert(d3.event.x), currentMode); // pass the current line id to update function\n        }));\n\n    handleArray[(i+j)] = sliderMulti[(i+j)].insert(\"circle\", \".track-overlay\")\n      .attr(\"class\", \"handle\")\n      .attr(\"id\",\"handle_\"+(i+j))\n      // .style(\"z-index\", 99)\n      .attr(\"r\", 9);\n\n      // Bugfix: lang slider not on top\n    // if([\"Communication <p class='sliderText'>and Verbal skills</p>\"].includes(subSliderTitlesArray[i])) {\n    //   d3.select(\"#\"+i).style(\"z-index\", 99);\n    // }\n\n  } //end for\n};//end createSubSliders\n\nfunction collapseCircleImages() {\n\n  if(circlesExpanded == 1){\n    circlesExpanded = 0;\n\n    circles.transition().duration(700)\n    .delay(function(d, i) { return i * 5})\n    .attrTween(\"r\", function(d) {\n      var i = d3.interpolate(40, 10);\n      return function(t) { return d.radius = i(t); };\n    }) \n\n    if(graphMode == 0) {\n      setTimeout(function() { \n          simulation\n          .force(\"collide\", forceCollide)\n          .force(\"cluster\", forceCluster)\n          // .force(\"gravity\", forceGravity)\n          .force(\"x\", forceXCombine)\n          .force(\"y\", forceYCombine)\n          .on(\"tick\", tick);\n\n          simulation.alpha(0.15).alphaTarget(0.001).restart();\n\n      }, 0);\n        \n        forceCollide = d3.forceCollide($(window).height()*0.009)\n        forceGravity = d3.forceManyBody().strength($(window).height()*-0.08)\n\n        simulation\n        .force(\"gravity\", // default strength = -30, negative strength = repel, positive = attract\n                forceGravity)\n        // collapse gravity \n        .force(\"collide\", forceCollide)\n        .alpha(0.6).alphaTarget(0.001).restart(); \n    }\n  }\n}\n\nfunction expandCircleImages() {\n\nexpandedRadius = $(window).height()*0.045;\ncollapsedRadius = $(window).height()*0.007;\n  //bookmark\n  //modify: toggle-on, toggle-off, shrink back down\n  if (circlesExpanded == 0) {\n        \n        circlesExpanded = 1;\n\n        circles.transition().duration(500)\n          .delay(function(d, i) { return i * 5})\n          .attrTween(\"r\", function(d) {\n            var i = d3.interpolate(collapsedRadius, expandedRadius);\n            return function(t) { return d.radius = i(t); };\n          })\n          // transition the job images into the fill pattern\n\n            circles.style(\"fill\", function(d) { \n              circleExpanded[d.id] = 1;\n              return \"url(#pattern_\"+d.id+\")\" })\n              .style(\"stroke-width\",\"2px\")\n              .style(\"stroke\", function(d) { return color(d.cluster)})\n\n\n\n          // .attr(\"fill\", function(d) { return \"url(#pattern_\"+d.id+\")\" })\n\n        if(graphMode == 0) {\n          setTimeout(function() { \n            forceCollide = d3.forceCollide($(window).height()*0.050)\n            forceGravity = d3.forceManyBody().strength($(window).height()*-0.06)\n\n              simulation\n              .force(\"collide\", forceCollide)\n              .force(\"cluster\", forceCluster)\n              .force(\"gravity\", forceGravity)\n              .force(\"x\", forceXCombine)\n              .force(\"y\", forceYCombine)\n              .on(\"tick\", tick);\n\n              simulation.alpha(0.15).alphaTarget(0.001).restart();\n\n          }, 500);\n          // setTimeout(function() { resetSimulation() }, 700);\n\n          // setTimeout(function() { enterUpdateCircles();\n            \n            // .force(\"collide\", d3.forceCollide(function(d) { return d.radius + 20 }))\n            // .alpha(0.6).alphaTarget(0.001).restart(); \n          // }, 200);\n        }\n      } else if (circlesExpanded == 1) {\n\n      }\n\n}\n\n\n\n\n// Update function which detects current slider\n//  general update pattern for updating the graph\nfunction updateMulti(h, mode) {\n  // using the slider handle\n  var sliderID = event.target.id;\n  // jam sliders at n <= 10\n    // jamSliders()\n    handleArray[sliderID].attr(\"cx\", sliderScaleArray[sliderID](h)); // move the slider handle\n  // }\n\n  // Update the slider positions array\n  sliderPositionsArray[sliderID] = sliderScaleArray[event.target.id].invert(d3.event.x);\n\n  \n  var filteredNodes = filterAll()\n  //  UPDATE\n  circles = circles.data(filteredNodes, function(d) { return d.id });\n    \n  // EXIT\n  circles.exit().transition().duration(500)\n  // exit transition: \"pop\" radius * 1.5 + 5 & fade out\n  .attr(\"r\", $(window).height()*0.03)\n  .styleTween(\"opacity\", function(d) {\n    var i = d3.interpolate(1, 0);\n    return function(t) { return i(t); };\n  })\n  .remove();\n\n  // ENTER (create the circles with all attributes)\n  enterUpdateCircles();\n\n  //bookmarklet : resetSimulation()?\n\n  // reset simulation if graph mode = off\n  if (graphMode == 0) {\n    simulation.nodes(filteredNodes)\n    .force(\"collide\", forceCollide)\n    .force(\"cluster\", forceCluster)\n    .force(\"gravity\", forceGravity)\n    .force(\"x\", forceXCombine)\n    .force(\"y\", forceYCombine)\n    .on(\"tick\", tick);\n    restartSimulation();\n\n    } else if (graphMode == 1) { // else reposition nodes on graph\n  \n      switch (mode) {\n\n        case 0:\n        case 1:\n          circles\n            // x = Years of Study\n          .attr(\"cx\", function(d){ return d.yearsStudy/maxYearsStudy*width*0.73 - width*0.4 + graphXtranslate})\n            // y = Wage\n          .attr(\"cy\", function(d){ return ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate});\n          break;\n\n        case 2:\n          circles\n            // x = Number of Jobs\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n            // y = Wage\n          .attr(\"cy\", function(d){ return ((maxSalary-d.salaryMed)/maxSalary)*height*0.69 - height*0.5 + graphYtranslate});\n          break;\n          // x = Number of Jobs\n          // y = Automation Risk (same as initial, but using cx to glide into position from previous positions)\n        case 3:\n          circles\n            // x = Number of Jobs\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n            // y = Automation Risk (same as initial, but using cx to transition into position from previous positions)\n          .attr(\"cy\", function(d){ return (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate});\n          break;\n\n        case 4:\n          circles\n            // x = Number of Jobs\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.73 - width*0.4 + graphXtranslate})\n            // y = Automation Risk\n          .attr(\"cy\", function(d){ return (d.automationRisk)*height*0.65 - height*0.5 + graphYtranslate});\n          break;\n\n        case 5: // graph mode off\n          circles\n          .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.9 - width/2 + margin.left  + graphXtranslate})\n          .attr(\"cy\", function(d){ return (d.automationRisk)*height - height/2 + graphYtranslate})\n          break;\n        }\n\n  }\n// } // end if graph length > 10\n};//end updateMulti\n\n\n\n// Graph View Callout\n\n// show\ngraphViewCallout = function() {\n  // d3.select(\"#graphCallout\").transition().duration(400).style(\"width\",\"300px\")\n  d3.select(\"#graph\").style(\"box-shadow\",\"0px 0px 17px 7px #E6E447\")  \n  d3.select(\"#graphCallout\").transition().duration(400).style(\"opacity\",1)\n  // d3.select(\"#graphCallout2\").transition().duration(400).style(\"opacity\",1)\n  d3.select(\"#resetFilters\").style(\"box-shadow\",\"0px 0px 17px 7px #E6E447\")  \n}\n\n// hide\nhideGraphViewCallout = function() {\n  d3.select(\"#graph\").style(\"box-shadow\",\"0px 2px 7px 0 rgba(0,0,0,0.3)\")\n  d3.select(\"#resetFilters\").style(\"box-shadow\",\"0px 2px 7px 0 rgba(0,0,0,0.3)\")  \n  d3.select(\"#graphCallout\").transition().duration(400).style(\"opacity\",0).style(\"pointer-events\",\"none\")\n  // d3.select(\"#graphCallout2\").transition().duration(400).style(\"opacity\",0).style(\"pointer-events\",\"none\")\n}\n\n// the size of the current set\nvar filteredSet = nodes.length;\n\n// the minimum set size to trigger the graph view callout\nvar minimumSet = 10;\n\n// on each filter,\n// calloutCheck()\n\nfunction calloutCheck() {\n  // find the current size of the filtered set\n  filteredSet = graph.length\n\n  if(graphMode == 0){\n    if (filteredSet <= minimumSet) {\n      graphViewCallout()\n    // disable filter sliders\n    } else {\n      hideGraphViewCallout()\n    // enable filter sliders\n    }\n  }\n}\n\n//end graph view callout\n\n\n\n\n//////////////// Filter Functions 3: filter on all variables at once //////////////////////\n\n\nfilterAll = function() {\n  // first, clear the list\n  var listToDeleteMulti = [];\n  // reset the graph\n  graph = [];\n  // var currentSlider = sliderPositionsArray[event.target.id]\n  store.forEach(function(d){ // for each circle\n    // put you on the list if the slider position is above your value:\n    \n    // for current slider only\n    for(var s in sliderPositionsArray){        \n      // if the slider position is above your value  &  if you're not already on the list\n      if(d[sliderArray[s]] < sliderPositionsArray[s] && !listToDeleteMulti.includes(d[sliderArray[s]])) {\n        // put you on the list\n        listToDeleteMulti.push(d.id);\n      }\n    }\n  })\n  // update the graph based on the filter list\n  store.forEach(function(n) {\n    // if you're not on the filter list\n    if (!listToDeleteMulti.includes(n.id)) {\n      // put you on the graph         (start graph empty? or check)\n      graph.push(n);\n    // if you're on the list\n    } else if (listToDeleteMulti.includes(n.id)) {\n      // for each graph item\n      graph.forEach(function(d, p) { // p = position\n        if (n.id === d.id) {\n          graph.splice(p, 1); // get you off of there!\n        }\n      })\n    };\n  });\n  // Main sliders\n  for(var i=0; i<4; i++) {\n\n    if(event.target.id != i) {\n      // find the minimum of each slider on the current graphed set\n      var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArrayMain[i]]) })\n      // move the slider handle\n      handleArray[i].attr(\"cx\", thisMinimum);\n      // fill the left side green\n      d3.select(\"#inset-left_\"+i).attr(\"x2\", thisMinimum )\n    }else if(event.target.id == i) {\n      var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArrayMain[i]]) })\n      // fill the left side green (using mouse position on current slider)\n      d3.select(\"#inset-left_\"+i).attr(\"x2\", function() {\n        if (sliderScaleArray[i].invert(d3.event.x) <= 0) { return sliderScaleArray[i](sliderPositionsArray[i]) }\n        else { \n          return d3.event.x }\n        } )\n    }\n  };\n  // Subskill sliders\n  for(var i=4; i<sliderArray.length; i++) {\n    if(event.target.id != i) {\n      var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArray[i]]) })\n      handleArray[i].attr(\"cx\", thisMinimum); // move the slider handle\n      // fill the left side green\n      d3.select(\"#inset-left_\"+i).attr(\"x2\", thisMinimum )\n\n    }else if(event.target.id == i) {\n      var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArray[i]]) })\n      // fill the left side green (using mouse position on current slider)\n      d3.select(\"#inset-left_\"+i).attr(\"x2\", d3.event.x )\n    }\n  }\n  calloutCheck()\n  return graph;\n} // end filterAll\n\n}// Update function which detects current slider\n\n\n\n\n\n/////////////////////////// Skillset Explainer Divs /////////////////////////////////\n\nvar explainerDivs = [\n\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Oral Communication</strong>: Verbally expressing ideas and information to others.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Reading</strong>: Understanding written materials.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 0px;'><strong>Writing</strong>: Expressing ideas in writing.</p>\",\n\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Decision Making</strong>: Making a choice from different options by using information.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Job Task Planning and Organizing</strong>: Planning and organizing one’s own work.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Problem Solving</strong>: Identifying and solving problems.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 0px;'><strong>Critical Thinking</strong>: Making judgments by using standards to evaluate ideas and information and the related results.</p>\",\n\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Measurement and Calculation</strong>: Measuring and calculating amounts, areas, volumes, distances.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Money Math</strong>: Using math skills to deal with money, such as handling cash, preparing bills, and making payments.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Number Estimation</strong>: Quickly guessing answers to arithmetic questions (addition, subtraction, multiplication, and division)</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 0px;'><strong>Scheduling, Budgeting, Accounting</strong>: Planning for the best use of time and money, and monitoring the use of time and money.</p>\",\n\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Data Analysis</strong>: Gathering and analyzing numerical data.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Finding Information</strong>: Finding information from a variety of sources to complete a task.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 10px;'><strong>Digital Technology</strong>: Using any type of digital technology.</p>\" +\n\"<p style='margin-top: 0px; margin-bottom: 0px;'><strong>Document Use</strong>: Using different types of material (labels, signs, lists, tables, graphs, forms, diagrams, blueprints, and other materials) to gather information.</p>\",\n\n]\n\n// positions relative to question mark icons\n\n\n// setTimeout(function() {\nvar offsetDown = 0\nvar eTops = [] // comp\n\n    eTops.push(document.querySelector(\"#question_0\").getBoundingClientRect().top + offsetDown) // lang\n    eTops.push(document.querySelector(\"#question_1\").getBoundingClientRect().top + offsetDown) // logi\n    eTops.push(document.querySelector(\"#question_2\").getBoundingClientRect().top - 140) // math\n    eTops.push(document.querySelector(\"#question_3\").getBoundingClientRect().top - 105) // comp\n\nvar offsetRight = 55\nvar eLefts = []\n\n    eLefts.push(document.querySelector(\"#question_0\").getBoundingClientRect().left + offsetRight) // lang\n    eLefts.push(document.querySelector(\"#question_1\").getBoundingClientRect().left - 7*offsetRight) // logi\n    eLefts.push(document.querySelector(\"#question_2\").getBoundingClientRect().left - 7*offsetRight) // math\n    eLefts.push(document.querySelector(\"#question_3\").getBoundingClientRect().left + offsetRight) // comp\n\nfor (var i = 0; i < explainerDivs.length; i++) {\n  \n  d3.select(\"#question_\"+i).on(\"mouseenter\", function(){\n    // thisNum = _i\n    var thisNum = d3.select(this).attr(\"id\").substring(9,10)\n\n    d3.select(\"body\").append(\"div\")\n    .style(\"top\",eTops[thisNum]+\"px\")\n    .style(\"left\",eLefts[thisNum]+\"px\")\n    .attr(\"id\",\"answer_\"+thisNum)\n    .attr(\"class\",\"answerDiv\")\n    .html(explainerDivs[thisNum])\n    .style(\"opacity\",0).transition().duration(200).style(\"opacity\",1)\n\n  })\n  .on(\"mouseout\", function(){\n    d3.selectAll(\".answerDiv\").transition().duration(275).style(\"opacity\",0).remove()\n  })\n\n}\n\n\n\n/////// Favourites section ////////\n\nd3.select(\"body\").append(\"div\").attr(\"id\",\"favesDiv\")\n  .style(\"position\",\"fixed\")\n  .style(\"top\",$(window).height()*0.483+\"px\")\n  .style(\"right\",function(){\n      if($(window).width() >= 1024){\n        return \"5%\";\n      }else if($(window).width() >= 768){\n        return \"10%\";\n      }else if($(window).width() >= 320){\n        return \"10%\";\n      }\n  })\n  .style(\"color\",\"#ff9600\")\n  .html(\"<i id='fa-star-icon' class='fa fa-star fa-2x'></i>\")\n  .on(\"mouseover\",function(){\n    d3.select(\"#favesDiv\").append(\"div\")\n    .attr(\"id\",\"favouriteText\").attr(\"class\",\"legendText\")\n      .style(\"margin-left\", \"-20px\")\n      .style(\"margin-right\", \"-20px\")\n    .html(\"Favourites\")\n  })\n  .on(\"mouseout\",function(){\n    // hide text label\n    d3.select(\"#favouriteText\").remove()\n  })\n  .on(\"click\",function(){\n    if(favesMode==0){\n      favesMode=1\n      expandFavourites()\n    }else{\n      favesMode=0\n      collapseFavourites()\n    }\n  })\n\nfunction expandFavourites(){\n  var curlyHeight = ((getBbox(\"favesDiv\").top - getBbox(\"btnSubsliders_1\").top - getBbox(\"favesDiv\").height)*0.9) + \"px\"\n  console.log(\"curly height: \" + curlyHeight)\n  // attach curly braces\n  d3.select(\"body\").append(\"img\")\n  .attr(\"id\",\"curlytop\").attr(\"src\",\"img/curlybracetop.png\")\n    // .style(\"right\", getBbox(\"favesDiv\").right + getBbox(\"favesDiv\").width/2)\n    .style(\"bottom\", getBbox(\"favesDiv\").bottom + \"px\")\n    .style(\"height\", curlyHeight)\n    .transition().duration(500).style(\"opacity\",0.5)\n\n  d3.select(\"body\").append(\"img\")\n  .attr(\"id\",\"curlybtm\").attr(\"src\",\"img/curlybracebtm.png\")\n    // .style(\"right\", getBbox(\"favesDiv\").right + getBbox(\"favesDiv\").width/2)\n    .style(\"top\", getBbox(\"favesDiv\").top + getBbox(\"favesDiv\").height + 3 + \"px\")\n    .style(\"height\", curlyHeight)\n    .transition().duration(500).style(\"opacity\",0.5)\n\n  // append the favourites container\n  d3.select(\"body\").append(\"svg\")\n    .attr(\"id\",\"favesSvg\") // bug: svg onclick closes faves\n    .style(\"height\", $(window).height()*0.45+\"px\")\n    .style(\"opacity\",0)\n    .transition().duration(500)\n    .style(\"opacity\",1).style(\"right\",\"0.5%\")\n  // move in from the right\n  d3.select(\"#favesDiv\").transition().duration(500)\n  .style(\"right\",function(){\n      if($(window).width() >= 1024){\n        return \"8%\";\n      }else if($(window).width() >= 768){\n        return \"12%\";\n      }else if($(window).width() >= 320){\n        return \"12%\";\n      }\n  })\n  d3.select(\"#curlytop\").style(\"right\",\"0%\").transition().duration(500)\n  .style(\"right\",function(){\n      if($(window).width() >= 1024){\n        return \"5%\";\n      }else if($(window).width() >= 768){\n        return \"10%\";\n      }else if($(window).width() >= 320){\n        return \"10%\";\n      }\n  }).style(\"opacity\",0.5)\n  d3.select(\"#curlybtm\").style(\"right\",\"0%\").transition().duration(500)\n  .style(\"right\",function(){\n      if($(window).width() >= 1024){\n        return \"5%\";\n      }else if($(window).width() >= 768){\n        return \"10%\";\n      }else if($(window).width() >= 320){\n        return \"10%\";\n      }\n  }).style(\"opacity\",0.5)\n  // append all favourites\n  // d3.select(\"#favesSvg\").append(\"\")\n  appendFavourites()\n}\n\nfunction collapseFavourites(){\n  // remove the favourites container\n  d3.select(\"#favesSvg\").transition().duration(500).style(\"right\",\"-10%\").remove()\n  d3.select(\"#favesDiv\").transition().duration(500).style(\"right\",function(){\n      if($(window).width() >= 1024){\n        return \"3%\";\n      }else if($(window).width() >= 768){\n        return \"5%\";\n      }else if($(window).width() >= 320){\n        return \"5%\";\n      }\n  })\n  d3.select(\"#curlytop\").transition().duration(500)\n  .style(\"right\",\"0%\").style(\"opacity\",0).remove()\n  d3.select(\"#curlybtm\").transition().duration(500)\n  .style(\"right\",\"0%\").style(\"opacity\",0).remove()\n}\n\nfunction appendFavourites(){\n\n  faveNodes = [] // reset\n  nodes.forEach(function(d){ // check for favourites\n    if(d.favourited==1){\n      faveNodes.push(d)\n    }\n  })\n\n  var faveArrayX = fillArray(0,494)\n  var faveArrayY = fillArray(0,494)\n  faveNodes.forEach(function(d, i){\n    if(i<10){ // first column height = 10 circles\n      faveArrayX[i] = 12 //x\n    }else{ // second column\n      faveArrayX[i] = 36\n    } \n    \n    faveArrayY[i] = i*24 + 12 //y\n  })\n\n  faveCircles = d3.select(\"#favesSvg\").selectAll(\"circle\")\n      .data(faveNodes)\n      .enter().append(\"circle\")\n        .attr(\"r\", 0)\n        .attr(\"transform\", function(d,i){\n          // return different values for each new id\n          return \"translate(\"+faveArrayX[i]+\",\"+faveArrayY[i]+\")\"\n        })\n        .attr(\"id\",function(d) { return \"faveCircle_\"+d.id })\n        .attr(\"class\",\"jobCircle\")\n        .attr(\"class\",\"faveCircle\")\n        .style(\"z-index\", -1)\n        .style(\"fill\", function(d) { return color(d.cluster); })\n        // Tooltips\n        .on(\"mouseenter\", function(d) {\n          // make all other circles translucent\n          d3.selectAll(\".jobCircle\").style(\"opacity\",0.07) //todo: exclude colour legend filters?\n          // callout this one\n          d3.select(this).style(\"opacity\",1)\n          d3.select(\"#circle_\"+d.id).style(\"opacity\",1).style(\"stroke\",\"black\")\n          if (clicked == 1) return;\n          // highlight the current circle\n          d3.selectAll(\"circle\").attr(\"stroke\", \"none\");\n          d3.select(this)\n          .style(\"fill\", \"url(#pattern_\"+d.id+\")\" )\n            // .attr(\"stroke\", \"black\")\n            .style(\"stroke-width\", 2)\n            .attr(\"stroke\", color(d.cluster));\n          showToolTip(0);\n          tooltipMouseover(d);\n\n          hoverTimeout = setTimeout(function(){\n              tooltipLarge(d)\n              clicked = 1\n            }, 1750)\n          })\n        .on(\"mouseout\", function(d) {\n          d3.selectAll(\".jobCircle\").style(\"opacity\",1) //todo: exclude colour legend filters?\n          d3.select(\"#circle_\"+d.id).style(\"stroke\",\"none\")\n          if(!circleExpanded[d.id] == 1){\n            // //if not stuck\n            // if(!sticky[d.id] == 1) {\n              d3.select(this)\n              .style(\"fill\", color(d.cluster) )\n                // .attr(\"stroke\", \"black\")\n                .style(\"stroke-width\", 2)\n                .attr(\"stroke\", color(d.cluster));\n            // } else { // if stuck\n            //   d3.select(this)\n            //     .style(\"fill\", \"url(#pattern_\"+d.id+\")\")\n            //     .attr(\"r\",\"30px\")\n\n            // }\n          }\n\n          clearTimeout(hoverTimeout)\n          if (clicked == 1) return;\n          clicked = 0;\n          hideToolTip(500)\n          d3.select(this).attr(\"stroke\", \"none\");\n          // div.transition().duration(500).style(\"opacity\", 0)\n\n        })\n        .on(\"click\", function(d) {\n          clearTimeout(hoverTimeout)\n          // click-off\n          if (clicked == 1) { \n            clicked = 0\n            hideToolTip(500)\n          // click-on\n        } else if (clicked == 0) {\n          clicked = 1;\n          tooltipLarge(d);\n        }\n          // hideToolTip(0);\n          // if(typeof div2 != \"undefined\") div2.transition().duration(250).style(\"height\",\"0px\").remove();\n          // tooltipSmall(d);}\n        })\n\n        // enter new circles & exit old circles\n        d3.selectAll(\".faveCircle\").transition().duration(500).attr(\"r\",10)\n        d3.select(\"#favesSvg\").selectAll(\"circle\")\n        .data(faveNodes).exit().transition().duration(300).attr(\"r\", 0 ).remove();\n\n\n}\n\n})\n} // end of d3.csv\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n      ///////////////////// Search ///////////////////////\nvar searchExpanded = 0;\n\n\nd3.select(\"body\").append(\"div\")\n  .attr(\"id\", \"search-btn-div\")\n  .append(\"span\")\n    .append(\"button\").attr(\"id\",\"searchButtonPC\").attr(\"class\",\"search-btn\")\n      .append(\"img\").attr(\"id\",\"searchImg\").attr(\"class\",\"search-img\")\n        .attr(\"src\",\"img/search.png\")\n        .attr(\"height\",\"40\")\n        .attr(\"width\",\"40\")\n        // .on(\"mouseenter\", function(){expandSearch()})\n        .on(\"click\", function() {searchJobTitles()})\n        .on(\"mouseover\", function() {\n          d3.select(this).attr(\"src\",\"img/search2.png\")\n        })\n        .on(\"mouseout\", function() {\n          d3.select(this).attr(\"src\",\"img/search.png\")\n        })\n        // .on(\"hover\", function() {\n        //   d3.select(\"#search-btn-div\")\n        //   .style(\"right\",\"1.8%\")\n        //   .style(\"top\",\"2%\")\n        // })\n\nvar feedbackBbox = document.getElementById(\"feedback\").getBoundingClientRect()\n\nvar searchDiv = d3.select(\"body\")\n  .append(\"div\").attr(\"id\",\"searchDiv\")\n    .html(\"<input id='jobTitle' placeholder='Search job titles' align='right' class='d-inline form-control' \"+\n           \"type='text' onkeydown='if (event.keyCode == 13) searchJobTitles()'>\"+\n          \"<button id='searchSubmitBtn' style='opacity: 1; margin-top: -1px;' class='submit-btn btn btn-sm' \"+\n          \"onclick='searchJobTitles()'>Search</button>\"\n          )\n    .style(\"width\", function(){\n      if($(window).width() >= 768){\n        var linksBbox = document.getElementById(\"links-top\").getBoundingClientRect()\n        return $(window).width() - linksBbox.right - 110 + \"px\"\n      }else if($(window).width() >= 320){\n        var linksBbox = document.getElementById(\"tabletLinks\").getBoundingClientRect()\n        return $(window).width() - linksBbox.right - 100 + \"px\"\n      }\n    })\n\n\nfunction searchJobTitles() {\n\n  resetFilters(currentMode);\n\n  //  UPDATE\n  circles = circles.data(filterBySearch(), function(d) { return d.id });\n  \n  // EXIT\n  circles.exit().transition().duration(500)\n  // exit transition: \"pop\" radius * 1.5 + 5 & fade out\n  .attr(\"r\", function(d) { return d.radius * 0 })\n  .attrTween(\"opacity\", function(d) {\n    var i = d3.interpolate(1, 0);\n    return function(t) { return i(t); };\n  })\n  .remove();\n\n  // ENTER (create the circles with all attributes)\n  enterUpdateCircles();\n\n  // reset simulation if graph mode = off\n  if (graphMode == 0) {\n    simulation.nodes(filterBySearch())\n    .force(\"collide\", forceCollide)\n    .force(\"cluster\", forceCluster)\n    .force(\"gravity\", forceGravity)\n    .force(\"x\", forceXCombine)\n    .force(\"y\", forceYCombine)\n    .on(\"tick\", tick);\n    simulation.alphaTarget(0.001).restart();\n  } else if (graphMode == 1) { // else reposition nodes on graph\n    circles\n    .attr(\"cx\", function(d){ return d.workers/maxWorkers*width*0.9 - width/2 + margin.left  + graphXtranslate})\n    .attr(\"cy\", function(d){ return (d.automationRisk)*height - height/2 + graphYtranslate})\n  }\n\n  // if no search results, display warning message\n  if (graph.length == 0) {\n\n    zeroJobsRemain()\n\n  }\n\n}\n\nfunction zeroJobsRemain() {\n      // display warning message\n    d3.select(\"body\").append(\"div\")\n      .attr(\"id\",\"warningMsg\").attr(\"class\",\"alert\")\n      .style(\"position\",\"fixed\")\n      .style(\"left\",($(window).width()-250)/2 + \"px\")      \n      .style(\"top\",($(window).height()-115)/2 + \"px\")      \n      .style(\"width\",\"250px\").style(\"height\",\"115px\")\n      .style(\"font-size\",\"24px\")\n      .html(\"No results!<br>Resetting...\")\n    \n    // reset and remove message\n    // click reset instead?\n    setTimeout(function() {\n      resetFilters(currentMode)\n      d3.select(\"#warningMsg\").transition().duration(500).style(\"opacity\",0).remove()\n    }, 1500)\n}\n\nfunction filterBySearch() {\n// get the search query\nvar query = document.getElementById(\"jobTitle\").value;\n  // START by filtering out nodes under the minimums\n  store.forEach(function(d) {\n    // INEFFICIENT -- TODO: fewer loops\n\n      // first, take all nodes off the list              OR loop through sliders removing, then loop through adding?\n      if (listToDeleteMulti.includes(d.id)) {\n        listToDeleteMulti.splice(listToDeleteMulti.indexOf(d.id),1);\n      }\n\n      // then if each job contains the query, add to the list\n      //indexOf returns the position of the string in the other string. If not found, it will return -1.\n      if(d.allTitles.indexOf(query) == -1 && !listToDeleteMulti.includes(d.id)) {\n          listToDeleteMulti.push(d.id);\n      }\n    });\n    // reset the graph\n  graph = [];\n  // THEN update the graph based on the filter list\n  store.forEach(function(n) {\n    // if you're not on the filter list\n    if (!listToDeleteMulti.includes(n.id)) {\n      // put you on the graph         (start graph empty? or check)\n      graph.push(n);\n    // if you're on the list\n    } else if (listToDeleteMulti.includes(n.id)) {\n      graph.forEach(function(d, p) {\n        if (n.id === d.id) {\n          graph.splice(p, 1); // get you off of there!\n        }\n      })\n    };\n  });\n  return graph;\n}\n\n\n\n\n\n\n\n\n\n\n\n\nfunction filterIndustry(input) { //bookmark\n\n  // var industry = industriesArray[input];\n  input = +input;\n\n  // update the filtered industries list:\n\n    // if the industry is not on the list\n    if(!filteredIndustries.includes(input)) {\n      // put it on the list\n      filteredIndustries.push(input);\n    }\n    // if the input is already on the list\n    else if(filteredIndustries.includes(input)) {\n      // take it off the list\n      filteredIndustries.splice(filteredIndustries.indexOf(input),1)\n    }\n\n// fade the graph circles\ncircles.style(\"opacity\",\n  function(d) { // make filtered circles transparent\n    // if the industry is on the list, transparent\n    if( filteredIndustries.includes(+d.industryNum) ) { \n      return 0.1 }\n    else{ \n      return 1 }\n  })  \n\n// fade the legend circles\nd3.selectAll(\".legendCirc\").attr(\"opacity\",\n  function(d,i) {\n    if( filteredIndustries.includes(+i) ) { \n      return 0.1 }\n    else{ \n      return 1 }\n  })\n\n}\n\n\n  // var currentSlider = sliderPositionsArray[event.target.id]\n\n//   store.forEach(function(d){ // for each circle\n\n//     // put you on the list if the slider position is above your value:\n    \n//     // for current slider only\n//     for(var s in sliderPositionsArray){        \n//       // if the slider position is above your value  &  if you're not already on the list\n//       if(d[sliderArray[s]] < sliderPositionsArray[s] && !listToDeleteMulti.includes(d[sliderArray[s]])) {\n//         // put you on the list\n//         listToDeleteMulti.push(d.id);\n//       }\n//     }\n      \n//     // // for each slider\n//     // for(var s in sliderPositionsArray){        \n//     //   // if the slider position is above your value  &  if you're not already on the list\n//     //   if(d[sliderArray[s]] < sliderPositionsArray[s] && !listToDeleteMulti.includes(d[sliderArray[s]])) {\n//     //     // put you on the list\n//     //     listToDeleteMulti.push(d.id);\n//     //   }\n//     // }\n\n//   })\n  \n//   // update the graph based on the filter list\n//   store.forEach(function(n) {\n//     // if you're not on the filter list\n//     if (!listToDeleteMulti.includes(n.id)) {\n//       // put you on the graph         (start graph empty? or check)\n//       graph.push(n);\n//     // if you're on the list\n//     } else if (listToDeleteMulti.includes(n.id)) {\n//       // for each graph item\n//       graph.forEach(function(d, p) { // p = position\n//         if (n.id === d.id) {\n//           graph.splice(p, 1); // get you off of there!\n//         }\n\n//       })\n//     };\n//   });\n\n//   // move all slider handles to new minimums for the filtered set (to avoid wasted motion)\n//   // todo: separate main and subslider for loops\n\n//   // var sliderArray = [\n//   // \"skillsLang\", \"skillsLogi\", \"skillsMath\", \"skillsComp\",\n//   //     // subskills\n//   //     \"s8OralCommunication\",\"s10Reading\",\"s14Writing\",\n      \n//   //     \"s4JobTaskPlanningandOrganizing\",\"s9ProblemSolving\",\"s15CriticalThinking\",\"s2DecisionMaking\",\n      \n//   //     \"s5MeasurementandCalculation\",\"s6MoneyMath\",\"s7NumericalEstimation\",\"s11SchedulingorBudgetingandAccounting\",\n        \n//   //     \"s1DataAnalysis\",\"s3FindingInformation\",\"s12DigitalTechnology\",\"s13DocumentUse\"\n//   // ];\n\n//   // Update all sliders when dragging any one slider\n\n//   // Main sliders\n//   for(var i=0; i<4; i++) {\n\n//     if(event.target.id != i) {\n//       // find the minimum of each slider on the current graphed set\n//       var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArrayMain[i]]) })\n//       // move the slider handle\n//       handleArray[i].attr(\"cx\", thisMinimum);\n//       // fill the left side green\n//       d3.select(\"#inset-left_\"+i).attr(\"x2\", thisMinimum )\n\n//     }else if(event.target.id == i) {\n//       var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArrayMain[i]]) })\n//       // fill the left side green (using mouse position on current slider)\n\n//       d3.select(\"#inset-left_\"+i).attr(\"x2\", function() {\n//         if (sliderScaleArray[0].invert(d3.event.x) <= 0) { return sliderScaleArray[0](sliderPositionsArray[0]) }\n//         else { \n//           return d3.event.x }\n//         } )\n//     }\n//   };\n\n//   // Subskill sliders\n//   for(var i=4; i<sliderArray.length; i++) {\n//     if(event.target.id != i) {\n//       var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArray[i]]) })\n//       handleArray[i].attr(\"cx\", thisMinimum); // move the slider handle\n//       // fill the left side green\n//       d3.select(\"#inset-left_\"+i).attr(\"x2\", thisMinimum )\n\n//     }else if(event.target.id == i) {\n//       var thisMinimum = d3.min(graph, function(d){ return sliderScaleArray[i](d[sliderArray[i]]) })\n//       // fill the left side green (using mouse position on current slider)\n//       d3.select(\"#inset-left_\"+i).attr(\"x2\", d3.event.x )\n//     }\n//   };\n\n//   calloutCheck()\n\n\n//   return graph;\n\n\n\n\n\n\n//   // reset the list to delete\n//   listToDeleteMulti = [];\n\n//   // START by filtering out nodes under the minimums\n//   store.forEach(function(d) {\n\n//       // then if each job contains the query, add to the list\n//       //indexOf returns the position of the string in the other string. If not found, it will return -1.\n//       if(d.allTitles.indexOf(query) == -1 && !listToDeleteMulti.includes(d.id)) {\n//           listToDeleteMulti.push(d.id);\n//       }\n//     });\n//     // reset the graph\n//   graph = [];\n//   // THEN update the graph based on the filter list\n//   store.forEach(function(n) {\n//     // if you're not on the filter list\n//     if (!listToDeleteMulti.includes(n.id)) {\n//       // put you on the graph         (start graph empty? or check)\n//       graph.push(n);\n//     // if you're on the list\n//     } else if (listToDeleteMulti.includes(n.id)) {\n//       graph.forEach(function(d, p) {\n//         if (n.id === d.id) {\n//           graph.splice(p, 1); // get you off of there!\n//         }\n//       })\n//     };\n//   });\n//   return graph;\n// }\n\n\n\n\n// subskill slider expansion\n\n/////////////////////////////////// Expand Subskill Sliders buttons /////////////////////////////////////\n\n// (1: Language 2: Logic 3: Math 4: Computer)\n\n// create 4 empty subslider divs \nvar subSliderDivLang;\nvar subSliderDivLogi;\nvar subSliderDivMath;\nvar subSliderDivComp;\n\n  // Lang\n  subSliderDivLang = d3.select(\"body\")\n    .append(\"div\")\n      .attr(\"id\", \"subSliderWindow_0\")\n      .style(\"width\", \"250px\")\n      .style(\"height\", \"0px\")\n      .style(\"position\", \"absolute\")\n      .style(\"top\", window.innerHeight*0.20+\"px\")\n      .style(\"left\", window.innerWidth*0.025+\"px\")\n      .style(\"border\", \"2px solid green\")\n      .style(\"border-radius\", \"16px\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background\", \"white\")\n\n  // Logi\n  subSliderDivLogi = d3.select(\"body\")\n    .append(\"div\")\n      .attr(\"id\", \"subSliderWindow_1\")\n      .style(\"width\", \"265px\")\n      .style(\"height\", \"0px\")\n      .style(\"position\", \"absolute\")\n      .style(\"top\", window.innerHeight*0.20+\"px\")\n      .style(\"right\", window.innerWidth*0.025+\"px\")\n      .style(\"border\", \"2px solid green\")\n      .style(\"border-radius\", \"16px\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background\", \"white\")\n\n  // Comp\n  subSliderDivComp = d3.select(\"body\")\n    .append(\"div\")\n      .attr(\"id\", \"subSliderWindow_2\")\n      .style(\"width\", \"250px\")\n      .style(\"height\", \"0px\")\n      .style(\"position\", \"absolute\")\n      .style(\"top\", window.innerHeight*0.85+\"px\")\n      .style(\"left\", window.innerWidth*0.025+\"px\")\n      .style(\"border\", \"2px solid green\")\n      .style(\"border-radius\", \"16px\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background\", \"white\")\n\n  // Math\n  subSliderDivMath = d3.select(\"body\")\n    .append(\"div\")\n      .attr(\"id\", \"subSliderWindow_3\")\n      .style(\"width\", \"275px\")\n      .style(\"height\", \"0px\")\n      .style(\"position\", \"absolute\")\n      .style(\"top\", window.innerHeight*0.85+\"px\")\n      .style(\"right\", window.innerWidth*0.020+\"px\")\n      .style(\"border\", \"2px solid green\")\n      .style(\"border-radius\", \"16px\")\n      .style(\"visibility\", \"hidden\")\n      .style(\"background\", \"white\")\n\n// div heights\nvar heightLang = window.innerHeight*0.24,\n    heightLogi = window.innerHeight*0.32,\n    heightComp = window.innerHeight*0.29,\n    heightMath = window.innerHeight*0.29;\n\nvar widthAll = 300;\n\nvar slidersExpanded = [0,0,0,0];\n\nfunction expandSliders(sliderGroup) { // (1: Language 2: Logic 3: Math 4: Computer)\n  // toggle\n  slidersExpanded[sliderGroup] = 1-slidersExpanded[sliderGroup];\n\n  switch (sliderGroup) {\n\n    case 0: // showLanguage\n\n      if(slidersExpanded[0] == 1){ // on\n        \n        //if any others are on, turn them off\n        if(slidersExpanded[1] == 1){\n          slidersExpanded[1] = 0;\n          hideLogi() \n          // if there is already a legend, unhide the legend\n          // unhideLegend()\n        }\n        if(slidersExpanded[2] == 1){ \n          slidersExpanded[2] = 0;\n          hideMath() \n          // if there is already a legend, unhide the legend\n          // unhideLegend()\n        }\n        if(slidersExpanded[3] == 1){ \n          slidersExpanded[3] = 0;\n          hideComp() }\n\n        // expand subsliders button and turn off\n        d3.select(\"#btnSubsliders_0\")\n          .transition().duration(350).style(\"height\", heightLang+20+\"px\").style(\"width\",widthAll*0.95+\"px\")\n          .style(\"pointer-events\",\"none\")\n          .attr(\"class\",\"expand-sliders-btn-expanded\")\n        // append \"hide skills\" button\n        d3.select(\"#btnSubsliders_0\").append(\"button\")\n          .attr(\"id\",\"btnSubsliders_0Close\").attr(\"class\",\"close-sliders-btn\").style(\"border-width\",\"0px\").style(\"background\",\"none\").style(\"pointer-events\",\"none\")\n            // .style(\"border-top-right-radius\",\"0px\")\n            // .style(\"border-top-left-radius\",\"0px\")\n          .style(\"width\",widthAll*0.93+\"px\")\n          .style(\"margin-left\",-widthAll*0.017+\"px\")\n          .html(\n            \"&#9650 hide language skills &#9650\"\n            ).style(\"color\", \"#49AC52\")\n        // move \"hide skills\" button down\n        d3.select(\"#btnSubsliders_0Close\")\n          .style(\"margin-top\",0+\"px\").transition().duration(350)\n          .style(\"margin-top\",heightLang-6+\"px\")\n\n        d3.select(\"#spanSubsliders_0\")\n          .transition().duration(350).style(\"opacity\", 0)\n\n        setTimeout(function() {\n          for(var i=4; i<7; i++){ // unhide the sliders\n            sliderSVGArray[i].style(\"display\", \"inline\");\n            handleArray[i].style(\"display\", \"inline\");\n            sliderMulti[i].style(\"display\", \"inline\")\n            d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n            // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"visible\");\n            d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n          }\n        }, 250);\n      }\n      if(slidersExpanded[0] == 0){ // off\n        hideLang()\n      }\n      \n    case 1: // showLogic\n\n      if(slidersExpanded[1] == 1){ // on\n\n        // if there is already a legend, hide the legend\n        // hideLegend()\n        //if any others are on, turn them off\n        if(slidersExpanded[0] == 1){\n          slidersExpanded[0] = 0;\n          hideLang() }\n        if(slidersExpanded[2] == 1){ \n          slidersExpanded[2] = 0;\n          hideMath() // but keep legend hidden\n        }\n        if(slidersExpanded[3] == 1){ \n          slidersExpanded[3] = 0;\n          hideComp() }\n\n                  // expand subsliders button and turn off\n        d3.select(\"#btnSubsliders_1\")\n          .transition().duration(350).style(\"height\", heightLogi+20+\"px\").style(\"width\", widthAll*0.95+\"px\")\n          .style(\"pointer-events\",\"none\")\n          .attr(\"class\",\"expand-sliders-btn-expanded\")\n\n                  // append \"hide skills\" button\n                  d3.select(\"#btnSubsliders_1\").append(\"button\")\n                    .attr(\"id\",\"btnSubsliders_1Close\").attr(\"class\",\"close-sliders-btn\").style(\"border-width\",\"0px\").style(\"background\",\"none\").style(\"pointer-events\",\"none\")\n                      // .style(\"border-top-right-radius\",\"0px\")\n                      // .style(\"border-top-left-radius\",\"0px\")\n                    .style(\"width\",widthAll*0.93+\"px\")\n                    .style(\"margin-left\",-widthAll*0.017+\"px\")\n                    .html(\n                      \"&#9650 hide logic skills &#9650\"\n                      ).style(\"color\", \"#49AC52\")\n                  // move \"hide skills\" button down\n                  d3.select(\"#btnSubsliders_1Close\")\n                    .style(\"margin-top\",0+\"px\").transition().duration(350)\n                    .style(\"margin-top\",heightLogi-6+\"px\")\n\n        d3.select(\"#spanSubsliders_1\")\n          .transition().duration(350).style(\"opacity\", 0)\n\n        setTimeout(function() {\n          for(var i=7; i<11; i++){ // unhide the sliders\n            sliderSVGArray[i].style(\"display\", \"inline\");\n            handleArray[i].style(\"display\", \"inline\");\n            sliderMulti[i].style(\"display\", \"inline\")\n            d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n            // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"visible\");\n            d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n          }\n        }, 250);\n      }\n\n      else if(slidersExpanded[1] == 0){ // off\n        hideLogi()\n        // if there is already a legend, unhide the legend\n        // unhideLegend()\n      }\n      \n    case 2: // showMath\n\n      if(slidersExpanded[2] == 1){ // on\n\n        // if there is already a legend, hide the legend\n        // hideLegend()\n\n        //if any others are on, turn them off\n        if(slidersExpanded[0] == 1){\n          slidersExpanded[0] = 0;\n          hideLang() }\n        if(slidersExpanded[1] == 1){ \n          slidersExpanded[1] = 0;\n          hideLogi() // but keep legend hidden\n        }\n        if(slidersExpanded[3] == 1){ \n          slidersExpanded[3] = 0;\n          hideComp() }\n\n\n                  // expand subsliders button and turn off\n        d3.select(\"#btnSubsliders_2\")\n          .transition().duration(350).style(\"height\", heightMath+50+\"px\").style(\"width\", widthAll*0.97+\"px\")\n          .style(\"pointer-events\",\"none\")\n          .attr(\"class\",\"expand-sliders-btn-expanded\")\n\n                  // append \"hide skills\" button\n                  d3.select(\"#btnSubsliders_2\").append(\"button\")\n                    .attr(\"id\",\"btnSubsliders_2Close\").attr(\"class\",\"close-sliders-btn\").style(\"border-width\",\"0px\").style(\"background\",\"none\")\n                    .style(\"pointer-events\",\"none\")\n                      // .style(\"border-bottom-right-radius\",\"0px\")\n                      // .style(\"border-bottom-left-radius\",\"0px\")\n                    .style(\"width\",widthAll*0.93+\"px\")\n                    .style(\"margin-left\",-widthAll*0.017+\"px\")\n                    .html(\n                      \"&#9660 hide math skills &#9660\"\n                      ).style(\"color\", \"#49AC52\")\n                    // .on(\"click\",function(){hideMath()})\n                  // move \"hide skills\" button down\n                  d3.select(\"#btnSubsliders_2Close\")\n                    .style(\"margin-top\",0+\"px\").transition().duration(350)\n                    .style(\"margin-top\",heightMath+20+\"px\")\n                  \n        d3.select(\"#spanSubsliders_2\")\n          .transition().duration(350).style(\"opacity\", 0)\n\n        setTimeout(function() {\n          for(var i=11; i<15; i++){ // unhide the sliders\n            sliderSVGArray[i].style(\"display\", \"inline\");\n            handleArray[i].style(\"display\", \"inline\");\n            sliderMulti[i].style(\"display\", \"inline\")\n            d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n            // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"visible\");\n            d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n          }\n        }, 250);\n      }\n\n      else if(slidersExpanded[2] == 0){ // off\n        hideMath()\n        // if there is already a legend, unhide the legend\n        // unhideLegend()\n      }\n      \n    case 3: // showComputers\n\n      if(slidersExpanded[3] == 1){ // on\n\n        //if any others are on, turn them off\n        if(slidersExpanded[0] == 1){\n          slidersExpanded[0] = 0;\n          hideLang() }\n        if(slidersExpanded[2] == 1){ \n          slidersExpanded[2] = 0;\n          hideMath() \n          // if there is already a legend, unhide the legend\n          // unhideLegend()\n        }\n        if(slidersExpanded[1] == 1){ \n          slidersExpanded[1] = 0;\n          hideLogi() \n          // if there is already a legend, unhide the legend\n          // unhideLegend()\n        }\n                  // expand subsliders button and turn off\n        d3.select(\"#btnSubsliders_3\")\n          .transition().duration(350).style(\"height\", heightComp+50+\"px\").style(\"width\", widthAll*0.95+\"px\")\n          .style(\"pointer-events\",\"none\")\n          .attr(\"class\",\"expand-sliders-btn-expanded\")\n                  // append \"hide skills\" button\n                  d3.select(\"#btnSubsliders_3\").append(\"button\")\n                    .attr(\"id\",\"btnSubsliders_3Close\").attr(\"class\",\"close-sliders-btn\").style(\"border-width\",\"0px\").style(\"background\",\"none\")\n                    .style(\"pointer-events\",\"none\")\n                      // .style(\"border-bottom-right-radius\",\"0px\")\n                      // .style(\"border-bottom-left-radius\",\"0px\")\n                    .style(\"width\",widthAll*0.93+\"px\")\n                    .style(\"margin-left\",-widthAll*0.017+\"px\")\n                    .html(\n                      \"&#9660 hide computer skills &#9660\"\n                      ).style(\"color\", \"#49AC52\")\n                    // .on(\"click\",function(){hideComp()})\n                  // move \"hide skills\" button down\n                  d3.select(\"#btnSubsliders_3Close\")\n                    .style(\"margin-top\",0+\"px\").transition().duration(350)\n                    .style(\"margin-top\",heightComp+20+\"px\")\n                  \n\n\n        d3.select(\"#btnSubsliders_3\")\n          .transition().duration(350).style(\"height\", heightComp+50+\"px\").style(\"width\",widthAll*0.95+\"px\")\n        d3.select(\"#spanSubsliders_3\")\n          .transition().duration(350).style(\"opacity\", 0)\n\n        setTimeout(function() {\n          for(var i=15; i<19; i++){ // unhide the sliders\n            sliderSVGArray[i].style(\"display\", \"inline\");\n            handleArray[i].style(\"display\", \"inline\");\n            sliderMulti[i].style(\"display\", \"inline\")\n            d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n            // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"visible\");\n            d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"visible\");\n          }\n        }, 250);\n      }\n      if(slidersExpanded[3] == 0){ // off\n        hideComp()\n      }\n      \n  }\n}\n\n\nfunction hideLang() {\n\n  d3.select(\"#btnSubsliders_0\").transition().duration(500).style(\"height\", \"30px\").style(\"width\", 250+\"px\")\n  .style(\"pointer-events\",\"auto\")\n  .attr(\"class\",\"expand-sliders-btn\")\n\n  d3.select(\"#spanSubsliders_0\").transition().duration(350).style(\"opacity\", 1)\n  d3.select(\"#btnSubsliders_0Close\").transition().duration(500).style(\"opacity\",0).style(\"margin-top\",0+\"px\").remove()\n    // .style(\"top\", window.innerHeight*0.20+\"px\");\n\n  // setTimeout(function() {\n  //     subSliderDivLang.style(\"visibility\", \"hidden\");\n  //   }, 500);\n\n  for(var i=4; i<7; i++){\n    sliderSVGArray[i].style(\"display\", \"none\");\n    handleArray[i].style(\"display\", \"none\");\n    sliderMulti[i].style(\"display\", \"none\");\n    d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n    // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"hidden\");\n    d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n  }\n}\n\nfunction hideLogi() {\n\n  d3.select(\"#btnSubsliders_1\").transition().duration(500).style(\"height\", \"30px\").style(\"width\",\"250px\")\n  .style(\"pointer-events\",\"auto\")\n  .attr(\"class\",\"expand-sliders-btn\")\n\n  d3.select(\"#spanSubsliders_1\").transition().duration(350).style(\"opacity\", 1)\n  d3.select(\"#btnSubsliders_1Close\").transition().duration(500).style(\"opacity\",0).style(\"margin-top\",0+\"px\").remove()\n\n\n  setTimeout(function() {\n      subSliderDivLogi.style(\"visibility\", \"hidden\");\n    }, 500);\n\n  for(var i=7; i<11; i++){\n    sliderSVGArray[i].style(\"display\", \"none\");\n    handleArray[i].style(\"display\", \"none\");\n    sliderMulti[i].style(\"display\", \"none\");\n    d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n    // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"hidden\");\n    d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n  }\n}\n\nfunction hideMath() {\n\n  d3.select(\"#btnSubsliders_2\").transition().duration(500).style(\"height\", \"30px\").style(\"width\", 250+\"px\")\n  .style(\"pointer-events\",\"auto\")\n  .attr(\"class\",\"expand-sliders-btn\")\n\n  d3.select(\"#spanSubsliders_2\").transition().duration(350).style(\"opacity\", 1)\n  d3.select(\"#btnSubsliders_2Close\").transition().duration(500).style(\"opacity\",0).style(\"margin-top\",0+\"px\").remove()\n\n  setTimeout(function() {\n      subSliderDivMath.style(\"visibility\", \"hidden\");\n    }, 500);\n\n  for(var i=11; i<15; i++){\n    sliderSVGArray[i].style(\"display\", \"none\");\n    handleArray[i].style(\"display\", \"none\");\n    sliderMulti[i].style(\"display\", \"none\");\n    d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n    // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"hidden\");\n    d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n  }\n}\n\nfunction hideComp() {\n\n  d3.select(\"#btnSubsliders_3\").transition().duration(500).style(\"height\", \"30px\").style(\"width\",\"250px\")\n  .style(\"pointer-events\",\"auto\")\n  .attr(\"class\",\"expand-sliders-btn\")\n\n  d3.select(\"#spanSubsliders_3\").transition().duration(350).style(\"opacity\", 1)\n  d3.select(\"#btnSubsliders_3Close\").transition().duration(500).style(\"opacity\",0).style(\"margin-top\",0+\"px\").remove()\n\n  setTimeout(function() {\n      subSliderDivComp.style(\"visibility\", \"hidden\");\n    }, 500);\n\n  for(var i=15; i<19; i++){\n    sliderSVGArray[i].style(\"display\", \"none\");\n    handleArray[i].style(\"display\", \"none\");\n    sliderMulti[i].style(\"display\", \"none\");\n    d3.select(\"#sliderDiv2_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n    // d3.select(\"#notmuchlots_\"+i+4).style(\"visibility\", \"hidden\");\n    d3.select(\"#sliderDiv_\"+sliderArray[i]).style(\"visibility\", \"hidden\");\n  }\n}\n\nfunction hideAll() {\n  hideLang()\n  hideLogi()\n  hideMath()\n  hideComp()\n}\n\n\n\n\n\n\n1005\n",
			"file": "PaveVisualisation.js",
			"file_size": 227244,
			"file_write_time": 131714009431515616,
			"settings":
			{
				"buffer_size": 221328,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Tutorial4.html",
			"settings":
			{
				"buffer_size": 63628,
				"line_ending": "Windows"
			}
		},
		{
			"file": "Tutorial5.html",
			"settings":
			{
				"buffer_size": 84753,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "public/sass/style.scss",
			"settings":
			{
				"buffer_size": 16267,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "Pave.html",
			"settings":
			{
				"buffer_size": 12148,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "/*PRIORITIES*/\n- mobile version\n\ncurrent:\n- tut3-5 :\n\t- turn off force collide\n\t- transform translate proper on start (see resize)\n\t- transittion in from 0pacityradius\n\t- img links\n\n- axis titles inactivetext \n- graph explainer question position\n- navbar padding\n- different colours for active/inactive/different functions\n- responsivify favesDiv\n- retain colourlegend opacities on favourite hover\n- bug: favourites colour not correct on append (some but not all circles)\n - not appending in order of favourites\n\n- fix graph positions: move #svgCanvas and .annotation-group\nbug: circle 494 in management? check csv\nbug: circle 485 in business? check csv\nbug: circle 157 in sciences? check csv\n\nnext:\n- minimally functional mobile layout\n- show favourites on-hover btn on the side\n- store data & favourites in the cache\n- add a ? button to show explainer div again in graph mode\n- style search results warning message in searchJobTitles()\n- style the slider carousel in the tooltip\n- \"legend: colours, sizes\" compact legend section?\n- check google styleguide for shadows\n(add items to a css grid layout?)\n- tutorial5 answerDiv\n- about/help/feedback styles: increase contrast on hover, underline on that page\n- similar jobs button: limit skill levels to 60%\n- append media queries to all styles to start defaults as mobile-up\n\n\nlater\n- bug: tooltip in graph mode covers right-side circles\n\t- switch pointer-events from none to auto on tooltiplarge()\n- position imgcircle based on tooltip height\n- bug: reset filters button disappears legend buttons!?\n- bug: colour filters click disappears legend buttons!?\n- join tut1 & tut2 together?\n\t(should hover and click be two instructions or one?)\n- move all style to css\n- move btnView btnSuggest styles to css:hover and classes\n- button for \"set the skills to this job's skill levels\"\n- resize circles with page width then detect radius\n\nabout, help, feedback pages\n\nbug: picture z-index\n\ntodos\n- turn on pattern permanently when stuck\n- add 'unstick' function\n- add \"x\" to graph intro div\n- only fade out changing axes\n- subtle dropdown axes?\n- ask users \"what information do you care about in making a career decision?\" to determine views\n- fix 'movebottomdown'\n***********************************\n\n- create data viz lesson 1 2 3\n\n- responsive design\n- drag images out of sticky zone\n\n- add \"drag to sides to favourite -->\" text on drag\n\n- mouseover text?\n\n\nTHURSDAY call :\nfunding opportunities:\n- must incorporate as not-for-profit or social enterprise (for tax reasons)\n- PWC foundation - skills training and careers for youth\n- Civic action - \n\n\nnothing from Fed Gov until next election 11/2019\nsocial foundations only\n\nMcConnell foundation (skills training workshops for entrepreneurs)\n\nIntegrate RBC opportunities for funding?\n\nRed Academy - UX / Web code bootcamp, free student labour\n\n-------------------\nBusiness plan - impact, value, measure? Future vision? Key principles, essentials, how much funding needed, revenue expected?\n-------------------\n\nChris: needs to be self-sustaining, possibly revenue\n\nCompanies are looking for reskilling sources -- \n\nEddie: can use youth as \"community, goodwill\" and charge companies for extras\n\ntighten loop between discovering careers and training for those careers\n\t- link to / team up with online courses\n\n\t- use to explore internal opportunities\n\n\t- collect student interest data for sale...\n\t- identify skills gaps, \n\n\t- RBC: if building a pitch, could mock-up \"enhanced\" version with RBC job postings (could scrape)\n\n-----------------\nbig-ticket items:\n-----------------\n1 - view more: \"schools offering this program\"\n\t- manually create a relational table to connect NOCs to universities\t(between NOCs and Programs, Universities, Colleges)\n\t\tin data folder 4 - Admissions - Programs, Universities, Colleges\n\n2 - research 'landing page best practices' to improve tutorial/landing page\n\n3 - view more: NOC jobBank page data\n\t- convert NOC jobBank pages into a table to load into the 'more info' section of the tooltip\n\n4 - manually create or source kid-friendly job descriptions for tooltips\n\n\n-----------------\nlittle-ticket items:\n-----------------\n- tutorial suggestions? v3 is up, leave comments\n\t- iterate tutorial\n\n- get pics working in github page?\n\n- think about any important or interesting annotations? or let the user annotate?\n(-\"strategy and nuance\" in a sports viz)\n\n- second colour for non-interactive text? Language skills, logic skills...\n\n\n\n\n\n\n- mobile, responsive design [prototype]\n\n- drag to right side to favourite\n- keep patterns on permanently\n\nbug: industrial butchers, seafood processing, other labourers in Managers group (red cluster)\n(check cluster attribute in csv)\nbug: move right-side tooltip left a bit\n\ncurrent:\n\n- read 5 articles about ui\n\tgoodui\n\n-transition from last tutorial page?\n**- make all buttons the same colour\n\t\" clickable actions (links, buttons), selected elements (chosen items), and plain text should be clearly distinct\"\n\t- call to action, repeat if multiple pages \n\t- recommend, don't just show (graph annotations+)\n\t- be explicit about who exactly your product or service is intended for (high school students)\n\t- advanced first-time annotations that are dismissable\n\t- expose options, don't use a dropdown\n\t- \"benefit buttons\" instead of task buttons\n\t\t-- Compare jobs --\n\t\t\t  graph view\n\t- fewer borders\n\t- Selling Benefits instead of features (it will help you to xyz not it can do abc)\n\t- Design for zero-data state \"Hi John, why don't you do your first task over here\" dismissable messages not callouts\n\t- Try Loss Aversion instead of emphasizing gains. \"to simplify career decisions\" not \"to make an informed career decision\"\n\t- keyboard shortcuts?\n\t- Try smaller commitments instead of one big one\n\t- Softer prompts instead of modal windows (less annoying)\n\t- multifunctional controls instead of more parts\n\t- icon labels (filter button \"Filter [icon]\")\n\t- try natural language instead of dry text\n\t\" how much language-related skill would you like to have? \"\n\t- teasing information (job stats) : graph mode w/ annotations early in tutorial\n\t\t- vertical & horizontal mouseover bars \"crosshairs\" tickbox\n\t- try attention grabs instead of neglect\n\t- It's nice when people set expectations for each other. It doesn't take much effort for a person or interface to inform someone when the next task will be completed. You are on step 1 of X. Your choice will result in Y. You will receive something before Z. All those little promises not only inform but also build trust. Unhelpful interfaces on the other hand can come off a little cold as the user is kept in the dark.\n\t- Try Explaining instead of assuming the obvious.\n\t\"how many MATH SKILLS do you want to have?\"\n\n- ruby tutorial\n- before \"warning\" prompt \"filter here\" etc\n- post-filter enterupdate force simulation too tight\n\n- switch graph mode and reset button places?\n\n- add pretty force simulation for equal size circles\n- read 'getting real' & learn ruby & rails\n- sketch 2 tutorial designs for criticisms\n\n\n- wage -- > salary: include low, med, high\n\t- annotate salary: 40k\nbig:\n- sketch specific more/less/fewer decorateYAxis(mode)  per graph mode\n- map annotations over colour split or otherwise fix the legend/split overlap\n\nsmall\n- annotate split view\n- embiggen reset button\n- remove suggested views minimize button?\nbig\nsave button\n- save filter states with mini screenshots\ntutorial\n - sketch a mock-up before changing!\n- more hand-holding, third-person use-case\n\n\n***********************************\n- bug: circles move down slightly after graphmodeoff\n- fix circle graph x position\n- search button to filter button?\n\nnext steps:\n- note \"tutorial x/4\" on tutorial pages\n- filter button instead of search, separate search page\n\n- click color legend to filter industries\n\t- transparencies for on/off\n- move split button to color legend\n\n- filter from both sides\n- fix filter algorithm:\n\t- only language skills?\n\t- determine why some circles are filtering to invisible\n\ncontent list?\n\nscrape pictures for each job\n\npick one\n- bug: filters leaving holes\n\n- lengthen or explain graph views sentences\n- graph view tooltip positions\n- graph view first-time intro div\n- graph view\n add 1 more view for testing (dropdown?)\n add view sectioning\n\nnext:\n- same size initially?\n- transition sliders on reset\n- remove capitalization from axis titles\n- annotate views\n\t- vertical/horizontal dividers and x-y section names\n\t- highlighted areas?\n- hide pause button?\n\n- about, help, feedback pages\n\n- make graph view y axis responsive\n\n- add all tooltips to tutorial\n\t- page 2 & 3 circle tooltips\n\t- page 3 slider tooltips\n\n- switch sliders to dragstarted instead of on drag (to prevent mouseout from ending the drag -- interrupt?)\n\n-'about' page content\n\n- flash when slider under 10 jobs?\n\t- change the background colour of the screen?\n\n- create mobile layout (<=640px)\n  - reposition sliders below circles\n  - combine all buttons above circles\n\n- colour and size legend btnlegend btnsizes mouseover is twitchy, disable mouseover for .5 sec before reenabling pointer events?\n\n- check filter algorithm for possible speed improvements using \"continue\" (next loop) and \"break\" (end loop) -- should be able to run on a chromebook\n\n- bug: tooltips not disappearing on mouseout (when? after click-on, click-elsewhere e.g. button)\n- bug: reset filters not working (when?)\n- bug: subskill sliders cut off at medium resolution\n- tutorial3: remove \"prev\" buttons?\n\n- split button summary statistics for industries\n\n- create slider inset shadow\n- speed up all? transitions\n\n- enclosure diagram containing split view? like on http://charts.vismio.com/9lqjn/\n\n- move div instead of shrinking on tooltipclose (to avoid contents floating out)\n\n- improve \"job titles\" and link top titles to search results\n\n- turn mini skillbars into tooltiplarge skillbars\n\n- Mute Split/Shuffle/Combine features when Graph view is enabled\n\n- switch skill bars to relative scale?\n\n- slow down or emphasize \"pop\" animation\n\n- start tutorial with equal sizes & change size to Number of Jobs (how easy is it to get each job?)\n\n- dropup fix double-click to single-click\n\n- \"language skills\" is ambiguous\n\n- add pause hover explainer div\n- add suggested views explainer divs\n\n- Explain why “lots” of skill = fewer job suggestions in tutorial\n\n- \"job type\" instead of \"job group\"\n- enable minimal (title-only) tooltips on tutorial3\n\n- graph view suggested view walkthroughs, zones on graph\n\n- place tooltip touching circle:\n\t-position buttons on top,\n\t-allow mouseovers through tooltip divs\n\n- explainer divs glitchy switching between each other\n\n- mobile version\n\t-ontouch instead of onclick\n\t\t-buttons: on first touch, open explainer div\n\t\t\ton second touch, activate\n\t-stack filters below break point\n- graphmodeoff post-filtering reset simulation\n- tooltip off in graph mode (switch sides to further outside)\n- a more fun colour legend\n- save button\n- tooltip bottomdiv height too big\n- tooltip divs don't fade-out on mouseout\n- future mode axis & positions\n\nexplainer divs need to come in from the top right, transition their bottoms\n\nmouseenter / mouseleave vs mouveover mouseout\n\n-normalize skill bars & minibars\n\n- change minibar colours to visible (grey-green? for invisible ones only)\n-bug: clickspan not disappearing\n\n- resize future view? y/n\n\n- collapse navbar at the lg breakpoint\n- collapse search bar to search icon\n\n- search not working\n- buttons not on top\n\n-bug: tooltip doesn't re-furl after clicking in out-zone to remove it\n\n- reset filters on tutorial 3?\n\nmobile version = vh instead of vw\n\nTutorial on HOME PAGE and different tutorial pages WOW\n\ngraph mode = move all sliders out to sides\n\nbug: compress graph vertically and movebottomdown/up less\nbug: top right div not aligned?\nbug: colour legend not aligned?\n\t- use position: absolute\n\n- append skill bars inside tooltip div with position bottom\n - multiply tooltip padding x 1.5\n\n- hover div on question marks\n\n- mobile setup & other sizes\n\n- create github readme.md\n\n- think about slider-subslider interactions\n\n- tooltip div side always on-screen (based on mouse location)\n\n- colour legend button\n\n- dropdown x and y selectors\n\n- subslider divs expand from width&height = expand button dimensions\n\n- move notmuchlots\n\n- move industry split circles up a bit\n\n- maybe move the sliders in from the sides? start by putting them all together for mobile\n\nput language, buttons, logic into 3 4-inlines in a row 12-grid\n\n- colour current suggested view button background & disable click\n\n- pause-play in graph mode needs to stay in graph mode;\n\npause then reset needs to stay paused\n(simulation restart if play mode on)\n\n- filtering on graph view + future view needs to keep future colours on\n\n- future view circles don't un-highlight\n\n- hover info button tooltip\n\n- Pave title = refresh button\n\n- graph view off = back to industry split, legend needs to be reset to industry split legend\n\n- combine button disappeared when coming out of graph view (on industry split)\n\n- combine / split / shuffle in a box of four with views\n& combine Size & Colour buttons in a row\n\n- colour button which pops up the legend\n\n- Pause button says \"Pause\" onhover = (for slow connections)\"\n\t- switch to \"stop\" so the simulation never starts again\n\n- make combine buttons unclickable but translucent in graph/future view\n\n- filtered, then turned off graph view: force simulation needs reset\n\n- append subsliders to the div instead of the chart\n\n- set viewbox / circles height based on height/width ratio\n\n- bug: showlogic not hidelegend-ing\n\n- subskill dropdowns -- math & logic (switch position: absolute; right: some%)\n\n- mobile: stretch distance between sliders based on window width\n\n\n- smooth hide \"combine\" on graph and future modes\n\n- bug: mouse-off of sliders while dragging stops dragging -- potential fix: on dragstarted, keep id constant, let go on dragended\n\n- cleaning code to css\n\n- subskill slider function\n- subskill slider white background\n\n- mini-bars to display on hover tooltip\n\n- fix bars: append a 2nd div to click tooltip with bars\n(can get fancy w the design)\n\n- look up refactoring\n\n- joyride style\n\n- job titles search (within job groups)\n\n- bug: tiny empty job in right side under purple group\n\n- mobile compatibility\n- mobile sliders sizes\n\n- mobile tooltip on touch\n\n- favourite toggle\n\n- bug: skills bar chart height on longer tooltips\n\n- responsive design for the canvas:\n - resize works, but viz starts too big on small windows\nsliderSVGArray[i].append(\"g\") // switch to SVG with viewBox?\n\n- responsive design for the sliders\n\n- legend for future mode\n\n\nOther todos:\n\n- combine button fun physics atom-smasher???\n\n-some circles aren't on top\n\n-lang slider not on top\n\n-switch \"pause simulation\" to a toggle & disable other buttons\n-retain filter mode colours, sizes on graph filtering\n\n-tooltip div styling\n\n-dropdowns not working\n\n--on tablet drag, mouseover (disable dragging)\n\n--background color\n\n--cool to 0 after industry split\n\n--search filter & move button in top right\n\n--favourites section\n\n--style legend\n\n--skills expansion buttons\n\n\n--math skills bug\n\n\n--esxpand canvas and add top padding\n\n---modularize graph mode\n\n--enlarge canvas, lower x-axis\n\n--slider design\n\n--future-view legend & move down\n\n--filters positions and reset position\n\n--graph view on == hide buttons 1/3 of group\ntoggle indicator\n\n--mobile view zooming\n\n-filter flexibility\n\n-sliders position relative\n\n-filter positioning, disappearing reappearing\n\n--make canvas responsive\n\n--remove axis ticks\n\n--format auto risk ticks to %s\n\n--axis styles\n\n--graph mode dropdown -> preset buttons\n\nslider handles stuck\n\n--reduce btn sizes\n\n\ntop skills",
			"file": "todos2.txt",
			"file_size": 16102,
			"file_write_time": 131713934070151797,
			"settings":
			{
				"buffer_size": 15674,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 354.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"css",
				"Set Syntax: CSS"
			],
			[
				"snippet",
				"Snippet: snippet1"
			],
			[
				"text pastr",
				"Text Pastry: Generate a list of numbers from 1 to 100"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Snippet: tran",
				"Snippet: snippetTransition"
			],
			[
				"snipper",
				"Snippet: Prototype"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"new view",
				"File: New View into File"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remove pa",
				"Package Control: Remove Package"
			],
			[
				"remove packa",
				"Package Control: Remove Package"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"color pi",
				"Color Picker"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"materi",
				"Material Theme: Configuration"
			],
			[
				"color sch",
				"UI: Select Color Scheme"
			],
			[
				"color scheme",
				"UI: Select Color Scheme"
			],
			[
				"material",
				"Material Theme: Configuration"
			],
			[
				"materia",
				"Material Theme: Advanced configuration"
			],
			[
				"material theme",
				"Material Theme: Configuration"
			],
			[
				"syntax java",
				"Set Syntax: JavaScript"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"syntax javasc",
				"Set Syntax: JavaScript"
			],
			[
				"pack",
				"Package Control: Remove Package"
			],
			[
				"pac",
				"Package Control: Install Package"
			],
			[
				"java",
				"Set Syntax: JavaScript"
			],
			[
				"jav",
				"Set Syntax: JavaScript"
			],
			[
				"syntax javas",
				"Set Syntax: JavaScript"
			],
			[
				"syntax j",
				"Set Syntax: JavaScript"
			],
			[
				"syntax",
				"Set Syntax: Textile"
			],
			[
				"syntax ht",
				"Set Syntax: Python3"
			],
			[
				"syntax js",
				"Set Syntax: JavaScript"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"",
				"Anaconda: Vagrant Status"
			],
			[
				"Package Control: ins",
				"Package Control: List Unmanaged Packages"
			],
			[
				"html",
				"Set Syntax: HTML"
			],
			[
				"javascript",
				"Set Syntax: JavaScript"
			],
			[
				"html ",
				"HTMLBeautify"
			],
			[
				"htm",
				"Set Syntax: HTML"
			],
			[
				"anaconda",
				"Anaconda: Autoformat PEP8 Errors"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"pytho",
				"Set Syntax: Python3"
			],
			[
				"hermes",
				"Hermes: Connect Server"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"package instal",
				"Package Control: Install Package"
			],
			[
				"syntax ",
				"Set Syntax: YAML"
			],
			[
				"py",
				"Set Syntax: Python"
			]
		],
		"width": 704.0
	},
	"console":
	{
		"height": 130.0,
		"history":
		[
			"install dash",
			"pip_install dash",
			"pip install plotly.dash",
			"pip install",
			"pip install plotly",
			"pip install",
			"import plotly",
			"easy_install dash",
			"import dash",
			"?",
			"help.dash",
			"help",
			"exit()",
			"install plotly",
			"install dash",
			"pip install dash"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Daniel2/Documents/a-h-l"
	],
	"file_history":
	[
		"/C/Users/Daniel/Documents/Pave-D3/Tutorial3.html",
		"/C/Users/Daniel/Documents/Pave-D3/Tutorial4.html",
		"/C/Users/Daniel/Documents/Pave-D3/Tutorial2.html",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/transformtranslate.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/tablapphone.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/function.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/window-width.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/window-height.sublime-snippet",
		"/C/Users/Daniel2/Documents/Pave-D3/css/main.css",
		"/C/Users/Daniel2/Documents/Pave-D3/Pave.html",
		"/C/Users/Daniel2/Documents/Pave-D3/index.html",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/mediaQuery.sublime-snippet",
		"/C/Users/Daniel2/Documents/Pave-D3/Tutorial5.html",
		"/C/Users/Daniel2/Documents/Pave-D3/PaveVisualisation.js",
		"/C/Users/Daniel2/Documents/Pave-D3/Tutorial1.html",
		"/C/Users/Daniel2/Documents/Pave-D3/Tutorial2.html",
		"/C/Users/Daniel2/Documents/Pave-D3/Tutorial3.html",
		"/C/Users/Daniel2/Documents/Pave-D3/Tutorial4.html",
		"/C/Users/Daniel2/Documents/Pave-D3/Tutorial4-old.html",
		"/C/Users/Daniel2/Documents/Pave-D3/Tutorial0.html",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/d3SelectAll.sublime-snippet",
		"/C/xampp/htdocs/pave/loginStyle.css",
		"/C/xampp/htdocs/pave/index.php",
		"/C/Users/Daniel2/Documents/Pave-D3/signUp.php",
		"/C/Users/Daniel2/AppData/Local/Temp/Rar$DIa0.842/Please read.txt",
		"/C/Users/Daniel2/Dropbox/computer lessons/mnemonic chatbot.txt",
		"/C/Users/Daniel2/Dropbox/computer lessons/000-999.txt",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/Text Pastry/TextPastry.sublime-settings",
		"/C/Users/Daniel2/Documents/Pave-D3/.git/packed-refs",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/snippet8_selectParentNode.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/snippet7_styleWidthHeight.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/snippet6_consolelog.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/snippet5_function_d_i.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/snippet1functiond.sublime-snippet",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/snippetTransition.sublime-snippet",
		"/C/Users/Daniel2/Documents/a-h-l/css/main.css",
		"/C/Users/Daniel2/Documents/a-h-l/work.html",
		"/C/Users/Daniel2/Documents/a-h-l/todos.txt",
		"/C/Users/Daniel2/Documents/a-h-l/index.html",
		"/C/Users/Daniel2/Documents/a-h-l/navbar.html",
		"/C/Users/Daniel2/Documents/Pave-D3/PaveVisualisation-3-24-2018.js",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/ColorHighlighter.sublime-settings",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/Color Highlighter/ColorHighlighter.sublime-settings",
		"/C/Users/Daniel2/Documents/Pave-D3/examples/Bootstrap.html",
		"/C/Users/Daniel2/Documents/Pave-D3/archive/index-3-6-2018.html",
		"/C/Users/Daniel2/Documents/Pave-D3/archive/index_jobTitles.html",
		"/C/Users/Daniel2/Documents/Pave-D3/archive/PaveBubbles.html",
		"/C/Users/Daniel2/Documents/Pave-D3/archive/index_redo.html",
		"/C/Users/Daniel2/Documents/Pave-D3/archive/cols_index.html",
		"/C/Users/Daniel2/Documents/Pave-D3/joyridetour.html",
		"/C/Users/Daniel2/Documents/Pave-D3/cols_index.html",
		"/C/Users/Daniel2/Documents/Pave-D3/todos2.txt",
		"/C/Users/Daniel2/Documents/Pave-D3/Pave.sublime-workspace",
		"/C/Users/Daniel2/Documents/Pave-D3/node_modules/jquery.joyride/jquery.joyride.css",
		"/C/Users/Daniel2/AppData/Local/LiveReload/Logs/LiveReload_2018_03_15_092939.txt",
		"/C/Users/Daniel2/Documents/Pave-D3/foundation-joyride/README.md",
		"/C/Users/Daniel2/Documents/Pave-D3/node_modules/jquery.joyride/README.markdown",
		"/C/Users/Daniel2/Documents/Pave-D3/js/app.js",
		"/C/Users/Daniel2/Documents/Pave-D3/foundation-joyride/node_modules/jquery/dist/jquery.js",
		"/C/Users/Daniel2/Documents/Pave-D3/foundation-joyride/node_modules/jquery/dist/jquery.min.js",
		"/C/Users/Daniel2/Documents/Pave-D3/foundation-joyride/dist/solo.joyride.js",
		"/C/Users/Daniel2/Documents/Pave-D3/foundation-joyride/js/joyride.js",
		"/C/Users/Daniel2/Documents/Pave-D3/foundation-joyride/dist/foundation.joyride.js",
		"/C/Users/Daniel2/Downloads/foundation-6.4.2-complete/js/app.js",
		"/C/Users/Daniel2/AppData/Local/Temp/Rar$EXa0.265/index.html",
		"/C/Users/Daniel2/AppData/Local/Temp/Rar$DIa0.031/README.md",
		"/C/Users/Daniel2/AppData/Local/Temp/Rar$DIa0.199/README.md",
		"/C/Users/Daniel2/Documents/Pave-D3/index_jobTitles.html",
		"/C/Users/Daniel2/Documents/Pave-D3/PaveVisualisation_jobTitles.js",
		"/C/Users/Daniel2/Documents/Pave-D3/index2-redo.html",
		"/C/Users/Daniel2/Documents/Pave-D3/PaveVisualisation2-redo.js",
		"/C/Users/Daniel2/Documents/Pave-D3/css/bootstrap.css",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/SideBarEnhancements/Side Bar.sublime-settings",
		"/C/Users/Daniel2/Documents/Pave-D3/Pave.js",
		"/C/Users/Daniel2/Documents/Pave-D3/index.js",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/C/Users/Daniel2/Documents/Pave-D3/home.html",
		"/C/Users/Daniel2/Documents/Pave-D3/testing/svg-sliders.js",
		"/C/Users/Daniel2/Documents/Pave-D3/dcorn068.github.io/svg-sliders.js",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/C/Users/Daniel2/Documents/Pave-D3/dcorn068.github.io/index.html",
		"/C/Users/Daniel2/Documents/Pave-D3/dcorn068.github.io/PaveVisualisation.js",
		"/C/Users/Daniel2/Documents/Pave-D3/Procfile",
		"/C/Users/Daniel2/Documents/Pave-D3/index.php",
		"/C/Users/Daniel2/Documents/Pave-D3/composer.json",
		"/C/Users/Daniel2/Documents/Pave-D3/PaveBubbles.js",
		"/C/Users/Daniel2/Documents/Pave-D3-progress-pics/filterSlider1Workers.js",
		"/C/Users/Daniel2/Documents/Pave-D3-progress-pics/PaveBubbles backup 27-02-2018.js",
		"/C/Users/Daniel2/Documents/Pave-D3/examples/enter exit update.html",
		"/C/Users/Daniel2/Documents/Pave-D3/serverLaptop.bat",
		"/C/Users/Daniel2/Documents/Pave-D3/examples/slider.js",
		"/C/Users/Daniel2/Documents/Pave-D3/examples/Filtering Nodes.js",
		"/C/Users/Daniel2/Documents/Pave-D3/js/slider.js",
		"/C/Users/Daniel2/Documents/Pave-D3/svg-sliders.js",
		"/C/Users/Daniel2/Documents/Pave-D3/js/graph-module.js",
		"/C/Users/Daniel2/Documents/Pave-D3/js/graph-mode.js",
		"/C/Users/Daniel2/Documents/Pave-D3/slider.js",
		"/C/Users/Daniel2/Documents/Pave-D3/testing/bubbles.js",
		"/C/Users/Daniel2/Documents/Pave-D3/forceCluster.js",
		"/C/Users/Daniel2/Dropbox/SPC Data - Backup/Python/todo - Civic Tech.txt",
		"/C/Users/Daniel2/Documents/Pave-D3/ClusterIV.js",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/index_1.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/chapter_09/21_on.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/chapter_09/26_removing_values.html",
		"/C/Users/Daniel2/Dropbox/computer lessons/right-click properties, file location.txt",
		"/C/Users/Daniel2/Dropbox/computer lessons/typing - look wide, notice the arrangement of the keys.txt",
		"/C/Users/Daniel2/Dropbox/computer lessons/Intro to Computers Speed Lessons/Chrome shortcuts & extensions/Chrome Extensions.txt",
		"/C/Users/Daniel2/Dropbox/computer lessons/Intro to Computers Intermediate/Chrome shortcuts & extensions/Research shortcuts.txt",
		"/C/Users/Daniel2/Dropbox/computer lessons/Intro to Computers Intermediate/Chrome shortcuts & extensions/Youtube shortcuts.txt",
		"/C/Users/Daniel2/Dropbox/computer lessons/Intro to Computers Intermediate/Chrome shortcuts & extensions/Chrome shortcuts.txt",
		"/C/Users/Public/Desktop/R@1n.txt",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/index2.html",
		"/C/Users/Daniel2/Documents/Pave-D3/ClusterIV.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3figures1.html",
		"/C/Users/Daniel2/Documents/Pave-D3/server.bat",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/index_force-collapsible.html",
		"/C/Users/Daniel2/Dropbox/SPC Data - Backup/python scraping/pythonexcelloop.txt",
		"/C/Users/Daniel2/Dropbox/SPC Data - Backup/python scraping/pythonexcelloop.py",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/index_old.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/chapter_05/03_csv_loading_example.html",
		"/C/Users/Daniel2/AppData/Roaming/Sublime Text 3/Packages/Javascript Beautify/Default (Windows).sublime-keymap",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/chapter_09/27_data_join_with_key.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/chapter_09/22_on_combo_transition.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/chapter_09/25_adding_values.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/chapter_09/19_axes_static.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/server.bat",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/d3-book-master/chapter_07/04_scaled_plot_padding.html",
		"/C/Users/Daniel2/Dropbox/Pave_D3_Project/d3-book-master/d3-book-master/chapter_07/02_scaled_plot.html"
	],
	"find":
	{
		"height": 48.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"collide",
			"resize",
			"forcegrav",
			"circles",
			"transform",
			"collide",
			"forceCollide",
			"circles",
			"searchdiv",
			"searchDiv",
			"jobtitle",
			"search-btn",
			"search",
			"link-top",
			"box-shadow",
			"titlebar",
			"append(\"sv",
			"append(\"s",
			"chart",
			"\"chart\"",
			"chart",
			"imgRadius",
			"hideHoverImg",
			"-pattern",
			"defs",
			"img-patt",
			"img/",
			"p-gra",
			"p-graphModes",
			"inactive",
			"imgGraphExplain",
			"axisLabelY",
			"btnColours",
			"legend",
			"inactiveHeader",
			"inactivetex",
			"sliderTitlesArray[i]",
			"notmuchlots",
			"d(\"text\"",
			"text",
			"\"text\"",
			"favesd",
			"appendFavourites",
			"btnfavour",
			"\"opacity\",1)",
			"+ 10)",
			"+ 5",
			"\"opacity\",1)",
			"+ 5",
			" + \"px\"",
			"favesdiv",
			"hide()",
			"favesArray",
			"collapseFavourites",
			"favesDiv",
			"height",
			"favesmode",
			"faveNodes",
			"favecircle",
			"nodes.",
			"nodes",
			"circles =",
			"var circles",
			"circles =",
			"\"Favourites\"",
			"favesdiv",
			"getSum",
			"favourites",
			"favourited",
			"favourites",
			"fa-star",
			"createannot",
			"createAnnotations",
			"          d3.selectAll(\".annotation-group\").transition().duration(500).style(\"opacity\",0).remove()\n",
			"closelegends",
			"          .on(\"tick\", tick).alpha(0.1).alphaTarget(0.001).restart(); }, 450);\n",
			"          .on(\"tick\", tick).alpha(0.1).alphaTarget(0.001).restart(); }, 500);\n",
			"elay(function(d, i) { return i * 1}",
			"        .delay(function(d, i) { return i * 1})\n",
			" circles.transition().duration(100)\n        .delay(function(d, i) { return i * 1})",
			"          simulation.alpha(0.7).alphaTarget(0.001).restart(); }, 200);\n",
			"forceYSeparate",
			"        .force(\"collide\", forceCollide)\n        // .force(\"cluster\", forceCluster)\n        // .force(\"gravity\", forceGravity)\n        // .force(\"x\", forceXCombine)",
			"      if(graphMode == 0 && colourLegendMode == 0) {\n        simulation\n        .force(\"collide\", forceCollide)\n        .force(\"gravity\", forceGravity)",
			"resetSimulation",
			"      simulation\n        .force(\"collide\", forceCollide)\n        .force(\"gravity\", forceGravity)",
			"      } else if(graphMode == 0 && colourLegendMode == 1){\n        forceCollide = d3.forceCollide(function(d){return d.radius})\n        simulation\n        .force(\"collide\", forceCollide)\n        simulation.alpha(0.1)\n      }",
			"graphMode == 0 && colourLegendMode == 1){\n        simulation.alpha(0.7)",
			"expandcolours",
			"10",
			"31",
			"ind",
			"function(){return",
			"thisCircleQuery",
			"thisCircle",
			"count",
			"thisIndustry",
			"new arr",
			"foreach",
			"clusters",
			"centerX",
			"graph.length",
			"circles.",
			"29",
			"3",
			"41",
			"81",
			"212",
			"104",
			"171",
			"311",
			"494",
			"163",
			"81",
			"24",
			"291",
			"165",
			"477",
			"128",
			"420",
			"473",
			"204",
			"\"colours\"",
			"209",
			"414",
			"14",
			"116",
			"133"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"sliderSVGArray[i].style(\"display\", \"inline",
			"sliderSVGArray[i+j].style(\"display\", \"none",
			"sliderSVGArray[i+j].style(\"display\", \"inline",
			"sliderSVGArray[i].style(\"display\", \"inline",
			"visibility\", \"hidden\"",
			"visibility\", \"visible\""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "PaveVisualisation.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 221328,
						"regions":
						{
						},
						"selection":
						[
							[
								28028,
								28071
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										28057,
										28058
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										28027,
										28028
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										28070,
										28071
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/double_quote.png",
										"region.greenish"
									]
								},
								"open":
								{
									"1":
									[
										28065,
										28066
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 10153.3333333,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Tutorial4.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 63628,
						"regions":
						{
						},
						"selection":
						[
							[
								9477,
								9477
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										9558,
										9559
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										9520,
										9521
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										9625,
										9626
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										9476,
										9477
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2774.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "Tutorial5.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 84753,
						"regions":
						{
						},
						"selection":
						[
							[
								19819,
								19819
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										19822,
										19823
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										19575,
										19576
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										19822,
										19823
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										19575,
										19576
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7272.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "public/sass/style.scss",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 16267,
						"regions":
						{
						},
						"selection":
						[
							[
								1535,
								1543
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
									"1":
									[
										14824,
										14825
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/curly_bracket.png",
										"region.purplish"
									]
								},
								"open":
								{
									"1":
									[
										14769,
										14770
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"syntax": "Packages/CSS/CSS.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 634.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "Pave.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12148,
						"regions":
						{
						},
						"selection":
						[
							[
								8696,
								8696
							]
						],
						"settings":
						{
							"auto_complete": false,
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										8733,
										8739
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/tag.png",
										"region.orangish"
									]
								},
								"open":
								{
									"1":
									[
										8697,
										8703
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content"
							],
							"syntax": "Packages/HTML/HTML.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2566.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "todos2.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 15674,
						"regions":
						{
						},
						"selection":
						[
							[
								180,
								180
							]
						],
						"settings":
						{
							"bracket_highlighter.busy": false,
							"bracket_highlighter.clone": -1,
							"bracket_highlighter.clone_locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.clone_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"bracket_highlighter.locations":
							{
								"close":
								{
								},
								"icon":
								{
								},
								"open":
								{
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content"
							],
							"history_list_is_closing": true,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 69.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.653548434124,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 207.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/python3-1.sublime-build",
	"project": "Pave.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"tut4",
				"Pave-D3\\Tutorial4.html"
			],
			[
				"tut5",
				"Pave-D3\\Tutorial5.html"
			],
			[
				"tut3",
				"Pave-D3\\Tutorial3.html"
			],
			[
				"tut2",
				"Pave-D3\\Tutorial2.html"
			],
			[
				"pave",
				"Pave-D3\\Pave.html"
			],
			[
				"style",
				"Pave-D3\\public\\sass\\style.scss"
			],
			[
				"inde",
				"Pave-D3\\index.html"
			],
			[
				"main.",
				"Pave-D3\\css\\main.css"
			],
			[
				"pave.ht",
				"Pave-D3\\Pave.html"
			],
			[
				"pavevisu",
				"Pave-D3\\PaveVisualisation.js"
			],
			[
				"index",
				"Pave-D3\\index.html"
			],
			[
				"pave.h",
				"Pave-D3\\Pave.html"
			],
			[
				"main.cs",
				"Pave-D3\\css\\main.css"
			],
			[
				"tut0",
				"Pave-D3\\Tutorial0.html"
			],
			[
				"tuto4",
				"Pave-D3\\Tutorial4.html"
			],
			[
				"tuto5",
				"Pave-D3\\Tutorial5.html"
			],
			[
				"tutorial4",
				"Pave-D3\\Tutorial4.html"
			],
			[
				"tut1",
				"Pave-D3\\Tutorial1.html"
			],
			[
				"tuto",
				"Pave-D3\\Tutorial4.html"
			],
			[
				"main.css",
				"Pave-D3\\css\\main.css"
			],
			[
				"main",
				"Pave-D3\\css\\main.css"
			],
			[
				"tutorial3",
				"Pave-D3\\Tutorial3.html"
			],
			[
				"tutorial2",
				"Pave-D3\\Tutorial2.html"
			],
			[
				"tutorial",
				"Pave-D3\\Tutorial0.html"
			],
			[
				"tutorial1",
				"Pave-D3\\Tutorial1.html"
			],
			[
				"tu",
				"Pave-D3\\Tutorial0.html"
			],
			[
				"tutor",
				"Pave-D3\\Tutorial1.html"
			],
			[
				"tutoria",
				"Pave-D3\\Tutorial3.html"
			],
			[
				"tutori",
				"Pave-D3\\Tutorial3.html"
			],
			[
				"pavevi",
				"Pave-D3\\PaveVisualisation.js"
			],
			[
				"utorial1",
				"Pave-D3\\Tutorial1.html"
			],
			[
				"tut",
				"Pave-D3\\Tutorial1.html"
			],
			[
				"pavev",
				"Pave-D3\\PaveVisualisation.js"
			],
			[
				"main.c",
				"Pave-D3\\css\\main.css"
			],
			[
				"todo",
				"Pave-D3\\todos2.txt"
			],
			[
				"pav",
				"Pave.html"
			],
			[
				"m",
				"css\\main.css"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 50.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
